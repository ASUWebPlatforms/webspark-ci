{#
/**
 * @file
 * Default theme implementation for displaying a view as a table.
 *
 * Available variables:
 * - attributes: Remaining HTML attributes for the element.
 *   - class: HTML classes that can be used to style contextually through CSS.
 * - title : The title of this group of rows.
 * - header: The table header columns.
 *   - attributes: Remaining HTML attributes for the element.
 *   - content: HTML classes to apply to each header cell, indexed by
 *   the header's key.
 *   - default_classes: A flag indicating whether default classes should be
 *     used.
 * - caption_needed: Is the caption tag needed.
 * - caption: The caption for this table.
 * - accessibility_description: Extended description for the table details.
 * - accessibility_summary: Summary for the table details.
 * - rows: Table row items. Rows are keyed by row number.
 *   - attributes: HTML classes to apply to each row.
 *   - columns: Row column items. Columns are keyed by column number.
 *     - attributes: HTML classes to apply to each column.
 *     - content: The column content.
 *   - default_classes: A flag indicating whether default classes should be
 *     used.
 * - responsive: A flag indicating whether table is responsive.
 * - sticky: A flag indicating whether table header is sticky.
 * - summary_element: A render array with table summary information (if any).
 *
 * @see template_preprocess_views_view_table()
 *
 * @ingroup themeable
 */
#}
{%
  set classes = [
    'cols-' ~ header|length,
    responsive ? 'responsive-enabled',
    sticky ? 'sticky-enabled',
  ]
%}

<table{{ attributes.addClass(classes) }}>
  {% if caption_needed %}
    <caption>
    {% if caption %}
      {{ caption }}
    {% else %}
      {{ title }}
    {% endif %}
    {% if (summary_element is not empty) %}
      {{ summary_element }}
    {% endif %}
    </caption>
  {% endif %}
  {% if header %}
    <thead>
      <tr>
        {% for key, column in header %}
          {% if column.default_classes %}
            {%
              set column_classes = [
                'views-field',
                'views-field-' ~ fields[key],
              ]
            %}
          {% endif %}
          <th{{ column.attributes.addClass(column_classes).setAttribute('scope', 'col') }}>
            {%- if column.wrapper_element -%}
              <{{ column.wrapper_element }}>
                {%- if column.url -%}
                  <a href="{{ column.url }}" title="{{ column.title }}" rel="nofollow">{{ column.content }}{{ column.sort_indicator }}</a>
                {%- else -%}
                  {{ column.content }}{{ column.sort_indicator }}
                {%- endif -%}
              </{{ column.wrapper_element }}>
            {%- else -%}
              {%- if column.url -%}
                <a href="{{ column.url }}" title="{{ column.title }}" rel="nofollow">{{ column.content }}{{ column.sort_indicator }}</a>
              {%- else -%}
                {{- column.content }}{{ column.sort_indicator }}
              {%- endif -%}
            {%- endif -%}
          </th>
        {% endfor %}
      </tr>
    </thead>
  {% endif %}
  <tbody>
    {% for row in rows %}
      <tr{{ row.attributes }}>
        {% for key, column in row.columns %}
          {% if column.default_classes %}
            {%
              set column_classes = [
                'views-field'
              ]
            %}
            {% for field in column.fields %}
              {% set column_classes = column_classes|merge(['views-field-' ~ field]) %}
            {% endfor %}
          {% endif %}
          <td{{ column.attributes.addClass(column_classes) }}>
            {%- if column.wrapper_element -%}
              <{{ column.wrapper_element }}>
              {% for content in column.content %}
                {{ content.separator }}{{ content.field_output }}
              {% endfor %}
              </{{ column.wrapper_element }}>
            {%- else -%}
              {% for content in column.content %}
                {{- content.separator }}{{ content.field_output -}}
              {% endfor %}
            {%- endif %}
          </td>
        {% endfor %}
      </tr>
    {% endfor %}
  </tbody>
</table>

{#
/**
 * @file
 * Template for card arrangement wrapper.
 */
#}
{# {% set classes = [
  'block',
  'block-' ~ configuration.provider|clean_class,
  'block-' ~ plugin_id|clean_class,
] %}
{% set class_layout = content['#view_mode'] == 'landscape' ? 'uds-card-arrangement-vertical'%}
<div{{ attributes.addClass(classes) }}>
  {{ title_prefix }}
  {% if label %}
    {% block label %}
      <h2{{ title_attributes }}>{{ label }}</h2>
    {% endblock %}
  {% endif %}
  {{ title_suffix }}
  {{ content.field_anchor_menu_settings }}
  {{ content.field_tooltip }}
  <div class="uds-card-arrangement {{ class_layout }}">
    <div class="uds-card-arrangement-content-container {{ text_color }}">
      <h2>{{ heading }}</h2>
      {{ text }}
      {{ cta }}
    </div>
    <div class="uds-card-arrangement-card-container {{ not class_layout ? 'auto-arrangement' }} {{ not class_layout ? columns }}">
      {{ cards }}
    </div>
  </div>

  {{ content|without('field_heading', 'field_cta', 'field_formatted_text', 'field_card_group', 'field_card_arrangement_display', 'field_anchor_menu_settings', 'field_display_orientation') }}
</div> #}

<h1> My header text is {{options.heading}} </h1>
<h1> My text color is {{options.heading_color}} </h1>
<h1> My card arrangement style is {{options.custom_arrangement_style}} </h1>
<h1> Show card border is {{options.card_is_border_showing}} </h1>
<h1> Card Media is {{options.card_media}} </h1>
<h1> Card Heading is {{options.card_heading}} </h1>
<h1> Card Body is {{options.card_body}} </h1>
<h1> Card CTA is {{options.card_cta}} </h1>
<h1> My top spacing value is {{options.spacing_top}} </h1>
<h1> My bottom spacing value is {{options.spacing_bottom}} </h1>
<h1> My column value is {{options.columns_to_display}} </h1>
<h1> My View Mode is {{options.view_mode}} </h1>

{# markup copied from web/themes/webspark/renovation/src/components/cards/card-arrangement.twig #}

<div class="uds-card-arrangement {{ class_layout }}">
  <div class="uds-card-arrangement-content-container {{ text_color }}">
    <h2>{{ heading }}</h2>
    {{ text }}
    {{ cta }}
  </div>
  <div class="uds-card-arrangement-card-container {{ not class_layout ? 'auto-arrangement' }} {{options.columns_to_display}}{#{{ not class_layout ? columns }}#}">
    {{ cards }}
  </div>
</div>
