(function(global, factory) {
  typeof exports === "object" && typeof module !== "undefined" ? factory(exports, require("react"), require("react-dom")) : typeof define === "function" && define.amd ? define(["exports", "react", "react-dom"], factory) : (global = typeof globalThis !== "undefined" ? globalThis : global || self, factory(global.AsuHeaderFooter = {}, global.React, global.ReactDOM));
})(this, function(exports2, r$1, require$$0) {
  "use strict";var __defProp = Object.defineProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });

  function getDefaultExportFromCjs(x2) {
    return x2 && x2.__esModule && Object.prototype.hasOwnProperty.call(x2, "default") ? x2["default"] : x2;
  }
  __name(getDefaultExportFromCjs, "getDefaultExportFromCjs");
  var createRoot;
  var m$2 = require$$0;
  {
    createRoot = m$2.createRoot;
    m$2.hydrateRoot;
  }
  var jsxRuntime = { exports: {} };
  var reactJsxRuntime_production_min = {};
  var hasRequiredReactJsxRuntime_production_min;
  function requireReactJsxRuntime_production_min() {
    if (hasRequiredReactJsxRuntime_production_min) return reactJsxRuntime_production_min;
    hasRequiredReactJsxRuntime_production_min = 1;
    var f = r$1, k2 = Symbol.for("react.element"), l = Symbol.for("react.fragment"), m2 = Object.prototype.hasOwnProperty, n = f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner, p = { key: true, ref: true, __self: true, __source: true };
    function q2(c2, a2, g2) {
      var b2, d = {}, e = null, h = null;
      void 0 !== g2 && (e = "" + g2);
      void 0 !== a2.key && (e = "" + a2.key);
      void 0 !== a2.ref && (h = a2.ref);
      for (b2 in a2) m2.call(a2, b2) && !p.hasOwnProperty(b2) && (d[b2] = a2[b2]);
      if (c2 && c2.defaultProps) for (b2 in a2 = c2.defaultProps, a2) void 0 === d[b2] && (d[b2] = a2[b2]);
      return { $$typeof: k2, type: c2, key: e, ref: h, props: d, _owner: n.current };
    }
    __name(q2, "q");
    reactJsxRuntime_production_min.Fragment = l;
    reactJsxRuntime_production_min.jsx = q2;
    reactJsxRuntime_production_min.jsxs = q2;
    return reactJsxRuntime_production_min;
  }
  __name(requireReactJsxRuntime_production_min, "requireReactJsxRuntime_production_min");
  {
    jsxRuntime.exports = requireReactJsxRuntime_production_min();
  }
  var jsxRuntimeExports = jsxRuntime.exports;
  var propTypes = { exports: {} };
  var reactIs$1 = { exports: {} };
  var reactIs_production_min = {};
  var hasRequiredReactIs_production_min;
  function requireReactIs_production_min() {
    if (hasRequiredReactIs_production_min) return reactIs_production_min;
    hasRequiredReactIs_production_min = 1;
    var b2 = "function" === typeof Symbol && Symbol.for, c2 = b2 ? Symbol.for("react.element") : 60103, d = b2 ? Symbol.for("react.portal") : 60106, e = b2 ? Symbol.for("react.fragment") : 60107, f = b2 ? Symbol.for("react.strict_mode") : 60108, g2 = b2 ? Symbol.for("react.profiler") : 60114, h = b2 ? Symbol.for("react.provider") : 60109, k2 = b2 ? Symbol.for("react.context") : 60110, l = b2 ? Symbol.for("react.async_mode") : 60111, m2 = b2 ? Symbol.for("react.concurrent_mode") : 60111, n = b2 ? Symbol.for("react.forward_ref") : 60112, p = b2 ? Symbol.for("react.suspense") : 60113, q2 = b2 ? Symbol.for("react.suspense_list") : 60120, r2 = b2 ? Symbol.for("react.memo") : 60115, t2 = b2 ? Symbol.for("react.lazy") : 60116, v2 = b2 ? Symbol.for("react.block") : 60121, w2 = b2 ? Symbol.for("react.fundamental") : 60117, x2 = b2 ? Symbol.for("react.responder") : 60118, y2 = b2 ? Symbol.for("react.scope") : 60119;
    function z2(a2) {
      if ("object" === typeof a2 && null !== a2) {
        var u = a2.$$typeof;
        switch (u) {
          case c2:
            switch (a2 = a2.type, a2) {
              case l:
              case m2:
              case e:
              case g2:
              case f:
              case p:
                return a2;
              default:
                switch (a2 = a2 && a2.$$typeof, a2) {
                  case k2:
                  case n:
                  case t2:
                  case r2:
                  case h:
                    return a2;
                  default:
                    return u;
                }
            }
          case d:
            return u;
        }
      }
    }
    __name(z2, "z");
    function A(a2) {
      return z2(a2) === m2;
    }
    __name(A, "A");
    reactIs_production_min.AsyncMode = l;
    reactIs_production_min.ConcurrentMode = m2;
    reactIs_production_min.ContextConsumer = k2;
    reactIs_production_min.ContextProvider = h;
    reactIs_production_min.Element = c2;
    reactIs_production_min.ForwardRef = n;
    reactIs_production_min.Fragment = e;
    reactIs_production_min.Lazy = t2;
    reactIs_production_min.Memo = r2;
    reactIs_production_min.Portal = d;
    reactIs_production_min.Profiler = g2;
    reactIs_production_min.StrictMode = f;
    reactIs_production_min.Suspense = p;
    reactIs_production_min.isAsyncMode = function(a2) {
      return A(a2) || z2(a2) === l;
    };
    reactIs_production_min.isConcurrentMode = A;
    reactIs_production_min.isContextConsumer = function(a2) {
      return z2(a2) === k2;
    };
    reactIs_production_min.isContextProvider = function(a2) {
      return z2(a2) === h;
    };
    reactIs_production_min.isElement = function(a2) {
      return "object" === typeof a2 && null !== a2 && a2.$$typeof === c2;
    };
    reactIs_production_min.isForwardRef = function(a2) {
      return z2(a2) === n;
    };
    reactIs_production_min.isFragment = function(a2) {
      return z2(a2) === e;
    };
    reactIs_production_min.isLazy = function(a2) {
      return z2(a2) === t2;
    };
    reactIs_production_min.isMemo = function(a2) {
      return z2(a2) === r2;
    };
    reactIs_production_min.isPortal = function(a2) {
      return z2(a2) === d;
    };
    reactIs_production_min.isProfiler = function(a2) {
      return z2(a2) === g2;
    };
    reactIs_production_min.isStrictMode = function(a2) {
      return z2(a2) === f;
    };
    reactIs_production_min.isSuspense = function(a2) {
      return z2(a2) === p;
    };
    reactIs_production_min.isValidElementType = function(a2) {
      return "string" === typeof a2 || "function" === typeof a2 || a2 === e || a2 === m2 || a2 === g2 || a2 === f || a2 === p || a2 === q2 || "object" === typeof a2 && null !== a2 && (a2.$$typeof === t2 || a2.$$typeof === r2 || a2.$$typeof === h || a2.$$typeof === k2 || a2.$$typeof === n || a2.$$typeof === w2 || a2.$$typeof === x2 || a2.$$typeof === y2 || a2.$$typeof === v2);
    };
    reactIs_production_min.typeOf = z2;
    return reactIs_production_min;
  }
  __name(requireReactIs_production_min, "requireReactIs_production_min");
  var hasRequiredReactIs;
  function requireReactIs() {
    if (hasRequiredReactIs) return reactIs$1.exports;
    hasRequiredReactIs = 1;
    {
      reactIs$1.exports = requireReactIs_production_min();
    }
    return reactIs$1.exports;
  }
  __name(requireReactIs, "requireReactIs");
  var ReactPropTypesSecret_1;
  var hasRequiredReactPropTypesSecret;
  function requireReactPropTypesSecret() {
    if (hasRequiredReactPropTypesSecret) return ReactPropTypesSecret_1;
    hasRequiredReactPropTypesSecret = 1;
    var ReactPropTypesSecret = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
    ReactPropTypesSecret_1 = ReactPropTypesSecret;
    return ReactPropTypesSecret_1;
  }
  __name(requireReactPropTypesSecret, "requireReactPropTypesSecret");
  var factoryWithThrowingShims;
  var hasRequiredFactoryWithThrowingShims;
  function requireFactoryWithThrowingShims() {
    if (hasRequiredFactoryWithThrowingShims) return factoryWithThrowingShims;
    hasRequiredFactoryWithThrowingShims = 1;
    var ReactPropTypesSecret = requireReactPropTypesSecret();
    function emptyFunction() {
    }
    __name(emptyFunction, "emptyFunction");
    function emptyFunctionWithReset() {
    }
    __name(emptyFunctionWithReset, "emptyFunctionWithReset");
    emptyFunctionWithReset.resetWarningCache = emptyFunction;
    factoryWithThrowingShims = /* @__PURE__ */ __name(function() {
      function shim(props, propName, componentName, location, propFullName, secret) {
        if (secret === ReactPropTypesSecret) {
          return;
        }
        var err = new Error(
          "Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types"
        );
        err.name = "Invariant Violation";
        throw err;
      }
      __name(shim, "shim");
      shim.isRequired = shim;
      function getShim() {
        return shim;
      }
      __name(getShim, "getShim");
      var ReactPropTypes = {
        array: shim,
        bigint: shim,
        bool: shim,
        func: shim,
        number: shim,
        object: shim,
        string: shim,
        symbol: shim,
        any: shim,
        arrayOf: getShim,
        element: shim,
        elementType: shim,
        instanceOf: getShim,
        node: shim,
        objectOf: getShim,
        oneOf: getShim,
        oneOfType: getShim,
        shape: getShim,
        exact: getShim,
        checkPropTypes: emptyFunctionWithReset,
        resetWarningCache: emptyFunction
      };
      ReactPropTypes.PropTypes = ReactPropTypes;
      return ReactPropTypes;
    }, "factoryWithThrowingShims");
    return factoryWithThrowingShims;
  }
  __name(requireFactoryWithThrowingShims, "requireFactoryWithThrowingShims");
  {
    propTypes.exports = requireFactoryWithThrowingShims()();
  }
  var propTypesExports = propTypes.exports;
  const PropTypes = /* @__PURE__ */ getDefaultExportFromCjs(propTypesExports);
  function trackReactComponent({
    packageName = "",
    component = "",
    type = "",
    configuration = {}
  }) {
    if (!packageName || !component) {
      console.error("trackReactComponent: Missing required arguments.");
      return;
    }
    window.uds = window.uds || {};
    window.uds.package = window.uds.package || {};
    window.uds.package[packageName] = {
      component,
      type,
      configuration
    };
  }
  __name(trackReactComponent, "trackReactComponent");
  const LogoPropTypes = {
    alt: PropTypes.string,
    title: PropTypes.string,
    src: PropTypes.string,
    mobileSrc: PropTypes.string,
    brandLink: PropTypes.string
  };
  const TitlePropTypes = {
    baseUrl: PropTypes.string,
    parentOrg: PropTypes.string,
    parentOrgUrl: PropTypes.string,
    animate: PropTypes.bool
  };
  const LoginPropTypes = {
    loggedIn: PropTypes.bool,
    loginLink: PropTypes.string,
    logoutLink: PropTypes.string,
    userName: PropTypes.string
  };
  const ButtonPropTypes = {
    text: PropTypes.string.isRequired,
    color: PropTypes.oneOf(["gold", "maroon", "light", "dark"]),
    href: PropTypes.string.isRequired,
    classes: PropTypes.string,
    onClick: PropTypes.func,
    onFocus: PropTypes.func
  };
  const NavTreePropTypes = PropTypes.shape({
    id: PropTypes.number,
    href: PropTypes.string,
    text: PropTypes.string,
    type: PropTypes.string,
    selected: PropTypes.bool,
    items: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.object)),
    buttons: PropTypes.arrayOf(PropTypes.shape(ButtonPropTypes)),
    class: PropTypes.string
  });
  const HeaderPropTypes = {
    isPartner: PropTypes.bool,
    navTree: PropTypes.arrayOf(NavTreePropTypes),
    partnerLogo: PropTypes.shape(LogoPropTypes),
    logo: PropTypes.shape(LogoPropTypes),
    title: PropTypes.string,
    parentOrg: TitlePropTypes.parentOrg,
    parentOrgUrl: TitlePropTypes.parentOrgUrl,
    baseUrl: TitlePropTypes.baseUrl,
    loggedIn: LoginPropTypes.loggedIn,
    userName: LoginPropTypes.userName,
    loginLink: LoginPropTypes.loginLink,
    onLoginClick: PropTypes.func,
    logoutLink: LoginPropTypes.logoutLink,
    onLogoutClick: PropTypes.func,
    buttons: PropTypes.arrayOf(PropTypes.shape(ButtonPropTypes)),
    breakpoint: PropTypes.oneOf(["Lg", "Xl"]),
    animateTitle: PropTypes.bool,
    expandOnHover: PropTypes.bool,
    mobileNavTree: PropTypes.arrayOf(NavTreePropTypes),
    hasNavigation: PropTypes.bool,
    searchUrl: PropTypes.string,
    site: PropTypes.string,
    renderDiv: PropTypes.oneOf(["true", "false"])
  };
  var reactIsExports = requireReactIs();
  function stylis_min(W2) {
    function M2(d, c2, e, h, a2) {
      for (var m2 = 0, b2 = 0, v2 = 0, n = 0, q2, g2, x2 = 0, K2 = 0, k2, u = k2 = q2 = 0, l = 0, r2 = 0, I2 = 0, t2 = 0, B3 = e.length, J2 = B3 - 1, y2, f = "", p = "", F3 = "", G3 = "", C2; l < B3; ) {
        g2 = e.charCodeAt(l);
        l === J2 && 0 !== b2 + n + v2 + m2 && (0 !== b2 && (g2 = 47 === b2 ? 10 : 47), n = v2 = m2 = 0, B3++, J2++);
        if (0 === b2 + n + v2 + m2) {
          if (l === J2 && (0 < r2 && (f = f.replace(N2, "")), 0 < f.trim().length)) {
            switch (g2) {
              case 32:
              case 9:
              case 59:
              case 13:
              case 10:
                break;
              default:
                f += e.charAt(l);
            }
            g2 = 59;
          }
          switch (g2) {
            case 123:
              f = f.trim();
              q2 = f.charCodeAt(0);
              k2 = 1;
              for (t2 = ++l; l < B3; ) {
                switch (g2 = e.charCodeAt(l)) {
                  case 123:
                    k2++;
                    break;
                  case 125:
                    k2--;
                    break;
                  case 47:
                    switch (g2 = e.charCodeAt(l + 1)) {
                      case 42:
                      case 47:
                        a: {
                          for (u = l + 1; u < J2; ++u) {
                            switch (e.charCodeAt(u)) {
                              case 47:
                                if (42 === g2 && 42 === e.charCodeAt(u - 1) && l + 2 !== u) {
                                  l = u + 1;
                                  break a;
                                }
                                break;
                              case 10:
                                if (47 === g2) {
                                  l = u + 1;
                                  break a;
                                }
                            }
                          }
                          l = u;
                        }
                    }
                    break;
                  case 91:
                    g2++;
                  case 40:
                    g2++;
                  case 34:
                  case 39:
                    for (; l++ < J2 && e.charCodeAt(l) !== g2; ) {
                    }
                }
                if (0 === k2) break;
                l++;
              }
              k2 = e.substring(t2, l);
              0 === q2 && (q2 = (f = f.replace(ca, "").trim()).charCodeAt(0));
              switch (q2) {
                case 64:
                  0 < r2 && (f = f.replace(N2, ""));
                  g2 = f.charCodeAt(1);
                  switch (g2) {
                    case 100:
                    case 109:
                    case 115:
                    case 45:
                      r2 = c2;
                      break;
                    default:
                      r2 = O2;
                  }
                  k2 = M2(c2, r2, k2, g2, a2 + 1);
                  t2 = k2.length;
                  0 < A && (r2 = X2(O2, f, I2), C2 = H2(3, k2, r2, c2, D2, z2, t2, g2, a2, h), f = r2.join(""), void 0 !== C2 && 0 === (t2 = (k2 = C2.trim()).length) && (g2 = 0, k2 = ""));
                  if (0 < t2) switch (g2) {
                    case 115:
                      f = f.replace(da, ea);
                    case 100:
                    case 109:
                    case 45:
                      k2 = f + "{" + k2 + "}";
                      break;
                    case 107:
                      f = f.replace(fa, "$1 $2");
                      k2 = f + "{" + k2 + "}";
                      k2 = 1 === w2 || 2 === w2 && L2("@" + k2, 3) ? "@-webkit-" + k2 + "@" + k2 : "@" + k2;
                      break;
                    default:
                      k2 = f + k2, 112 === h && (k2 = (p += k2, ""));
                  }
                  else k2 = "";
                  break;
                default:
                  k2 = M2(c2, X2(c2, f, I2), k2, h, a2 + 1);
              }
              F3 += k2;
              k2 = I2 = r2 = u = q2 = 0;
              f = "";
              g2 = e.charCodeAt(++l);
              break;
            case 125:
            case 59:
              f = (0 < r2 ? f.replace(N2, "") : f).trim();
              if (1 < (t2 = f.length)) switch (0 === u && (q2 = f.charCodeAt(0), 45 === q2 || 96 < q2 && 123 > q2) && (t2 = (f = f.replace(" ", ":")).length), 0 < A && void 0 !== (C2 = H2(1, f, c2, d, D2, z2, p.length, h, a2, h)) && 0 === (t2 = (f = C2.trim()).length) && (f = "\0\0"), q2 = f.charCodeAt(0), g2 = f.charCodeAt(1), q2) {
                case 0:
                  break;
                case 64:
                  if (105 === g2 || 99 === g2) {
                    G3 += f + e.charAt(l);
                    break;
                  }
                default:
                  58 !== f.charCodeAt(t2 - 1) && (p += P(f, q2, g2, f.charCodeAt(2)));
              }
              I2 = r2 = u = q2 = 0;
              f = "";
              g2 = e.charCodeAt(++l);
          }
        }
        switch (g2) {
          case 13:
          case 10:
            47 === b2 ? b2 = 0 : 0 === 1 + q2 && 107 !== h && 0 < f.length && (r2 = 1, f += "\0");
            0 < A * Y2 && H2(0, f, c2, d, D2, z2, p.length, h, a2, h);
            z2 = 1;
            D2++;
            break;
          case 59:
          case 125:
            if (0 === b2 + n + v2 + m2) {
              z2++;
              break;
            }
          default:
            z2++;
            y2 = e.charAt(l);
            switch (g2) {
              case 9:
              case 32:
                if (0 === n + m2 + b2) switch (x2) {
                  case 44:
                  case 58:
                  case 9:
                  case 32:
                    y2 = "";
                    break;
                  default:
                    32 !== g2 && (y2 = " ");
                }
                break;
              case 0:
                y2 = "\\0";
                break;
              case 12:
                y2 = "\\f";
                break;
              case 11:
                y2 = "\\v";
                break;
              case 38:
                0 === n + b2 + m2 && (r2 = I2 = 1, y2 = "\f" + y2);
                break;
              case 108:
                if (0 === n + b2 + m2 + E2 && 0 < u) switch (l - u) {
                  case 2:
                    112 === x2 && 58 === e.charCodeAt(l - 3) && (E2 = x2);
                  case 8:
                    111 === K2 && (E2 = K2);
                }
                break;
              case 58:
                0 === n + b2 + m2 && (u = l);
                break;
              case 44:
                0 === b2 + v2 + n + m2 && (r2 = 1, y2 += "\r");
                break;
              case 34:
              case 39:
                0 === b2 && (n = n === g2 ? 0 : 0 === n ? g2 : n);
                break;
              case 91:
                0 === n + b2 + v2 && m2++;
                break;
              case 93:
                0 === n + b2 + v2 && m2--;
                break;
              case 41:
                0 === n + b2 + m2 && v2--;
                break;
              case 40:
                if (0 === n + b2 + m2) {
                  if (0 === q2) switch (2 * x2 + 3 * K2) {
                    case 533:
                      break;
                    default:
                      q2 = 1;
                  }
                  v2++;
                }
                break;
              case 64:
                0 === b2 + v2 + n + m2 + u + k2 && (k2 = 1);
                break;
              case 42:
              case 47:
                if (!(0 < n + m2 + v2)) switch (b2) {
                  case 0:
                    switch (2 * g2 + 3 * e.charCodeAt(l + 1)) {
                      case 235:
                        b2 = 47;
                        break;
                      case 220:
                        t2 = l, b2 = 42;
                    }
                    break;
                  case 42:
                    47 === g2 && 42 === x2 && t2 + 2 !== l && (33 === e.charCodeAt(t2 + 2) && (p += e.substring(t2, l + 1)), y2 = "", b2 = 0);
                }
            }
            0 === b2 && (f += y2);
        }
        K2 = x2;
        x2 = g2;
        l++;
      }
      t2 = p.length;
      if (0 < t2) {
        r2 = c2;
        if (0 < A && (C2 = H2(2, p, r2, d, D2, z2, t2, h, a2, h), void 0 !== C2 && 0 === (p = C2).length)) return G3 + p + F3;
        p = r2.join(",") + "{" + p + "}";
        if (0 !== w2 * E2) {
          2 !== w2 || L2(p, 2) || (E2 = 0);
          switch (E2) {
            case 111:
              p = p.replace(ha, ":-moz-$1") + p;
              break;
            case 112:
              p = p.replace(Q2, "::-webkit-input-$1") + p.replace(Q2, "::-moz-$1") + p.replace(Q2, ":-ms-input-$1") + p;
          }
          E2 = 0;
        }
      }
      return G3 + p + F3;
    }
    __name(M2, "M");
    function X2(d, c2, e) {
      var h = c2.trim().split(ia);
      c2 = h;
      var a2 = h.length, m2 = d.length;
      switch (m2) {
        case 0:
        case 1:
          var b2 = 0;
          for (d = 0 === m2 ? "" : d[0] + " "; b2 < a2; ++b2) {
            c2[b2] = Z2(d, c2[b2], e).trim();
          }
          break;
        default:
          var v2 = b2 = 0;
          for (c2 = []; b2 < a2; ++b2) {
            for (var n = 0; n < m2; ++n) {
              c2[v2++] = Z2(d[n] + " ", h[b2], e).trim();
            }
          }
      }
      return c2;
    }
    __name(X2, "X");
    function Z2(d, c2, e) {
      var h = c2.charCodeAt(0);
      33 > h && (h = (c2 = c2.trim()).charCodeAt(0));
      switch (h) {
        case 38:
          return c2.replace(F2, "$1" + d.trim());
        case 58:
          return d.trim() + c2.replace(F2, "$1" + d.trim());
        default:
          if (0 < 1 * e && 0 < c2.indexOf("\f")) return c2.replace(F2, (58 === d.charCodeAt(0) ? "" : "$1") + d.trim());
      }
      return d + c2;
    }
    __name(Z2, "Z");
    function P(d, c2, e, h) {
      var a2 = d + ";", m2 = 2 * c2 + 3 * e + 4 * h;
      if (944 === m2) {
        d = a2.indexOf(":", 9) + 1;
        var b2 = a2.substring(d, a2.length - 1).trim();
        b2 = a2.substring(0, d).trim() + b2 + ";";
        return 1 === w2 || 2 === w2 && L2(b2, 1) ? "-webkit-" + b2 + b2 : b2;
      }
      if (0 === w2 || 2 === w2 && !L2(a2, 1)) return a2;
      switch (m2) {
        case 1015:
          return 97 === a2.charCodeAt(10) ? "-webkit-" + a2 + a2 : a2;
        case 951:
          return 116 === a2.charCodeAt(3) ? "-webkit-" + a2 + a2 : a2;
        case 963:
          return 110 === a2.charCodeAt(5) ? "-webkit-" + a2 + a2 : a2;
        case 1009:
          if (100 !== a2.charCodeAt(4)) break;
        case 969:
        case 942:
          return "-webkit-" + a2 + a2;
        case 978:
          return "-webkit-" + a2 + "-moz-" + a2 + a2;
        case 1019:
        case 983:
          return "-webkit-" + a2 + "-moz-" + a2 + "-ms-" + a2 + a2;
        case 883:
          if (45 === a2.charCodeAt(8)) return "-webkit-" + a2 + a2;
          if (0 < a2.indexOf("image-set(", 11)) return a2.replace(ja, "$1-webkit-$2") + a2;
          break;
        case 932:
          if (45 === a2.charCodeAt(4)) switch (a2.charCodeAt(5)) {
            case 103:
              return "-webkit-box-" + a2.replace("-grow", "") + "-webkit-" + a2 + "-ms-" + a2.replace("grow", "positive") + a2;
            case 115:
              return "-webkit-" + a2 + "-ms-" + a2.replace("shrink", "negative") + a2;
            case 98:
              return "-webkit-" + a2 + "-ms-" + a2.replace("basis", "preferred-size") + a2;
          }
          return "-webkit-" + a2 + "-ms-" + a2 + a2;
        case 964:
          return "-webkit-" + a2 + "-ms-flex-" + a2 + a2;
        case 1023:
          if (99 !== a2.charCodeAt(8)) break;
          b2 = a2.substring(a2.indexOf(":", 15)).replace("flex-", "").replace("space-between", "justify");
          return "-webkit-box-pack" + b2 + "-webkit-" + a2 + "-ms-flex-pack" + b2 + a2;
        case 1005:
          return ka.test(a2) ? a2.replace(aa, ":-webkit-") + a2.replace(aa, ":-moz-") + a2 : a2;
        case 1e3:
          b2 = a2.substring(13).trim();
          c2 = b2.indexOf("-") + 1;
          switch (b2.charCodeAt(0) + b2.charCodeAt(c2)) {
            case 226:
              b2 = a2.replace(G2, "tb");
              break;
            case 232:
              b2 = a2.replace(G2, "tb-rl");
              break;
            case 220:
              b2 = a2.replace(G2, "lr");
              break;
            default:
              return a2;
          }
          return "-webkit-" + a2 + "-ms-" + b2 + a2;
        case 1017:
          if (-1 === a2.indexOf("sticky", 9)) break;
        case 975:
          c2 = (a2 = d).length - 10;
          b2 = (33 === a2.charCodeAt(c2) ? a2.substring(0, c2) : a2).substring(d.indexOf(":", 7) + 1).trim();
          switch (m2 = b2.charCodeAt(0) + (b2.charCodeAt(7) | 0)) {
            case 203:
              if (111 > b2.charCodeAt(8)) break;
            case 115:
              a2 = a2.replace(b2, "-webkit-" + b2) + ";" + a2;
              break;
            case 207:
            case 102:
              a2 = a2.replace(b2, "-webkit-" + (102 < m2 ? "inline-" : "") + "box") + ";" + a2.replace(b2, "-webkit-" + b2) + ";" + a2.replace(b2, "-ms-" + b2 + "box") + ";" + a2;
          }
          return a2 + ";";
        case 938:
          if (45 === a2.charCodeAt(5)) switch (a2.charCodeAt(6)) {
            case 105:
              return b2 = a2.replace("-items", ""), "-webkit-" + a2 + "-webkit-box-" + b2 + "-ms-flex-" + b2 + a2;
            case 115:
              return "-webkit-" + a2 + "-ms-flex-item-" + a2.replace(ba, "") + a2;
            default:
              return "-webkit-" + a2 + "-ms-flex-line-pack" + a2.replace("align-content", "").replace(ba, "") + a2;
          }
          break;
        case 973:
        case 989:
          if (45 !== a2.charCodeAt(3) || 122 === a2.charCodeAt(4)) break;
        case 931:
        case 953:
          if (true === la.test(d)) return 115 === (b2 = d.substring(d.indexOf(":") + 1)).charCodeAt(0) ? P(d.replace("stretch", "fill-available"), c2, e, h).replace(":fill-available", ":stretch") : a2.replace(b2, "-webkit-" + b2) + a2.replace(b2, "-moz-" + b2.replace("fill-", "")) + a2;
          break;
        case 962:
          if (a2 = "-webkit-" + a2 + (102 === a2.charCodeAt(5) ? "-ms-" + a2 : "") + a2, 211 === e + h && 105 === a2.charCodeAt(13) && 0 < a2.indexOf("transform", 10)) return a2.substring(0, a2.indexOf(";", 27) + 1).replace(ma, "$1-webkit-$2") + a2;
      }
      return a2;
    }
    __name(P, "P");
    function L2(d, c2) {
      var e = d.indexOf(1 === c2 ? ":" : "{"), h = d.substring(0, 3 !== c2 ? e : 10);
      e = d.substring(e + 1, d.length - 1);
      return R2(2 !== c2 ? h : h.replace(na, "$1"), e, c2);
    }
    __name(L2, "L");
    function ea(d, c2) {
      var e = P(c2, c2.charCodeAt(0), c2.charCodeAt(1), c2.charCodeAt(2));
      return e !== c2 + ";" ? e.replace(oa, " or ($1)").substring(4) : "(" + c2 + ")";
    }
    __name(ea, "ea");
    function H2(d, c2, e, h, a2, m2, b2, v2, n, q2) {
      for (var g2 = 0, x2 = c2, w3; g2 < A; ++g2) {
        switch (w3 = S2[g2].call(B2, d, x2, e, h, a2, m2, b2, v2, n, q2)) {
          case void 0:
          case false:
          case true:
          case null:
            break;
          default:
            x2 = w3;
        }
      }
      if (x2 !== c2) return x2;
    }
    __name(H2, "H");
    function T2(d) {
      switch (d) {
        case void 0:
        case null:
          A = S2.length = 0;
          break;
        default:
          if ("function" === typeof d) S2[A++] = d;
          else if ("object" === typeof d) for (var c2 = 0, e = d.length; c2 < e; ++c2) {
            T2(d[c2]);
          }
          else Y2 = !!d | 0;
      }
      return T2;
    }
    __name(T2, "T");
    function U2(d) {
      d = d.prefix;
      void 0 !== d && (R2 = null, d ? "function" !== typeof d ? w2 = 1 : (w2 = 2, R2 = d) : w2 = 0);
      return U2;
    }
    __name(U2, "U");
    function B2(d, c2) {
      var e = d;
      33 > e.charCodeAt(0) && (e = e.trim());
      V2 = e;
      e = [V2];
      if (0 < A) {
        var h = H2(-1, c2, e, e, D2, z2, 0, 0, 0, 0);
        void 0 !== h && "string" === typeof h && (c2 = h);
      }
      var a2 = M2(O2, e, c2, 0, 0);
      0 < A && (h = H2(-2, a2, e, e, D2, z2, a2.length, 0, 0, 0), void 0 !== h && (a2 = h));
      V2 = "";
      E2 = 0;
      z2 = D2 = 1;
      return a2;
    }
    __name(B2, "B");
    var ca = /^\0+/g, N2 = /[\0\r\f]/g, aa = /: */g, ka = /zoo|gra/, ma = /([,: ])(transform)/g, ia = /,\r+?/g, F2 = /([\t\r\n ])*\f?&/g, fa = /@(k\w+)\s*(\S*)\s*/, Q2 = /::(place)/g, ha = /:(read-only)/g, G2 = /[svh]\w+-[tblr]{2}/, da = /\(\s*(.*)\s*\)/g, oa = /([\s\S]*?);/g, ba = /-self|flex-/g, na = /[^]*?(:[rp][el]a[\w-]+)[^]*/, la = /stretch|:\s*\w+\-(?:conte|avail)/, ja = /([^-])(image-set\()/, z2 = 1, D2 = 1, E2 = 0, w2 = 1, O2 = [], S2 = [], A = 0, R2 = null, Y2 = 0, V2 = "";
    B2.use = T2;
    B2.set = U2;
    void 0 !== W2 && U2(W2);
    return B2;
  }
  __name(stylis_min, "stylis_min");
  var unitlessKeys = {
    animationIterationCount: 1,
    borderImageOutset: 1,
    borderImageSlice: 1,
    borderImageWidth: 1,
    boxFlex: 1,
    boxFlexGroup: 1,
    boxOrdinalGroup: 1,
    columnCount: 1,
    columns: 1,
    flex: 1,
    flexGrow: 1,
    flexPositive: 1,
    flexShrink: 1,
    flexNegative: 1,
    flexOrder: 1,
    gridRow: 1,
    gridRowEnd: 1,
    gridRowSpan: 1,
    gridRowStart: 1,
    gridColumn: 1,
    gridColumnEnd: 1,
    gridColumnSpan: 1,
    gridColumnStart: 1,
    msGridRow: 1,
    msGridRowSpan: 1,
    msGridColumn: 1,
    msGridColumnSpan: 1,
    fontWeight: 1,
    lineHeight: 1,
    opacity: 1,
    order: 1,
    orphans: 1,
    tabSize: 1,
    widows: 1,
    zIndex: 1,
    zoom: 1,
    WebkitLineClamp: 1,
    // SVG-related properties
    fillOpacity: 1,
    floodOpacity: 1,
    stopOpacity: 1,
    strokeDasharray: 1,
    strokeDashoffset: 1,
    strokeMiterlimit: 1,
    strokeOpacity: 1,
    strokeWidth: 1
  };
  function memoize(fn) {
    var cache = /* @__PURE__ */ Object.create(null);
    return function(arg) {
      if (cache[arg] === void 0) cache[arg] = fn(arg);
      return cache[arg];
    };
  }
  __name(memoize, "memoize");
  var reactPropsRegex = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|abbr|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|disableRemotePlayback|download|draggable|encType|enterKeyHint|fetchpriority|fetchPriority|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|translate|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|incremental|fallback|inert|itemProp|itemScope|itemType|itemID|itemRef|on|option|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/;
  var isPropValid = /* @__PURE__ */ memoize(
    function(prop) {
      return reactPropsRegex.test(prop) || prop.charCodeAt(0) === 111 && prop.charCodeAt(1) === 110 && prop.charCodeAt(2) < 91;
    }
    /* Z+1 */
  );
  var reactIs = requireReactIs();
  var REACT_STATICS = {
    childContextTypes: true,
    contextType: true,
    contextTypes: true,
    defaultProps: true,
    displayName: true,
    getDefaultProps: true,
    getDerivedStateFromError: true,
    getDerivedStateFromProps: true,
    mixins: true,
    propTypes: true,
    type: true
  };
  var KNOWN_STATICS = {
    name: true,
    length: true,
    prototype: true,
    caller: true,
    callee: true,
    arguments: true,
    arity: true
  };
  var FORWARD_REF_STATICS = {
    "$$typeof": true,
    render: true,
    defaultProps: true,
    displayName: true,
    propTypes: true
  };
  var MEMO_STATICS = {
    "$$typeof": true,
    compare: true,
    defaultProps: true,
    displayName: true,
    propTypes: true,
    type: true
  };
  var TYPE_STATICS = {};
  TYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;
  TYPE_STATICS[reactIs.Memo] = MEMO_STATICS;
  function getStatics(component) {
    if (reactIs.isMemo(component)) {
      return MEMO_STATICS;
    }
    return TYPE_STATICS[component["$$typeof"]] || REACT_STATICS;
  }
  __name(getStatics, "getStatics");
  var defineProperty = Object.defineProperty;
  var getOwnPropertyNames = Object.getOwnPropertyNames;
  var getOwnPropertySymbols = Object.getOwnPropertySymbols;
  var getOwnPropertyDescriptor$1 = Object.getOwnPropertyDescriptor;
  var getPrototypeOf$1 = Object.getPrototypeOf;
  var objectPrototype = Object.prototype;
  function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {
    if (typeof sourceComponent !== "string") {
      if (objectPrototype) {
        var inheritedComponent = getPrototypeOf$1(sourceComponent);
        if (inheritedComponent && inheritedComponent !== objectPrototype) {
          hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);
        }
      }
      var keys = getOwnPropertyNames(sourceComponent);
      if (getOwnPropertySymbols) {
        keys = keys.concat(getOwnPropertySymbols(sourceComponent));
      }
      var targetStatics = getStatics(targetComponent);
      var sourceStatics = getStatics(sourceComponent);
      for (var i = 0; i < keys.length; ++i) {
        var key = keys[i];
        if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {
          var descriptor = getOwnPropertyDescriptor$1(sourceComponent, key);
          try {
            defineProperty(targetComponent, key, descriptor);
          } catch (e) {
          }
        }
      }
    }
    return targetComponent;
  }
  __name(hoistNonReactStatics, "hoistNonReactStatics");
  var hoistNonReactStatics_cjs = hoistNonReactStatics;
  const m = /* @__PURE__ */ getDefaultExportFromCjs(hoistNonReactStatics_cjs);
  var define_process_default$2 = { env: { NODE_ENV: "production" } };
  function y$1() {
    return (y$1 = Object.assign || function(e2) {
      for (var t2 = 1; t2 < arguments.length; t2++) {
        var n2 = arguments[t2];
        for (var r2 in n2) Object.prototype.hasOwnProperty.call(n2, r2) && (e2[r2] = n2[r2]);
      }
      return e2;
    }).apply(this, arguments);
  }
  __name(y$1, "y$1");
  var v = /* @__PURE__ */ __name(function(e2, t2) {
    for (var n2 = [e2[0]], r2 = 0, o2 = t2.length; r2 < o2; r2 += 1) n2.push(t2[r2], e2[r2 + 1]);
    return n2;
  }, "v"), g = /* @__PURE__ */ __name(function(t2) {
    return null !== t2 && "object" == typeof t2 && "[object Object]" === (t2.toString ? t2.toString() : Object.prototype.toString.call(t2)) && !reactIsExports.typeOf(t2);
  }, "g"), S = Object.freeze([]), w = Object.freeze({});
  function E(e2) {
    return "function" == typeof e2;
  }
  __name(E, "E");
  function b(e2) {
    return "production" !== define_process_default$2.env.NODE_ENV && "string" == typeof e2 && e2 || e2.displayName || e2.name || "Component";
  }
  __name(b, "b");
  function _(e2) {
    return e2 && "string" == typeof e2.styledComponentId;
  }
  __name(_, "_");
  var N = "undefined" != typeof define_process_default$2 && void 0 !== define_process_default$2.env && (define_process_default$2.env.REACT_APP_SC_ATTR || define_process_default$2.env.SC_ATTR) || "data-styled", C = "undefined" != typeof window && "HTMLElement" in window, I = Boolean("boolean" == typeof SC_DISABLE_SPEEDY ? SC_DISABLE_SPEEDY : "undefined" != typeof define_process_default$2 && void 0 !== define_process_default$2.env && (void 0 !== define_process_default$2.env.REACT_APP_SC_DISABLE_SPEEDY && "" !== define_process_default$2.env.REACT_APP_SC_DISABLE_SPEEDY ? "false" !== define_process_default$2.env.REACT_APP_SC_DISABLE_SPEEDY && define_process_default$2.env.REACT_APP_SC_DISABLE_SPEEDY : void 0 !== define_process_default$2.env.SC_DISABLE_SPEEDY && "" !== define_process_default$2.env.SC_DISABLE_SPEEDY ? "false" !== define_process_default$2.env.SC_DISABLE_SPEEDY && define_process_default$2.env.SC_DISABLE_SPEEDY : "production" !== define_process_default$2.env.NODE_ENV)), O = "production" !== define_process_default$2.env.NODE_ENV ? { 1: "Cannot create styled-component for component: %s.\n\n", 2: "Can't collect styles once you've consumed a `ServerStyleSheet`'s styles! `ServerStyleSheet` is a one off instance for each server-side render cycle.\n\n- Are you trying to reuse it across renders?\n- Are you accidentally calling collectStyles twice?\n\n", 3: "Streaming SSR is only supported in a Node.js environment; Please do not try to call this method in the browser.\n\n", 4: "The `StyleSheetManager` expects a valid target or sheet prop!\n\n- Does this error occur on the client and is your target falsy?\n- Does this error occur on the server and is the sheet falsy?\n\n", 5: "The clone method cannot be used on the client!\n\n- Are you running in a client-like environment on the server?\n- Are you trying to run SSR on the client?\n\n", 6: "Trying to insert a new style tag, but the given Node is unmounted!\n\n- Are you using a custom target that isn't mounted?\n- Does your document not have a valid head element?\n- Have you accidentally removed a style tag manually?\n\n", 7: 'ThemeProvider: Please return an object from your "theme" prop function, e.g.\n\n```js\ntheme={() => ({})}\n```\n\n', 8: 'ThemeProvider: Please make your "theme" prop an object.\n\n', 9: "Missing document `<head>`\n\n", 10: "Cannot find a StyleSheet instance. Usually this happens if there are multiple copies of styled-components loaded at once. Check out this issue for how to troubleshoot and fix the common cases where this situation can happen: https://github.com/styled-components/styled-components/issues/1941#issuecomment-417862021\n\n", 11: "_This error was replaced with a dev-time warning, it will be deleted for v4 final._ [createGlobalStyle] received children which will not be rendered. Please use the component without passing children elements.\n\n", 12: "It seems you are interpolating a keyframe declaration (%s) into an untagged string. This was supported in styled-components v3, but is not longer supported in v4 as keyframes are now injected on-demand. Please wrap your string in the css\\`\\` helper which ensures the styles are injected correctly. See https://www.styled-components.com/docs/api#css\n\n", 13: "%s is not a styled component and cannot be referred to via component selector. See https://www.styled-components.com/docs/advanced#referring-to-other-components for more details.\n\n", 14: 'ThemeProvider: "theme" prop is required.\n\n', 15: "A stylis plugin has been supplied that is not named. We need a name for each plugin to be able to prevent styling collisions between different stylis configurations within the same app. Before you pass your plugin to `<StyleSheetManager stylisPlugins={[]}>`, please make sure each plugin is uniquely-named, e.g.\n\n```js\nObject.defineProperty(importedPlugin, 'name', { value: 'some-unique-name' });\n```\n\n", 16: "Reached the limit of how many styled components may be created at group %s.\nYou may only create up to 1,073,741,824 components. If you're creating components dynamically,\nas for instance in your render method then you may be running into this limitation.\n\n", 17: "CSSStyleSheet could not be found on HTMLStyleElement.\nHas styled-components' style tag been unmounted or altered by another script?\n" } : {};
  function R() {
    for (var e2 = arguments.length <= 0 ? void 0 : arguments[0], t2 = [], n2 = 1, r2 = arguments.length; n2 < r2; n2 += 1) t2.push(n2 < 0 || arguments.length <= n2 ? void 0 : arguments[n2]);
    return t2.forEach(function(t3) {
      e2 = e2.replace(/%[a-z]/, t3);
    }), e2;
  }
  __name(R, "R");
  function D(e2) {
    for (var t2 = arguments.length, n2 = new Array(t2 > 1 ? t2 - 1 : 0), r2 = 1; r2 < t2; r2++) n2[r2 - 1] = arguments[r2];
    throw "production" === define_process_default$2.env.NODE_ENV ? new Error("An error occurred. See https://git.io/JUIaE#" + e2 + " for more information." + (n2.length > 0 ? " Args: " + n2.join(", ") : "")) : new Error(R.apply(void 0, [O[e2]].concat(n2)).trim());
  }
  __name(D, "D");
  var j = function() {
    function e2(e3) {
      this.groupSizes = new Uint32Array(512), this.length = 512, this.tag = e3;
    }
    __name(e2, "e2");
    var t2 = e2.prototype;
    return t2.indexOfGroup = function(e3) {
      for (var t3 = 0, n2 = 0; n2 < e3; n2++) t3 += this.groupSizes[n2];
      return t3;
    }, t2.insertRules = function(e3, t3) {
      if (e3 >= this.groupSizes.length) {
        for (var n2 = this.groupSizes, r2 = n2.length, o2 = r2; e3 >= o2; ) (o2 <<= 1) < 0 && D(16, "" + e3);
        this.groupSizes = new Uint32Array(o2), this.groupSizes.set(n2), this.length = o2;
        for (var s2 = r2; s2 < o2; s2++) this.groupSizes[s2] = 0;
      }
      for (var i2 = this.indexOfGroup(e3 + 1), a2 = 0, c2 = t3.length; a2 < c2; a2++) this.tag.insertRule(i2, t3[a2]) && (this.groupSizes[e3]++, i2++);
    }, t2.clearGroup = function(e3) {
      if (e3 < this.length) {
        var t3 = this.groupSizes[e3], n2 = this.indexOfGroup(e3), r2 = n2 + t3;
        this.groupSizes[e3] = 0;
        for (var o2 = n2; o2 < r2; o2++) this.tag.deleteRule(n2);
      }
    }, t2.getGroup = function(e3) {
      var t3 = "";
      if (e3 >= this.length || 0 === this.groupSizes[e3]) return t3;
      for (var n2 = this.groupSizes[e3], r2 = this.indexOfGroup(e3), o2 = r2 + n2, s2 = r2; s2 < o2; s2++) t3 += this.tag.getRule(s2) + "/*!sc*/\n";
      return t3;
    }, e2;
  }(), T = /* @__PURE__ */ new Map(), x = /* @__PURE__ */ new Map(), k = 1, V = /* @__PURE__ */ __name(function(e2) {
    if (T.has(e2)) return T.get(e2);
    for (; x.has(k); ) k++;
    var t2 = k++;
    return "production" !== define_process_default$2.env.NODE_ENV && ((0 | t2) < 0 || t2 > 1 << 30) && D(16, "" + t2), T.set(e2, t2), x.set(t2, e2), t2;
  }, "V"), B = /* @__PURE__ */ __name(function(e2) {
    return x.get(e2);
  }, "B"), z = /* @__PURE__ */ __name(function(e2, t2) {
    t2 >= k && (k = t2 + 1), T.set(e2, t2), x.set(t2, e2);
  }, "z"), M = "style[" + N + '][data-styled-version="5.3.11"]', G = new RegExp("^" + N + '\\.g(\\d+)\\[id="([\\w\\d-]+)"\\].*?"([^"]*)'), L = /* @__PURE__ */ __name(function(e2, t2, n2) {
    for (var r2, o2 = n2.split(","), s2 = 0, i2 = o2.length; s2 < i2; s2++) (r2 = o2[s2]) && e2.registerName(t2, r2);
  }, "L"), F = /* @__PURE__ */ __name(function(e2, t2) {
    for (var n2 = (t2.textContent || "").split("/*!sc*/\n"), r2 = [], o2 = 0, s2 = n2.length; o2 < s2; o2++) {
      var i2 = n2[o2].trim();
      if (i2) {
        var a2 = i2.match(G);
        if (a2) {
          var c2 = 0 | parseInt(a2[1], 10), u2 = a2[2];
          0 !== c2 && (z(u2, c2), L(e2, u2, a2[3]), e2.getTag().insertRules(c2, r2)), r2.length = 0;
        } else r2.push(i2);
      }
    }
  }, "F"), Y = /* @__PURE__ */ __name(function() {
    return "undefined" != typeof __webpack_nonce__ ? __webpack_nonce__ : null;
  }, "Y"), q = /* @__PURE__ */ __name(function(e2) {
    var t2 = document.head, n2 = e2 || t2, r2 = document.createElement("style"), o2 = function(e3) {
      for (var t3 = e3.childNodes, n3 = t3.length; n3 >= 0; n3--) {
        var r3 = t3[n3];
        if (r3 && 1 === r3.nodeType && r3.hasAttribute(N)) return r3;
      }
    }(n2), s2 = void 0 !== o2 ? o2.nextSibling : null;
    r2.setAttribute(N, "active"), r2.setAttribute("data-styled-version", "5.3.11");
    var i2 = Y();
    return i2 && r2.setAttribute("nonce", i2), n2.insertBefore(r2, s2), r2;
  }, "q"), H = function() {
    function e2(e3) {
      var t3 = this.element = q(e3);
      t3.appendChild(document.createTextNode("")), this.sheet = function(e4) {
        if (e4.sheet) return e4.sheet;
        for (var t4 = document.styleSheets, n2 = 0, r2 = t4.length; n2 < r2; n2++) {
          var o2 = t4[n2];
          if (o2.ownerNode === e4) return o2;
        }
        D(17);
      }(t3), this.length = 0;
    }
    __name(e2, "e2");
    var t2 = e2.prototype;
    return t2.insertRule = function(e3, t3) {
      try {
        return this.sheet.insertRule(t3, e3), this.length++, true;
      } catch (e4) {
        return false;
      }
    }, t2.deleteRule = function(e3) {
      this.sheet.deleteRule(e3), this.length--;
    }, t2.getRule = function(e3) {
      var t3 = this.sheet.cssRules[e3];
      return void 0 !== t3 && "string" == typeof t3.cssText ? t3.cssText : "";
    }, e2;
  }(), $ = function() {
    function e2(e3) {
      var t3 = this.element = q(e3);
      this.nodes = t3.childNodes, this.length = 0;
    }
    __name(e2, "e2");
    var t2 = e2.prototype;
    return t2.insertRule = function(e3, t3) {
      if (e3 <= this.length && e3 >= 0) {
        var n2 = document.createTextNode(t3), r2 = this.nodes[e3];
        return this.element.insertBefore(n2, r2 || null), this.length++, true;
      }
      return false;
    }, t2.deleteRule = function(e3) {
      this.element.removeChild(this.nodes[e3]), this.length--;
    }, t2.getRule = function(e3) {
      return e3 < this.length ? this.nodes[e3].textContent : "";
    }, e2;
  }(), W = function() {
    function e2(e3) {
      this.rules = [], this.length = 0;
    }
    __name(e2, "e2");
    var t2 = e2.prototype;
    return t2.insertRule = function(e3, t3) {
      return e3 <= this.length && (this.rules.splice(e3, 0, t3), this.length++, true);
    }, t2.deleteRule = function(e3) {
      this.rules.splice(e3, 1), this.length--;
    }, t2.getRule = function(e3) {
      return e3 < this.length ? this.rules[e3] : "";
    }, e2;
  }(), U = C, J = { isServer: !C, useCSSOMInjection: !I }, X = function() {
    function e2(e3, t3, n2) {
      void 0 === e3 && (e3 = w), void 0 === t3 && (t3 = {}), this.options = y$1({}, J, {}, e3), this.gs = t3, this.names = new Map(n2), this.server = !!e3.isServer, !this.server && C && U && (U = false, function(e4) {
        for (var t4 = document.querySelectorAll(M), n3 = 0, r2 = t4.length; n3 < r2; n3++) {
          var o2 = t4[n3];
          o2 && "active" !== o2.getAttribute(N) && (F(e4, o2), o2.parentNode && o2.parentNode.removeChild(o2));
        }
      }(this));
    }
    __name(e2, "e2");
    e2.registerId = function(e3) {
      return V(e3);
    };
    var t2 = e2.prototype;
    return t2.reconstructWithOptions = function(t3, n2) {
      return void 0 === n2 && (n2 = true), new e2(y$1({}, this.options, {}, t3), this.gs, n2 && this.names || void 0);
    }, t2.allocateGSInstance = function(e3) {
      return this.gs[e3] = (this.gs[e3] || 0) + 1;
    }, t2.getTag = function() {
      return this.tag || (this.tag = (n2 = (t3 = this.options).isServer, r2 = t3.useCSSOMInjection, o2 = t3.target, e3 = n2 ? new W(o2) : r2 ? new H(o2) : new $(o2), new j(e3)));
      var e3, t3, n2, r2, o2;
    }, t2.hasNameForId = function(e3, t3) {
      return this.names.has(e3) && this.names.get(e3).has(t3);
    }, t2.registerName = function(e3, t3) {
      if (V(e3), this.names.has(e3)) this.names.get(e3).add(t3);
      else {
        var n2 = /* @__PURE__ */ new Set();
        n2.add(t3), this.names.set(e3, n2);
      }
    }, t2.insertRules = function(e3, t3, n2) {
      this.registerName(e3, t3), this.getTag().insertRules(V(e3), n2);
    }, t2.clearNames = function(e3) {
      this.names.has(e3) && this.names.get(e3).clear();
    }, t2.clearRules = function(e3) {
      this.getTag().clearGroup(V(e3)), this.clearNames(e3);
    }, t2.clearTag = function() {
      this.tag = void 0;
    }, t2.toString = function() {
      return function(e3) {
        for (var t3 = e3.getTag(), n2 = t3.length, r2 = "", o2 = 0; o2 < n2; o2++) {
          var s2 = B(o2);
          if (void 0 !== s2) {
            var i2 = e3.names.get(s2), a2 = t3.getGroup(o2);
            if (i2 && a2 && i2.size) {
              var c2 = N + ".g" + o2 + '[id="' + s2 + '"]', u2 = "";
              void 0 !== i2 && i2.forEach(function(e4) {
                e4.length > 0 && (u2 += e4 + ",");
              }), r2 += "" + a2 + c2 + '{content:"' + u2 + '"}/*!sc*/\n';
            }
          }
        }
        return r2;
      }(this);
    }, e2;
  }(), Z = /(a)(d)/gi, K = /* @__PURE__ */ __name(function(e2) {
    return String.fromCharCode(e2 + (e2 > 25 ? 39 : 97));
  }, "K");
  function Q(e2) {
    var t2, n2 = "";
    for (t2 = Math.abs(e2); t2 > 52; t2 = t2 / 52 | 0) n2 = K(t2 % 52) + n2;
    return (K(t2 % 52) + n2).replace(Z, "$1-$2");
  }
  __name(Q, "Q");
  var ee = /* @__PURE__ */ __name(function(e2, t2) {
    for (var n2 = t2.length; n2; ) e2 = 33 * e2 ^ t2.charCodeAt(--n2);
    return e2;
  }, "ee"), te = /* @__PURE__ */ __name(function(e2) {
    return ee(5381, e2);
  }, "te");
  function ne(e2) {
    for (var t2 = 0; t2 < e2.length; t2 += 1) {
      var n2 = e2[t2];
      if (E(n2) && !_(n2)) return false;
    }
    return true;
  }
  __name(ne, "ne");
  var re = te("5.3.11"), oe = function() {
    function e2(e3, t2, n2) {
      this.rules = e3, this.staticRulesId = "", this.isStatic = "production" === define_process_default$2.env.NODE_ENV && (void 0 === n2 || n2.isStatic) && ne(e3), this.componentId = t2, this.baseHash = ee(re, t2), this.baseStyle = n2, X.registerId(t2);
    }
    __name(e2, "e2");
    return e2.prototype.generateAndInjectStyles = function(e3, t2, n2) {
      var r2 = this.componentId, o2 = [];
      if (this.baseStyle && o2.push(this.baseStyle.generateAndInjectStyles(e3, t2, n2)), this.isStatic && !n2.hash) if (this.staticRulesId && t2.hasNameForId(r2, this.staticRulesId)) o2.push(this.staticRulesId);
      else {
        var s2 = _e(this.rules, e3, t2, n2).join(""), i2 = Q(ee(this.baseHash, s2) >>> 0);
        if (!t2.hasNameForId(r2, i2)) {
          var a2 = n2(s2, "." + i2, void 0, r2);
          t2.insertRules(r2, i2, a2);
        }
        o2.push(i2), this.staticRulesId = i2;
      }
      else {
        for (var c2 = this.rules.length, u2 = ee(this.baseHash, n2.hash), l2 = "", d2 = 0; d2 < c2; d2++) {
          var h2 = this.rules[d2];
          if ("string" == typeof h2) l2 += h2, "production" !== define_process_default$2.env.NODE_ENV && (u2 = ee(u2, h2 + d2));
          else if (h2) {
            var p2 = _e(h2, e3, t2, n2), f2 = Array.isArray(p2) ? p2.join("") : p2;
            u2 = ee(u2, f2 + d2), l2 += f2;
          }
        }
        if (l2) {
          var m2 = Q(u2 >>> 0);
          if (!t2.hasNameForId(r2, m2)) {
            var y2 = n2(l2, "." + m2, void 0, r2);
            t2.insertRules(r2, m2, y2);
          }
          o2.push(m2);
        }
      }
      return o2.join(" ");
    }, e2;
  }(), se = /^\s*\/\/.*$/gm, ie = [":", "[", ".", "#"];
  function ae(e2) {
    var t2, n2, r2, o2, s2 = w, i2 = s2.options, a2 = void 0 === i2 ? w : i2, c2 = s2.plugins, u2 = void 0 === c2 ? S : c2, l2 = new stylis_min(a2), d2 = [], p2 = /* @__PURE__ */ function(e3) {
      function t3(t4) {
        if (t4) try {
          e3(t4 + "}");
        } catch (e4) {
        }
      }
      __name(t3, "t3");
      return function(n3, r3, o3, s3, i3, a3, c3, u3, l3, d3) {
        switch (n3) {
          case 1:
            if (0 === l3 && 64 === r3.charCodeAt(0)) return e3(r3 + ";"), "";
            break;
          case 2:
            if (0 === u3) return r3 + "/*|*/";
            break;
          case 3:
            switch (u3) {
              case 102:
              case 112:
                return e3(o3[0] + r3), "";
              default:
                return r3 + (0 === d3 ? "/*|*/" : "");
            }
          case -2:
            r3.split("/*|*/}").forEach(t3);
        }
      };
    }(function(e3) {
      d2.push(e3);
    }), f2 = /* @__PURE__ */ __name(function(e3, r3, s3) {
      return 0 === r3 && -1 !== ie.indexOf(s3[n2.length]) || s3.match(o2) ? e3 : "." + t2;
    }, "f2");
    function m2(e3, s3, i3, a3) {
      void 0 === a3 && (a3 = "&");
      var c3 = e3.replace(se, ""), u3 = s3 && i3 ? i3 + " " + s3 + " { " + c3 + " }" : c3;
      return t2 = a3, n2 = s3, r2 = new RegExp("\\" + n2 + "\\b", "g"), o2 = new RegExp("(\\" + n2 + "\\b){2,}"), l2(i3 || !s3 ? "" : s3, u3);
    }
    __name(m2, "m2");
    return l2.use([].concat(u2, [function(e3, t3, o3) {
      2 === e3 && o3.length && o3[0].lastIndexOf(n2) > 0 && (o3[0] = o3[0].replace(r2, f2));
    }, p2, function(e3) {
      if (-2 === e3) {
        var t3 = d2;
        return d2 = [], t3;
      }
    }])), m2.hash = u2.length ? u2.reduce(function(e3, t3) {
      return t3.name || D(15), ee(e3, t3.name);
    }, 5381).toString() : "", m2;
  }
  __name(ae, "ae");
  var ce = r$1.createContext();
  ce.Consumer;
  var le = r$1.createContext(), de = (le.Consumer, new X()), he = ae();
  function pe() {
    return r$1.useContext(ce) || de;
  }
  __name(pe, "pe");
  function fe() {
    return r$1.useContext(le) || he;
  }
  __name(fe, "fe");
  var ye = function() {
    function e2(e3, t2) {
      var n2 = this;
      this.inject = function(e4, t3) {
        void 0 === t3 && (t3 = he);
        var r2 = n2.name + t3.hash;
        e4.hasNameForId(n2.id, r2) || e4.insertRules(n2.id, r2, t3(n2.rules, r2, "@keyframes"));
      }, this.toString = function() {
        return D(12, String(n2.name));
      }, this.name = e3, this.id = "sc-keyframes-" + e3, this.rules = t2;
    }
    __name(e2, "e2");
    return e2.prototype.getName = function(e3) {
      return void 0 === e3 && (e3 = he), this.name + e3.hash;
    }, e2;
  }(), ve = /([A-Z])/, ge = /([A-Z])/g, Se = /^ms-/, we = /* @__PURE__ */ __name(function(e2) {
    return "-" + e2.toLowerCase();
  }, "we");
  function Ee(e2) {
    return ve.test(e2) ? e2.replace(ge, we).replace(Se, "-ms-") : e2;
  }
  __name(Ee, "Ee");
  var be = /* @__PURE__ */ __name(function(e2) {
    return null == e2 || false === e2 || "" === e2;
  }, "be");
  function _e(e2, n2, r2, o2) {
    if (Array.isArray(e2)) {
      for (var s2, i2 = [], a2 = 0, c2 = e2.length; a2 < c2; a2 += 1) "" !== (s2 = _e(e2[a2], n2, r2, o2)) && (Array.isArray(s2) ? i2.push.apply(i2, s2) : i2.push(s2));
      return i2;
    }
    if (be(e2)) return "";
    if (_(e2)) return "." + e2.styledComponentId;
    if (E(e2)) {
      if ("function" != typeof (l2 = e2) || l2.prototype && l2.prototype.isReactComponent || !n2) return e2;
      var u2 = e2(n2);
      return "production" !== define_process_default$2.env.NODE_ENV && reactIsExports.isElement(u2) && console.warn(b(e2) + " is not a styled component and cannot be referred to via component selector. See https://www.styled-components.com/docs/advanced#referring-to-other-components for more details."), _e(u2, n2, r2, o2);
    }
    var l2;
    return e2 instanceof ye ? r2 ? (e2.inject(r2, o2), e2.getName(o2)) : e2 : g(e2) ? (/* @__PURE__ */ __name(function e3(t2, n3) {
      var r3, o3, s3 = [];
      for (var i3 in t2) t2.hasOwnProperty(i3) && !be(t2[i3]) && (Array.isArray(t2[i3]) && t2[i3].isCss || E(t2[i3]) ? s3.push(Ee(i3) + ":", t2[i3], ";") : g(t2[i3]) ? s3.push.apply(s3, e3(t2[i3], i3)) : s3.push(Ee(i3) + ": " + (r3 = i3, null == (o3 = t2[i3]) || "boolean" == typeof o3 || "" === o3 ? "" : "number" != typeof o3 || 0 === o3 || r3 in unitlessKeys || r3.startsWith("--") ? String(o3).trim() : o3 + "px") + ";"));
      return n3 ? [n3 + " {"].concat(s3, ["}"]) : s3;
    }, "e3"))(e2) : e2.toString();
  }
  __name(_e, "_e");
  var Ne = /* @__PURE__ */ __name(function(e2) {
    return Array.isArray(e2) && (e2.isCss = true), e2;
  }, "Ne");
  function Ae(e2) {
    for (var t2 = arguments.length, n2 = new Array(t2 > 1 ? t2 - 1 : 0), r2 = 1; r2 < t2; r2++) n2[r2 - 1] = arguments[r2];
    return E(e2) || g(e2) ? Ne(_e(v(S, [e2].concat(n2)))) : 0 === n2.length && 1 === e2.length && "string" == typeof e2[0] ? e2 : Ne(_e(v(e2, n2)));
  }
  __name(Ae, "Ae");
  var Ce = /invalid hook call/i, Ie = /* @__PURE__ */ new Set(), Pe = /* @__PURE__ */ __name(function(e2, t2) {
    if ("production" !== define_process_default$2.env.NODE_ENV) {
      var n2 = "The component " + e2 + (t2 ? ' with the id of "' + t2 + '"' : "") + " has been created dynamically.\nYou may see this warning because you've called styled inside another component.\nTo resolve this only create new StyledComponents outside of any render method and function component.", r2 = console.error;
      try {
        var o2 = true;
        console.error = function(e3) {
          if (Ce.test(e3)) o2 = false, Ie.delete(n2);
          else {
            for (var t3 = arguments.length, s2 = new Array(t3 > 1 ? t3 - 1 : 0), i2 = 1; i2 < t3; i2++) s2[i2 - 1] = arguments[i2];
            r2.apply(void 0, [e3].concat(s2));
          }
        }, r$1.useRef(), o2 && !Ie.has(n2) && (console.warn(n2), Ie.add(n2));
      } catch (e3) {
        Ce.test(e3.message) && Ie.delete(n2);
      } finally {
        console.error = r2;
      }
    }
  }, "Pe"), Oe = /* @__PURE__ */ __name(function(e2, t2, n2) {
    return void 0 === n2 && (n2 = w), e2.theme !== n2.theme && e2.theme || t2 || n2.theme;
  }, "Oe"), Re = /[!"#$%&'()*+,./:;<=>?@[\\\]^`{|}~-]+/g, De = /(^-|-$)/g;
  function je(e2) {
    return e2.replace(Re, "-").replace(De, "");
  }
  __name(je, "je");
  var Te = /* @__PURE__ */ __name(function(e2) {
    return Q(te(e2) >>> 0);
  }, "Te");
  function xe(e2) {
    return "string" == typeof e2 && ("production" === define_process_default$2.env.NODE_ENV || e2.charAt(0) === e2.charAt(0).toLowerCase());
  }
  __name(xe, "xe");
  var ke = /* @__PURE__ */ __name(function(e2) {
    return "function" == typeof e2 || "object" == typeof e2 && null !== e2 && !Array.isArray(e2);
  }, "ke"), Ve = /* @__PURE__ */ __name(function(e2) {
    return "__proto__" !== e2 && "constructor" !== e2 && "prototype" !== e2;
  }, "Ve");
  function Be(e2, t2, n2) {
    var r2 = e2[n2];
    ke(t2) && ke(r2) ? ze(r2, t2) : e2[n2] = t2;
  }
  __name(Be, "Be");
  function ze(e2) {
    for (var t2 = arguments.length, n2 = new Array(t2 > 1 ? t2 - 1 : 0), r2 = 1; r2 < t2; r2++) n2[r2 - 1] = arguments[r2];
    for (var o2 = 0, s2 = n2; o2 < s2.length; o2++) {
      var i2 = s2[o2];
      if (ke(i2)) for (var a2 in i2) Ve(a2) && Be(e2, i2[a2], a2);
    }
    return e2;
  }
  __name(ze, "ze");
  var Me = r$1.createContext();
  Me.Consumer;
  var Fe = {};
  function Ye(e2, t2, n2) {
    var o2 = _(e2), i2 = !xe(e2), a2 = t2.attrs, c2 = void 0 === a2 ? S : a2, l2 = t2.componentId, d2 = void 0 === l2 ? function(e3, t3) {
      var n3 = "string" != typeof e3 ? "sc" : je(e3);
      Fe[n3] = (Fe[n3] || 0) + 1;
      var r2 = n3 + "-" + Te("5.3.11" + n3 + Fe[n3]);
      return t3 ? t3 + "-" + r2 : r2;
    }(t2.displayName, t2.parentComponentId) : l2, h2 = t2.displayName, p2 = void 0 === h2 ? function(e3) {
      return xe(e3) ? "styled." + e3 : "Styled(" + b(e3) + ")";
    }(e2) : h2, v2 = t2.displayName && t2.componentId ? je(t2.displayName) + "-" + t2.componentId : t2.componentId || d2, g2 = o2 && e2.attrs ? Array.prototype.concat(e2.attrs, c2).filter(Boolean) : c2, N2 = t2.shouldForwardProp;
    o2 && e2.shouldForwardProp && (N2 = t2.shouldForwardProp ? function(n3, r2, o3) {
      return e2.shouldForwardProp(n3, r2, o3) && t2.shouldForwardProp(n3, r2, o3);
    } : e2.shouldForwardProp);
    var A2, C2 = new oe(n2, v2, o2 ? e2.componentStyle : void 0), I2 = C2.isStatic && 0 === c2.length, P2 = /* @__PURE__ */ __name(function(e3, t3) {
      return function(e4, t4, n3, r2) {
        var o3 = e4.attrs, i3 = e4.componentStyle, a3 = e4.defaultProps, c3 = e4.foldedComponentIds, l3 = e4.shouldForwardProp, d3 = e4.styledComponentId, h3 = e4.target, p3 = function(e5, t5, n4) {
          void 0 === e5 && (e5 = w);
          var r3 = y$1({}, t5, { theme: e5 }), o4 = {};
          return n4.forEach(function(e6) {
            var t6, n5, s2, i4 = e6;
            for (t6 in E(i4) && (i4 = i4(r3)), i4) r3[t6] = o4[t6] = "className" === t6 ? (n5 = o4[t6], s2 = i4[t6], n5 && s2 ? n5 + " " + s2 : n5 || s2) : i4[t6];
          }), [r3, o4];
        }(Oe(t4, r$1.useContext(Me), a3) || w, t4, o3), m2 = p3[0], v3 = p3[1], g3 = function(e5, t5, n4, r3) {
          var o4 = pe(), s2 = fe(), i4 = t5 ? e5.generateAndInjectStyles(w, o4, s2) : e5.generateAndInjectStyles(n4, o4, s2);
          return "production" !== define_process_default$2.env.NODE_ENV && !t5 && r3 && r3(i4), i4;
        }(i3, r2, m2, "production" !== define_process_default$2.env.NODE_ENV ? e4.warnTooManyClasses : void 0), S2 = n3, b2 = v3.$as || t4.$as || v3.as || t4.as || h3, _2 = xe(b2), N3 = v3 !== t4 ? y$1({}, t4, {}, v3) : t4, A3 = {};
        for (var C3 in N3) "$" !== C3[0] && "as" !== C3 && ("forwardedAs" === C3 ? A3.as = N3[C3] : (l3 ? l3(C3, isPropValid, b2) : !_2 || isPropValid(C3)) && (A3[C3] = N3[C3]));
        return t4.style && v3.style !== t4.style && (A3.style = y$1({}, t4.style, {}, v3.style)), A3.className = Array.prototype.concat(c3, d3, g3 !== d3 ? g3 : null, t4.className, v3.className).filter(Boolean).join(" "), A3.ref = S2, r$1.createElement(b2, A3);
      }(A2, e3, t3, I2);
    }, "P2");
    return P2.displayName = p2, (A2 = r$1.forwardRef(P2)).attrs = g2, A2.componentStyle = C2, A2.displayName = p2, A2.shouldForwardProp = N2, A2.foldedComponentIds = o2 ? Array.prototype.concat(e2.foldedComponentIds, e2.styledComponentId) : S, A2.styledComponentId = v2, A2.target = o2 ? e2.target : e2, A2.withComponent = function(e3) {
      var r2 = t2.componentId, o3 = function(e4, t3) {
        if (null == e4) return {};
        var n3, r3, o4 = {}, s3 = Object.keys(e4);
        for (r3 = 0; r3 < s3.length; r3++) n3 = s3[r3], t3.indexOf(n3) >= 0 || (o4[n3] = e4[n3]);
        return o4;
      }(t2, ["componentId"]), s2 = r2 && r2 + "-" + (xe(e3) ? e3 : je(b(e3)));
      return Ye(e3, y$1({}, o3, { attrs: g2, componentId: s2 }), n2);
    }, Object.defineProperty(A2, "defaultProps", { get: /* @__PURE__ */ __name(function() {
      return this._foldedDefaultProps;
    }, "get"), set: /* @__PURE__ */ __name(function(t3) {
      this._foldedDefaultProps = o2 ? ze({}, e2.defaultProps, t3) : t3;
    }, "set") }), "production" !== define_process_default$2.env.NODE_ENV && (Pe(p2, v2), A2.warnTooManyClasses = /* @__PURE__ */ function(e3, t3) {
      var n3 = {}, r2 = false;
      return function(o3) {
        if (!r2 && (n3[o3] = true, Object.keys(n3).length >= 200)) {
          var s2 = t3 ? ' with the id of "' + t3 + '"' : "";
          console.warn("Over 200 classes were generated for component " + e3 + s2 + ".\nConsider using the attrs method, together with a style object for frequently changed styles.\nExample:\n  const Component = styled.div.attrs(props => ({\n    style: {\n      background: props.background,\n    },\n  }))`width: 100%;`\n\n  <Component />"), r2 = true, n3 = {};
        }
      };
    }(p2, v2)), Object.defineProperty(A2, "toString", { value: /* @__PURE__ */ __name(function() {
      return "." + A2.styledComponentId;
    }, "value") }), i2 && m(A2, e2, { attrs: true, componentStyle: true, displayName: true, foldedComponentIds: true, shouldForwardProp: true, styledComponentId: true, target: true, withComponent: true }), A2;
  }
  __name(Ye, "Ye");
  var qe = /* @__PURE__ */ __name(function(e2) {
    return (/* @__PURE__ */ __name(function e3(t2, r2, o2) {
      if (void 0 === o2 && (o2 = w), !reactIsExports.isValidElementType(r2)) return D(1, String(r2));
      var s2 = /* @__PURE__ */ __name(function() {
        return t2(r2, o2, Ae.apply(void 0, arguments));
      }, "s2");
      return s2.withConfig = function(n2) {
        return e3(t2, r2, y$1({}, o2, {}, n2));
      }, s2.attrs = function(n2) {
        return e3(t2, r2, y$1({}, o2, { attrs: Array.prototype.concat(o2.attrs, n2).filter(Boolean) }));
      }, s2;
    }, "e3"))(Ye, e2);
  }, "qe");
  ["a", "abbr", "address", "area", "article", "aside", "audio", "b", "base", "bdi", "bdo", "big", "blockquote", "body", "br", "button", "canvas", "caption", "cite", "code", "col", "colgroup", "data", "datalist", "dd", "del", "details", "dfn", "dialog", "div", "dl", "dt", "em", "embed", "fieldset", "figcaption", "figure", "footer", "form", "h1", "h2", "h3", "h4", "h5", "h6", "head", "header", "hgroup", "hr", "html", "i", "iframe", "img", "input", "ins", "kbd", "keygen", "label", "legend", "li", "link", "main", "map", "mark", "marquee", "menu", "menuitem", "meta", "meter", "nav", "noscript", "object", "ol", "optgroup", "option", "output", "p", "param", "picture", "pre", "progress", "q", "rp", "rt", "ruby", "s", "samp", "script", "section", "select", "small", "source", "span", "strong", "style", "sub", "summary", "sup", "table", "tbody", "td", "textarea", "tfoot", "th", "thead", "time", "title", "tr", "track", "u", "ul", "var", "video", "wbr", "circle", "clipPath", "defs", "ellipse", "foreignObject", "g", "image", "line", "linearGradient", "marker", "mask", "path", "pattern", "polygon", "polyline", "radialGradient", "rect", "stop", "svg", "text", "textPath", "tspan"].forEach(function(e2) {
    qe[e2] = qe(e2);
  });
  "production" !== define_process_default$2.env.NODE_ENV && "undefined" != typeof navigator && "ReactNative" === navigator.product && console.warn("It looks like you've imported 'styled-components' on React Native.\nPerhaps you're looking to import 'styled-components/native'?\nRead more about this at https://www.styled-components.com/docs/basics#react-native"), "production" !== define_process_default$2.env.NODE_ENV && "test" !== define_process_default$2.env.NODE_ENV && "undefined" != typeof window && (window["__styled-components-init__"] = window["__styled-components-init__"] || 0, 1 === window["__styled-components-init__"] && console.warn("It looks like there are several instances of 'styled-components' initialized in this application. This may cause dynamic styles to not render properly, errors during the rehydration process, a missing theme prop, and makes your application bigger without good reason.\n\nSee https://s-c.sh/2BAXzed for more info."), window["__styled-components-init__"] += 1);
  const ButtonWrapper = qe.a`
  font-family: Arial, Helvetica, "Nimbus Sans L", "Liberation Sans", FreeSans,
    sans-serif;
  color: #191919;
  padding: 0.5rem 1rem;
  border-radius: 400rem;
  font-weight: 700;
  font-size: 0.875rem;
  transition: 0.03s ease-in-out;
  cursor: pointer;
  & + a {
    margin-left: 1rem;
  }
  &:hover {
    transform: scale(1.05);
  }
  &.button-light {
    background-color: #bfbfbf !important;
    color: #000000 !important;
  }
  &.button-gold {
    background-color: #ffc627 !important;
    color: #000000 !important;
  }
  &.button-dark {
    background-color: #191919 !important;
    color: #ffffff !important;
  }
  &.button-maroon {
    background-color: #8c1d40 !important;
    color: #ffffff !important;
  }
`;
  const Button = /* @__PURE__ */ __name(({ href, color, text: text2, classes, onClick, onFocus }) => {
    return /* @__PURE__ */ jsxRuntimeExports.jsx(
      ButtonWrapper,
      {
        href,
        className: `button-${color} ${classes ?? ""}`,
        onClick,
        onFocus,
        children: text2
      }
    );
  }, "Button");
  Button.propTypes = { ...ButtonPropTypes };
  const faBars = {
    prefix: "fas",
    iconName: "bars",
    icon: [448, 512, ["navicon"], "f0c9", "M0 96C0 78.3 14.3 64 32 64l384 0c17.7 0 32 14.3 32 32s-14.3 32-32 32L32 128C14.3 128 0 113.7 0 96zM0 256c0-17.7 14.3-32 32-32l384 0c17.7 0 32 14.3 32 32s-14.3 32-32 32L32 288c-17.7 0-32-14.3-32-32zM448 416c0 17.7-14.3 32-32 32L32 448c-17.7 0-32-14.3-32-32s14.3-32 32-32l384 0c17.7 0 32 14.3 32 32z"]
  };
  const faHouse = {
    prefix: "fas",
    iconName: "house",
    icon: [576, 512, [127968, 63498, 63500, "home", "home-alt", "home-lg-alt"], "f015", "M575.8 255.5c0 18-15 32.1-32 32.1l-32 0 .7 160.2c0 2.7-.2 5.4-.5 8.1l0 16.2c0 22.1-17.9 40-40 40l-16 0c-1.1 0-2.2 0-3.3-.1c-1.4 .1-2.8 .1-4.2 .1L416 512l-24 0c-22.1 0-40-17.9-40-40l0-24 0-64c0-17.7-14.3-32-32-32l-64 0c-17.7 0-32 14.3-32 32l0 64 0 24c0 22.1-17.9 40-40 40l-24 0-31.9 0c-1.5 0-3-.1-4.5-.2c-1.2 .1-2.4 .2-3.6 .2l-16 0c-22.1 0-40-17.9-40-40l0-112c0-.9 0-1.9 .1-2.8l0-69.7-32 0c-18 0-32-14-32-32.1c0-9 3-17 10-24L266.4 8c7-7 15-8 22-8s15 2 21 7L564.8 231.5c8 7 12 15 11 24z"]
  };
  const faHome = faHouse;
  const faMagnifyingGlass = {
    prefix: "fas",
    iconName: "magnifying-glass",
    icon: [512, 512, [128269, "search"], "f002", "M416 208c0 45.9-14.9 88.3-40 122.7L502.6 457.4c12.5 12.5 12.5 32.8 0 45.3s-32.8 12.5-45.3 0L330.7 376c-34.4 25.2-76.8 40-122.7 40C93.1 416 0 322.9 0 208S93.1 0 208 0S416 93.1 416 208zM208 352a144 144 0 1 0 0-288 144 144 0 1 0 0 288z"]
  };
  const faSearch = faMagnifyingGlass;
  const faChevronDown = {
    prefix: "fas",
    iconName: "chevron-down",
    icon: [512, 512, [], "f078", "M233.4 406.6c12.5 12.5 32.8 12.5 45.3 0l192-192c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L256 338.7 86.6 169.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3l192 192z"]
  };
  const faXmark = {
    prefix: "fas",
    iconName: "xmark",
    icon: [384, 512, [128473, 10005, 10006, 10060, 215, "close", "multiply", "remove", "times"], "f00d", "M342.6 150.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L192 210.7 86.6 105.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L146.7 256 41.4 361.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L192 301.3 297.4 406.6c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L237.3 256 342.6 150.6z"]
  };
  const faTimes = faXmark;
  var define_process_default$1 = { env: { NODE_ENV: "production" } };
  const noop = /* @__PURE__ */ __name(() => {
  }, "noop");
  let _WINDOW = {};
  let _DOCUMENT = {};
  let _MUTATION_OBSERVER = null;
  let _PERFORMANCE = {
    mark: noop,
    measure: noop
  };
  try {
    if (typeof window !== "undefined") _WINDOW = window;
    if (typeof document !== "undefined") _DOCUMENT = document;
    if (typeof MutationObserver !== "undefined") _MUTATION_OBSERVER = MutationObserver;
    if (typeof performance !== "undefined") _PERFORMANCE = performance;
  } catch (e) {
  }
  const {
    userAgent = ""
  } = _WINDOW.navigator || {};
  const WINDOW = _WINDOW;
  const DOCUMENT = _DOCUMENT;
  const MUTATION_OBSERVER = _MUTATION_OBSERVER;
  const PERFORMANCE = _PERFORMANCE;
  !!WINDOW.document;
  const IS_DOM = !!DOCUMENT.documentElement && !!DOCUMENT.head && typeof DOCUMENT.addEventListener === "function" && typeof DOCUMENT.createElement === "function";
  const IS_IE = ~userAgent.indexOf("MSIE") || ~userAgent.indexOf("Trident/");
  var a = "classic", t = "duotone", r = "sharp", o = "sharp-duotone", c = [a, t, r, o];
  var et$1 = {
    classic: {
      900: "fas",
      400: "far",
      normal: "far",
      300: "fal",
      100: "fat"
    },
    sharp: {
      900: "fass",
      400: "fasr",
      300: "fasl",
      100: "fast"
    },
    "sharp-duotone": {
      900: "fasds"
    }
  };
  var bt = {
    kit: {
      fak: "kit",
      "fa-kit": "kit"
    },
    "kit-duotone": {
      fakd: "kit-duotone",
      "fa-kit-duotone": "kit-duotone"
    }
  }, Ct = ["kit"];
  var Dt = /fa(s|r|l|t|d|b|k|kd|ss|sr|sl|st|sds)?[\-\ ]/, Kt = /Font ?Awesome ?([56 ]*)(Solid|Regular|Light|Thin|Duotone|Brands|Free|Pro|Sharp Duotone|Sharp|Kit)?.*/i;
  var ao = {
    "Font Awesome 5 Free": {
      900: "fas",
      400: "far"
    },
    "Font Awesome 5 Pro": {
      900: "fas",
      400: "far",
      normal: "far",
      300: "fal"
    },
    "Font Awesome 5 Brands": {
      400: "fab",
      normal: "fab"
    },
    "Font Awesome 5 Duotone": {
      900: "fad"
    }
  };
  var eo = {
    "Font Awesome 6 Free": {
      900: "fas",
      400: "far"
    },
    "Font Awesome 6 Pro": {
      900: "fas",
      400: "far",
      normal: "far",
      300: "fal",
      100: "fat"
    },
    "Font Awesome 6 Brands": {
      400: "fab",
      normal: "fab"
    },
    "Font Awesome 6 Duotone": {
      900: "fad"
    },
    "Font Awesome 6 Sharp": {
      900: "fass",
      400: "fasr",
      normal: "fasr",
      300: "fasl",
      100: "fast"
    },
    "Font Awesome 6 Sharp Duotone": {
      900: "fasds"
    }
  }, lo = {
    classic: {
      "fa-brands": "fab",
      "fa-duotone": "fad",
      "fa-light": "fal",
      "fa-regular": "far",
      "fa-solid": "fas",
      "fa-thin": "fat"
    },
    sharp: {
      "fa-solid": "fass",
      "fa-regular": "fasr",
      "fa-light": "fasl",
      "fa-thin": "fast"
    },
    "sharp-duotone": {
      "fa-solid": "fasds"
    }
  }, y = {
    classic: ["fas", "far", "fal", "fat"],
    sharp: ["fass", "fasr", "fasl", "fast"],
    "sharp-duotone": ["fasds"]
  }, no = {
    classic: {
      fab: "fa-brands",
      fad: "fa-duotone",
      fal: "fa-light",
      far: "fa-regular",
      fas: "fa-solid",
      fat: "fa-thin"
    },
    sharp: {
      fass: "fa-solid",
      fasr: "fa-regular",
      fasl: "fa-light",
      fast: "fa-thin"
    },
    "sharp-duotone": {
      fasds: "fa-solid"
    }
  }, fo = {
    classic: {
      solid: "fas",
      regular: "far",
      light: "fal",
      thin: "fat",
      duotone: "fad",
      brands: "fab"
    },
    sharp: {
      solid: "fass",
      regular: "fasr",
      light: "fasl",
      thin: "fast"
    },
    "sharp-duotone": {
      solid: "fasds"
    }
  }, ho = {
    classic: {
      fa: "solid",
      fas: "solid",
      "fa-solid": "solid",
      far: "regular",
      "fa-regular": "regular",
      fal: "light",
      "fa-light": "light",
      fat: "thin",
      "fa-thin": "thin",
      fad: "duotone",
      "fa-duotone": "duotone",
      fab: "brands",
      "fa-brands": "brands"
    },
    sharp: {
      fa: "solid",
      fass: "solid",
      "fa-solid": "solid",
      fasr: "regular",
      "fa-regular": "regular",
      fasl: "light",
      "fa-light": "light",
      fast: "thin",
      "fa-thin": "thin"
    },
    "sharp-duotone": {
      fa: "solid",
      fasds: "solid",
      "fa-solid": "solid"
    }
  }, x$1 = ["solid", "regular", "light", "thin", "duotone", "brands"], u$1 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], m$1 = u$1.concat([11, 12, 13, 14, 15, 16, 17, 18, 19, 20]), t$1 = {
    GROUP: "duotone-group",
    SWAP_OPACITY: "swap-opacity",
    PRIMARY: "primary",
    SECONDARY: "secondary"
  }, yo = [...Object.keys(y), ...x$1, "2xs", "xs", "sm", "lg", "xl", "2xl", "beat", "border", "fade", "beat-fade", "bounce", "flip-both", "flip-horizontal", "flip-vertical", "flip", "fw", "inverse", "layers-counter", "layers-text", "layers", "li", "pull-left", "pull-right", "pulse", "rotate-180", "rotate-270", "rotate-90", "rotate-by", "shake", "spin-pulse", "spin-reverse", "spin", "stack-1x", "stack-2x", "stack", "ul", t$1.GROUP, t$1.SWAP_OPACITY, t$1.PRIMARY, t$1.SECONDARY].concat(u$1.map((o2) => "".concat(o2, "x"))).concat(m$1.map((o2) => "w-".concat(o2)));
  var mo = {
    "Font Awesome Kit": {
      400: "fak",
      normal: "fak"
    },
    "Font Awesome Kit Duotone": {
      400: "fakd",
      normal: "fakd"
    }
  }, Io = {
    kit: {
      "fa-kit": "fak"
    },
    "kit-duotone": {
      "fa-kit-duotone": "fakd"
    }
  }, Fo = {
    kit: {
      fak: "fa-kit"
    },
    "kit-duotone": {
      fakd: "fa-kit-duotone"
    }
  }, So = {
    kit: {
      kit: "fak"
    },
    "kit-duotone": {
      "kit-duotone": "fakd"
    }
  };
  const NAMESPACE_IDENTIFIER = "___FONT_AWESOME___";
  const UNITS_IN_GRID = 16;
  const DEFAULT_CSS_PREFIX = "fa";
  const DEFAULT_REPLACEMENT_CLASS = "svg-inline--fa";
  const DATA_FA_I2SVG = "data-fa-i2svg";
  const DATA_FA_PSEUDO_ELEMENT = "data-fa-pseudo-element";
  const DATA_FA_PSEUDO_ELEMENT_PENDING = "data-fa-pseudo-element-pending";
  const DATA_PREFIX = "data-prefix";
  const DATA_ICON = "data-icon";
  const HTML_CLASS_I2SVG_BASE_CLASS = "fontawesome-i2svg";
  const MUTATION_APPROACH_ASYNC = "async";
  const TAGNAMES_TO_SKIP_FOR_PSEUDOELEMENTS = ["HTML", "HEAD", "STYLE", "SCRIPT"];
  const PRODUCTION$1 = (() => {
    try {
      return define_process_default$1.env.NODE_ENV === "production";
    } catch (e$$1) {
      return false;
    }
  })();
  const FAMILIES = [a, r, o];
  function familyProxy(obj) {
    return new Proxy(obj, {
      get(target, prop) {
        return prop in target ? target[prop] : target[a];
      }
    });
  }
  __name(familyProxy, "familyProxy");
  const _PREFIX_TO_STYLE = {
    ...ho
  };
  _PREFIX_TO_STYLE[a] = {
    ...ho[a],
    ...bt["kit"],
    ...bt["kit-duotone"]
  };
  const PREFIX_TO_STYLE = familyProxy(_PREFIX_TO_STYLE);
  const _STYLE_TO_PREFIX = {
    ...fo
  };
  _STYLE_TO_PREFIX[a] = {
    ..._STYLE_TO_PREFIX[a],
    ...So["kit"],
    ...So["kit-duotone"]
  };
  const STYLE_TO_PREFIX = familyProxy(_STYLE_TO_PREFIX);
  const _PREFIX_TO_LONG_STYLE = {
    ...no
  };
  _PREFIX_TO_LONG_STYLE[a] = {
    ..._PREFIX_TO_LONG_STYLE[a],
    ...Fo["kit"]
  };
  const PREFIX_TO_LONG_STYLE = familyProxy(_PREFIX_TO_LONG_STYLE);
  const _LONG_STYLE_TO_PREFIX = {
    ...lo
  };
  _LONG_STYLE_TO_PREFIX[a] = {
    ..._LONG_STYLE_TO_PREFIX[a],
    ...Io["kit"]
  };
  const LONG_STYLE_TO_PREFIX = familyProxy(_LONG_STYLE_TO_PREFIX);
  const ICON_SELECTION_SYNTAX_PATTERN = Dt;
  const LAYERS_TEXT_CLASSNAME = "fa-layers-text";
  const FONT_FAMILY_PATTERN = Kt;
  const _FONT_WEIGHT_TO_PREFIX = {
    ...et$1
  };
  familyProxy(_FONT_WEIGHT_TO_PREFIX);
  const ATTRIBUTES_WATCHED_FOR_MUTATION = ["class", "data-prefix", "data-icon", "data-fa-transform", "data-fa-mask"];
  const DUOTONE_CLASSES = t$1;
  const prefixes = /* @__PURE__ */ new Set();
  Object.keys(STYLE_TO_PREFIX[a]).map(prefixes.add.bind(prefixes));
  Object.keys(STYLE_TO_PREFIX[r]).map(prefixes.add.bind(prefixes));
  Object.keys(STYLE_TO_PREFIX[o]).map(prefixes.add.bind(prefixes));
  const RESERVED_CLASSES = [...Ct, ...yo];
  const initial = WINDOW.FontAwesomeConfig || {};
  function getAttrConfig(attr) {
    var element = DOCUMENT.querySelector("script[" + attr + "]");
    if (element) {
      return element.getAttribute(attr);
    }
  }
  __name(getAttrConfig, "getAttrConfig");
  function coerce(val) {
    if (val === "") return true;
    if (val === "false") return false;
    if (val === "true") return true;
    return val;
  }
  __name(coerce, "coerce");
  if (DOCUMENT && typeof DOCUMENT.querySelector === "function") {
    const attrs = [["data-family-prefix", "familyPrefix"], ["data-css-prefix", "cssPrefix"], ["data-family-default", "familyDefault"], ["data-style-default", "styleDefault"], ["data-replacement-class", "replacementClass"], ["data-auto-replace-svg", "autoReplaceSvg"], ["data-auto-add-css", "autoAddCss"], ["data-auto-a11y", "autoA11y"], ["data-search-pseudo-elements", "searchPseudoElements"], ["data-observe-mutations", "observeMutations"], ["data-mutate-approach", "mutateApproach"], ["data-keep-original-source", "keepOriginalSource"], ["data-measure-performance", "measurePerformance"], ["data-show-missing-icons", "showMissingIcons"]];
    attrs.forEach((_ref2) => {
      let [attr, key] = _ref2;
      const val = coerce(getAttrConfig(attr));
      if (val !== void 0 && val !== null) {
        initial[key] = val;
      }
    });
  }
  const _default = {
    styleDefault: "solid",
    familyDefault: "classic",
    cssPrefix: DEFAULT_CSS_PREFIX,
    replacementClass: DEFAULT_REPLACEMENT_CLASS,
    autoReplaceSvg: true,
    autoAddCss: true,
    autoA11y: true,
    searchPseudoElements: false,
    observeMutations: true,
    mutateApproach: "async",
    keepOriginalSource: true,
    measurePerformance: false,
    showMissingIcons: true
  };
  if (initial.familyPrefix) {
    initial.cssPrefix = initial.familyPrefix;
  }
  const _config = {
    ..._default,
    ...initial
  };
  if (!_config.autoReplaceSvg) _config.observeMutations = false;
  const config = {};
  Object.keys(_default).forEach((key) => {
    Object.defineProperty(config, key, {
      enumerable: true,
      set: /* @__PURE__ */ __name(function(val) {
        _config[key] = val;
        _onChangeCb.forEach((cb) => cb(config));
      }, "set"),
      get: /* @__PURE__ */ __name(function() {
        return _config[key];
      }, "get")
    });
  });
  Object.defineProperty(config, "familyPrefix", {
    enumerable: true,
    set: /* @__PURE__ */ __name(function(val) {
      _config.cssPrefix = val;
      _onChangeCb.forEach((cb) => cb(config));
    }, "set"),
    get: /* @__PURE__ */ __name(function() {
      return _config.cssPrefix;
    }, "get")
  });
  WINDOW.FontAwesomeConfig = config;
  const _onChangeCb = [];
  function onChange(cb) {
    _onChangeCb.push(cb);
    return () => {
      _onChangeCb.splice(_onChangeCb.indexOf(cb), 1);
    };
  }
  __name(onChange, "onChange");
  const d$2 = UNITS_IN_GRID;
  const meaninglessTransform = {
    size: 16,
    x: 0,
    y: 0,
    rotate: 0,
    flipX: false,
    flipY: false
  };
  function insertCss(css2) {
    if (!css2 || !IS_DOM) {
      return;
    }
    const style = DOCUMENT.createElement("style");
    style.setAttribute("type", "text/css");
    style.innerHTML = css2;
    const headChildren = DOCUMENT.head.childNodes;
    let beforeChild = null;
    for (let i = headChildren.length - 1; i > -1; i--) {
      const child = headChildren[i];
      const tagName = (child.tagName || "").toUpperCase();
      if (["STYLE", "LINK"].indexOf(tagName) > -1) {
        beforeChild = child;
      }
    }
    DOCUMENT.head.insertBefore(style, beforeChild);
    return css2;
  }
  __name(insertCss, "insertCss");
  const idPool = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";
  function nextUniqueId() {
    let size = 12;
    let id = "";
    while (size-- > 0) {
      id += idPool[Math.random() * 62 | 0];
    }
    return id;
  }
  __name(nextUniqueId, "nextUniqueId");
  function toArray(obj) {
    const array = [];
    for (let i = (obj || []).length >>> 0; i--; ) {
      array[i] = obj[i];
    }
    return array;
  }
  __name(toArray, "toArray");
  function classArray(node) {
    if (node.classList) {
      return toArray(node.classList);
    } else {
      return (node.getAttribute("class") || "").split(" ").filter((i) => i);
    }
  }
  __name(classArray, "classArray");
  function htmlEscape(str) {
    return "".concat(str).replace(/&/g, "&amp;").replace(/"/g, "&quot;").replace(/'/g, "&#39;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
  }
  __name(htmlEscape, "htmlEscape");
  function joinAttributes(attributes) {
    return Object.keys(attributes || {}).reduce((acc, attributeName) => {
      return acc + "".concat(attributeName, '="').concat(htmlEscape(attributes[attributeName]), '" ');
    }, "").trim();
  }
  __name(joinAttributes, "joinAttributes");
  function joinStyles(styles2) {
    return Object.keys(styles2 || {}).reduce((acc, styleName) => {
      return acc + "".concat(styleName, ": ").concat(styles2[styleName].trim(), ";");
    }, "");
  }
  __name(joinStyles, "joinStyles");
  function transformIsMeaningful(transform) {
    return transform.size !== meaninglessTransform.size || transform.x !== meaninglessTransform.x || transform.y !== meaninglessTransform.y || transform.rotate !== meaninglessTransform.rotate || transform.flipX || transform.flipY;
  }
  __name(transformIsMeaningful, "transformIsMeaningful");
  function transformForSvg(_ref2) {
    let {
      transform,
      containerWidth,
      iconWidth
    } = _ref2;
    const outer = {
      transform: "translate(".concat(containerWidth / 2, " 256)")
    };
    const innerTranslate = "translate(".concat(transform.x * 32, ", ").concat(transform.y * 32, ") ");
    const innerScale = "scale(".concat(transform.size / 16 * (transform.flipX ? -1 : 1), ", ").concat(transform.size / 16 * (transform.flipY ? -1 : 1), ") ");
    const innerRotate = "rotate(".concat(transform.rotate, " 0 0)");
    const inner = {
      transform: "".concat(innerTranslate, " ").concat(innerScale, " ").concat(innerRotate)
    };
    const path = {
      transform: "translate(".concat(iconWidth / 2 * -1, " -256)")
    };
    return {
      outer,
      inner,
      path
    };
  }
  __name(transformForSvg, "transformForSvg");
  function transformForCss(_ref2) {
    let {
      transform,
      width = UNITS_IN_GRID,
      height = UNITS_IN_GRID,
      startCentered = false
    } = _ref2;
    let val = "";
    if (startCentered && IS_IE) {
      val += "translate(".concat(transform.x / d$2 - width / 2, "em, ").concat(transform.y / d$2 - height / 2, "em) ");
    } else if (startCentered) {
      val += "translate(calc(-50% + ".concat(transform.x / d$2, "em), calc(-50% + ").concat(transform.y / d$2, "em)) ");
    } else {
      val += "translate(".concat(transform.x / d$2, "em, ").concat(transform.y / d$2, "em) ");
    }
    val += "scale(".concat(transform.size / d$2 * (transform.flipX ? -1 : 1), ", ").concat(transform.size / d$2 * (transform.flipY ? -1 : 1), ") ");
    val += "rotate(".concat(transform.rotate, "deg) ");
    return val;
  }
  __name(transformForCss, "transformForCss");
  var baseStyles = ':root, :host {\n  --fa-font-solid: normal 900 1em/1 "Font Awesome 6 Free";\n  --fa-font-regular: normal 400 1em/1 "Font Awesome 6 Free";\n  --fa-font-light: normal 300 1em/1 "Font Awesome 6 Pro";\n  --fa-font-thin: normal 100 1em/1 "Font Awesome 6 Pro";\n  --fa-font-duotone: normal 900 1em/1 "Font Awesome 6 Duotone";\n  --fa-font-brands: normal 400 1em/1 "Font Awesome 6 Brands";\n  --fa-font-sharp-solid: normal 900 1em/1 "Font Awesome 6 Sharp";\n  --fa-font-sharp-regular: normal 400 1em/1 "Font Awesome 6 Sharp";\n  --fa-font-sharp-light: normal 300 1em/1 "Font Awesome 6 Sharp";\n  --fa-font-sharp-thin: normal 100 1em/1 "Font Awesome 6 Sharp";\n  --fa-font-sharp-duotone-solid: normal 900 1em/1 "Font Awesome 6 Sharp Duotone";\n}\n\nsvg:not(:root).svg-inline--fa, svg:not(:host).svg-inline--fa {\n  overflow: visible;\n  box-sizing: content-box;\n}\n\n.svg-inline--fa {\n  display: var(--fa-display, inline-block);\n  height: 1em;\n  overflow: visible;\n  vertical-align: -0.125em;\n}\n.svg-inline--fa.fa-2xs {\n  vertical-align: 0.1em;\n}\n.svg-inline--fa.fa-xs {\n  vertical-align: 0em;\n}\n.svg-inline--fa.fa-sm {\n  vertical-align: -0.0714285705em;\n}\n.svg-inline--fa.fa-lg {\n  vertical-align: -0.2em;\n}\n.svg-inline--fa.fa-xl {\n  vertical-align: -0.25em;\n}\n.svg-inline--fa.fa-2xl {\n  vertical-align: -0.3125em;\n}\n.svg-inline--fa.fa-pull-left {\n  margin-right: var(--fa-pull-margin, 0.3em);\n  width: auto;\n}\n.svg-inline--fa.fa-pull-right {\n  margin-left: var(--fa-pull-margin, 0.3em);\n  width: auto;\n}\n.svg-inline--fa.fa-li {\n  width: var(--fa-li-width, 2em);\n  top: 0.25em;\n}\n.svg-inline--fa.fa-fw {\n  width: var(--fa-fw-width, 1.25em);\n}\n\n.fa-layers svg.svg-inline--fa {\n  bottom: 0;\n  left: 0;\n  margin: auto;\n  position: absolute;\n  right: 0;\n  top: 0;\n}\n\n.fa-layers-counter, .fa-layers-text {\n  display: inline-block;\n  position: absolute;\n  text-align: center;\n}\n\n.fa-layers {\n  display: inline-block;\n  height: 1em;\n  position: relative;\n  text-align: center;\n  vertical-align: -0.125em;\n  width: 1em;\n}\n.fa-layers svg.svg-inline--fa {\n  transform-origin: center center;\n}\n\n.fa-layers-text {\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  transform-origin: center center;\n}\n\n.fa-layers-counter {\n  background-color: var(--fa-counter-background-color, #ff253a);\n  border-radius: var(--fa-counter-border-radius, 1em);\n  box-sizing: border-box;\n  color: var(--fa-inverse, #fff);\n  line-height: var(--fa-counter-line-height, 1);\n  max-width: var(--fa-counter-max-width, 5em);\n  min-width: var(--fa-counter-min-width, 1.5em);\n  overflow: hidden;\n  padding: var(--fa-counter-padding, 0.25em 0.5em);\n  right: var(--fa-right, 0);\n  text-overflow: ellipsis;\n  top: var(--fa-top, 0);\n  transform: scale(var(--fa-counter-scale, 0.25));\n  transform-origin: top right;\n}\n\n.fa-layers-bottom-right {\n  bottom: var(--fa-bottom, 0);\n  right: var(--fa-right, 0);\n  top: auto;\n  transform: scale(var(--fa-layers-scale, 0.25));\n  transform-origin: bottom right;\n}\n\n.fa-layers-bottom-left {\n  bottom: var(--fa-bottom, 0);\n  left: var(--fa-left, 0);\n  right: auto;\n  top: auto;\n  transform: scale(var(--fa-layers-scale, 0.25));\n  transform-origin: bottom left;\n}\n\n.fa-layers-top-right {\n  top: var(--fa-top, 0);\n  right: var(--fa-right, 0);\n  transform: scale(var(--fa-layers-scale, 0.25));\n  transform-origin: top right;\n}\n\n.fa-layers-top-left {\n  left: var(--fa-left, 0);\n  right: auto;\n  top: var(--fa-top, 0);\n  transform: scale(var(--fa-layers-scale, 0.25));\n  transform-origin: top left;\n}\n\n.fa-1x {\n  font-size: 1em;\n}\n\n.fa-2x {\n  font-size: 2em;\n}\n\n.fa-3x {\n  font-size: 3em;\n}\n\n.fa-4x {\n  font-size: 4em;\n}\n\n.fa-5x {\n  font-size: 5em;\n}\n\n.fa-6x {\n  font-size: 6em;\n}\n\n.fa-7x {\n  font-size: 7em;\n}\n\n.fa-8x {\n  font-size: 8em;\n}\n\n.fa-9x {\n  font-size: 9em;\n}\n\n.fa-10x {\n  font-size: 10em;\n}\n\n.fa-2xs {\n  font-size: 0.625em;\n  line-height: 0.1em;\n  vertical-align: 0.225em;\n}\n\n.fa-xs {\n  font-size: 0.75em;\n  line-height: 0.0833333337em;\n  vertical-align: 0.125em;\n}\n\n.fa-sm {\n  font-size: 0.875em;\n  line-height: 0.0714285718em;\n  vertical-align: 0.0535714295em;\n}\n\n.fa-lg {\n  font-size: 1.25em;\n  line-height: 0.05em;\n  vertical-align: -0.075em;\n}\n\n.fa-xl {\n  font-size: 1.5em;\n  line-height: 0.0416666682em;\n  vertical-align: -0.125em;\n}\n\n.fa-2xl {\n  font-size: 2em;\n  line-height: 0.03125em;\n  vertical-align: -0.1875em;\n}\n\n.fa-fw {\n  text-align: center;\n  width: 1.25em;\n}\n\n.fa-ul {\n  list-style-type: none;\n  margin-left: var(--fa-li-margin, 2.5em);\n  padding-left: 0;\n}\n.fa-ul > li {\n  position: relative;\n}\n\n.fa-li {\n  left: calc(-1 * var(--fa-li-width, 2em));\n  position: absolute;\n  text-align: center;\n  width: var(--fa-li-width, 2em);\n  line-height: inherit;\n}\n\n.fa-border {\n  border-color: var(--fa-border-color, #eee);\n  border-radius: var(--fa-border-radius, 0.1em);\n  border-style: var(--fa-border-style, solid);\n  border-width: var(--fa-border-width, 0.08em);\n  padding: var(--fa-border-padding, 0.2em 0.25em 0.15em);\n}\n\n.fa-pull-left {\n  float: left;\n  margin-right: var(--fa-pull-margin, 0.3em);\n}\n\n.fa-pull-right {\n  float: right;\n  margin-left: var(--fa-pull-margin, 0.3em);\n}\n\n.fa-beat {\n  animation-name: fa-beat;\n  animation-delay: var(--fa-animation-delay, 0s);\n  animation-direction: var(--fa-animation-direction, normal);\n  animation-duration: var(--fa-animation-duration, 1s);\n  animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n  animation-timing-function: var(--fa-animation-timing, ease-in-out);\n}\n\n.fa-bounce {\n  animation-name: fa-bounce;\n  animation-delay: var(--fa-animation-delay, 0s);\n  animation-direction: var(--fa-animation-direction, normal);\n  animation-duration: var(--fa-animation-duration, 1s);\n  animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n  animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.28, 0.84, 0.42, 1));\n}\n\n.fa-fade {\n  animation-name: fa-fade;\n  animation-delay: var(--fa-animation-delay, 0s);\n  animation-direction: var(--fa-animation-direction, normal);\n  animation-duration: var(--fa-animation-duration, 1s);\n  animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n  animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.4, 0, 0.6, 1));\n}\n\n.fa-beat-fade {\n  animation-name: fa-beat-fade;\n  animation-delay: var(--fa-animation-delay, 0s);\n  animation-direction: var(--fa-animation-direction, normal);\n  animation-duration: var(--fa-animation-duration, 1s);\n  animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n  animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.4, 0, 0.6, 1));\n}\n\n.fa-flip {\n  animation-name: fa-flip;\n  animation-delay: var(--fa-animation-delay, 0s);\n  animation-direction: var(--fa-animation-direction, normal);\n  animation-duration: var(--fa-animation-duration, 1s);\n  animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n  animation-timing-function: var(--fa-animation-timing, ease-in-out);\n}\n\n.fa-shake {\n  animation-name: fa-shake;\n  animation-delay: var(--fa-animation-delay, 0s);\n  animation-direction: var(--fa-animation-direction, normal);\n  animation-duration: var(--fa-animation-duration, 1s);\n  animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n  animation-timing-function: var(--fa-animation-timing, linear);\n}\n\n.fa-spin {\n  animation-name: fa-spin;\n  animation-delay: var(--fa-animation-delay, 0s);\n  animation-direction: var(--fa-animation-direction, normal);\n  animation-duration: var(--fa-animation-duration, 2s);\n  animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n  animation-timing-function: var(--fa-animation-timing, linear);\n}\n\n.fa-spin-reverse {\n  --fa-animation-direction: reverse;\n}\n\n.fa-pulse,\n.fa-spin-pulse {\n  animation-name: fa-spin;\n  animation-direction: var(--fa-animation-direction, normal);\n  animation-duration: var(--fa-animation-duration, 1s);\n  animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n  animation-timing-function: var(--fa-animation-timing, steps(8));\n}\n\n@media (prefers-reduced-motion: reduce) {\n  .fa-beat,\n.fa-bounce,\n.fa-fade,\n.fa-beat-fade,\n.fa-flip,\n.fa-pulse,\n.fa-shake,\n.fa-spin,\n.fa-spin-pulse {\n    animation-delay: -1ms;\n    animation-duration: 1ms;\n    animation-iteration-count: 1;\n    transition-delay: 0s;\n    transition-duration: 0s;\n  }\n}\n@keyframes fa-beat {\n  0%, 90% {\n    transform: scale(1);\n  }\n  45% {\n    transform: scale(var(--fa-beat-scale, 1.25));\n  }\n}\n@keyframes fa-bounce {\n  0% {\n    transform: scale(1, 1) translateY(0);\n  }\n  10% {\n    transform: scale(var(--fa-bounce-start-scale-x, 1.1), var(--fa-bounce-start-scale-y, 0.9)) translateY(0);\n  }\n  30% {\n    transform: scale(var(--fa-bounce-jump-scale-x, 0.9), var(--fa-bounce-jump-scale-y, 1.1)) translateY(var(--fa-bounce-height, -0.5em));\n  }\n  50% {\n    transform: scale(var(--fa-bounce-land-scale-x, 1.05), var(--fa-bounce-land-scale-y, 0.95)) translateY(0);\n  }\n  57% {\n    transform: scale(1, 1) translateY(var(--fa-bounce-rebound, -0.125em));\n  }\n  64% {\n    transform: scale(1, 1) translateY(0);\n  }\n  100% {\n    transform: scale(1, 1) translateY(0);\n  }\n}\n@keyframes fa-fade {\n  50% {\n    opacity: var(--fa-fade-opacity, 0.4);\n  }\n}\n@keyframes fa-beat-fade {\n  0%, 100% {\n    opacity: var(--fa-beat-fade-opacity, 0.4);\n    transform: scale(1);\n  }\n  50% {\n    opacity: 1;\n    transform: scale(var(--fa-beat-fade-scale, 1.125));\n  }\n}\n@keyframes fa-flip {\n  50% {\n    transform: rotate3d(var(--fa-flip-x, 0), var(--fa-flip-y, 1), var(--fa-flip-z, 0), var(--fa-flip-angle, -180deg));\n  }\n}\n@keyframes fa-shake {\n  0% {\n    transform: rotate(-15deg);\n  }\n  4% {\n    transform: rotate(15deg);\n  }\n  8%, 24% {\n    transform: rotate(-18deg);\n  }\n  12%, 28% {\n    transform: rotate(18deg);\n  }\n  16% {\n    transform: rotate(-22deg);\n  }\n  20% {\n    transform: rotate(22deg);\n  }\n  32% {\n    transform: rotate(-12deg);\n  }\n  36% {\n    transform: rotate(12deg);\n  }\n  40%, 100% {\n    transform: rotate(0deg);\n  }\n}\n@keyframes fa-spin {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n.fa-rotate-90 {\n  transform: rotate(90deg);\n}\n\n.fa-rotate-180 {\n  transform: rotate(180deg);\n}\n\n.fa-rotate-270 {\n  transform: rotate(270deg);\n}\n\n.fa-flip-horizontal {\n  transform: scale(-1, 1);\n}\n\n.fa-flip-vertical {\n  transform: scale(1, -1);\n}\n\n.fa-flip-both,\n.fa-flip-horizontal.fa-flip-vertical {\n  transform: scale(-1, -1);\n}\n\n.fa-rotate-by {\n  transform: rotate(var(--fa-rotate-angle, 0));\n}\n\n.fa-stack {\n  display: inline-block;\n  vertical-align: middle;\n  height: 2em;\n  position: relative;\n  width: 2.5em;\n}\n\n.fa-stack-1x,\n.fa-stack-2x {\n  bottom: 0;\n  left: 0;\n  margin: auto;\n  position: absolute;\n  right: 0;\n  top: 0;\n  z-index: var(--fa-stack-z-index, auto);\n}\n\n.svg-inline--fa.fa-stack-1x {\n  height: 1em;\n  width: 1.25em;\n}\n.svg-inline--fa.fa-stack-2x {\n  height: 2em;\n  width: 2.5em;\n}\n\n.fa-inverse {\n  color: var(--fa-inverse, #fff);\n}\n\n.sr-only,\n.fa-sr-only {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  margin: -1px;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  border-width: 0;\n}\n\n.sr-only-focusable:not(:focus),\n.fa-sr-only-focusable:not(:focus) {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  margin: -1px;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  border-width: 0;\n}\n\n.svg-inline--fa .fa-primary {\n  fill: var(--fa-primary-color, currentColor);\n  opacity: var(--fa-primary-opacity, 1);\n}\n\n.svg-inline--fa .fa-secondary {\n  fill: var(--fa-secondary-color, currentColor);\n  opacity: var(--fa-secondary-opacity, 0.4);\n}\n\n.svg-inline--fa.fa-swap-opacity .fa-primary {\n  opacity: var(--fa-secondary-opacity, 0.4);\n}\n\n.svg-inline--fa.fa-swap-opacity .fa-secondary {\n  opacity: var(--fa-primary-opacity, 1);\n}\n\n.svg-inline--fa mask .fa-primary,\n.svg-inline--fa mask .fa-secondary {\n  fill: black;\n}\n\n.fad.fa-inverse,\n.fa-duotone.fa-inverse {\n  color: var(--fa-inverse, #fff);\n}';
  function css() {
    const dcp = DEFAULT_CSS_PREFIX;
    const drc = DEFAULT_REPLACEMENT_CLASS;
    const fp = config.cssPrefix;
    const rc = config.replacementClass;
    let s = baseStyles;
    if (fp !== dcp || rc !== drc) {
      const dPatt = new RegExp("\\.".concat(dcp, "\\-"), "g");
      const customPropPatt = new RegExp("\\--".concat(dcp, "\\-"), "g");
      const rPatt = new RegExp("\\.".concat(drc), "g");
      s = s.replace(dPatt, ".".concat(fp, "-")).replace(customPropPatt, "--".concat(fp, "-")).replace(rPatt, ".".concat(rc));
    }
    return s;
  }
  __name(css, "css");
  let _cssInserted = false;
  function ensureCss() {
    if (config.autoAddCss && !_cssInserted) {
      insertCss(css());
      _cssInserted = true;
    }
  }
  __name(ensureCss, "ensureCss");
  var InjectCSS = {
    mixout() {
      return {
        dom: {
          css,
          insertCss: ensureCss
        }
      };
    },
    hooks() {
      return {
        beforeDOMElementCreation() {
          ensureCss();
        },
        beforeI2svg() {
          ensureCss();
        }
      };
    }
  };
  const w$1 = WINDOW || {};
  if (!w$1[NAMESPACE_IDENTIFIER]) w$1[NAMESPACE_IDENTIFIER] = {};
  if (!w$1[NAMESPACE_IDENTIFIER].styles) w$1[NAMESPACE_IDENTIFIER].styles = {};
  if (!w$1[NAMESPACE_IDENTIFIER].hooks) w$1[NAMESPACE_IDENTIFIER].hooks = {};
  if (!w$1[NAMESPACE_IDENTIFIER].shims) w$1[NAMESPACE_IDENTIFIER].shims = [];
  var namespace = w$1[NAMESPACE_IDENTIFIER];
  const functions = [];
  const listener = /* @__PURE__ */ __name(function() {
    DOCUMENT.removeEventListener("DOMContentLoaded", listener);
    loaded = 1;
    functions.map((fn) => fn());
  }, "listener");
  let loaded = false;
  if (IS_DOM) {
    loaded = (DOCUMENT.documentElement.doScroll ? /^loaded|^c/ : /^loaded|^i|^c/).test(DOCUMENT.readyState);
    if (!loaded) DOCUMENT.addEventListener("DOMContentLoaded", listener);
  }
  function domready(fn) {
    if (!IS_DOM) return;
    loaded ? setTimeout(fn, 0) : functions.push(fn);
  }
  __name(domready, "domready");
  function toHtml(abstractNodes) {
    const {
      tag,
      attributes = {},
      children = []
    } = abstractNodes;
    if (typeof abstractNodes === "string") {
      return htmlEscape(abstractNodes);
    } else {
      return "<".concat(tag, " ").concat(joinAttributes(attributes), ">").concat(children.map(toHtml).join(""), "</").concat(tag, ">");
    }
  }
  __name(toHtml, "toHtml");
  function iconFromMapping(mapping, prefix, iconName) {
    if (mapping && mapping[prefix] && mapping[prefix][iconName]) {
      return {
        prefix,
        iconName,
        icon: mapping[prefix][iconName]
      };
    }
  }
  __name(iconFromMapping, "iconFromMapping");
  var reduce = /* @__PURE__ */ __name(function fastReduceObject(subject, fn, initialValue, thisContext) {
    var keys = Object.keys(subject), length = keys.length, iterator = fn, i, key, result;
    if (initialValue === void 0) {
      i = 1;
      result = subject[keys[0]];
    } else {
      i = 0;
      result = initialValue;
    }
    for (; i < length; i++) {
      key = keys[i];
      result = iterator(result, subject[key], key, subject);
    }
    return result;
  }, "fastReduceObject");
  function ucs2decode(string) {
    const output = [];
    let counter2 = 0;
    const length = string.length;
    while (counter2 < length) {
      const value = string.charCodeAt(counter2++);
      if (value >= 55296 && value <= 56319 && counter2 < length) {
        const extra = string.charCodeAt(counter2++);
        if ((extra & 64512) == 56320) {
          output.push(((value & 1023) << 10) + (extra & 1023) + 65536);
        } else {
          output.push(value);
          counter2--;
        }
      } else {
        output.push(value);
      }
    }
    return output;
  }
  __name(ucs2decode, "ucs2decode");
  function toHex(unicode) {
    const decoded = ucs2decode(unicode);
    return decoded.length === 1 ? decoded[0].toString(16) : null;
  }
  __name(toHex, "toHex");
  function codePointAt(string, index) {
    const size = string.length;
    let first = string.charCodeAt(index);
    let second;
    if (first >= 55296 && first <= 56319 && size > index + 1) {
      second = string.charCodeAt(index + 1);
      if (second >= 56320 && second <= 57343) {
        return (first - 55296) * 1024 + second - 56320 + 65536;
      }
    }
    return first;
  }
  __name(codePointAt, "codePointAt");
  function normalizeIcons(icons) {
    return Object.keys(icons).reduce((acc, iconName) => {
      const icon2 = icons[iconName];
      const expanded = !!icon2.icon;
      if (expanded) {
        acc[icon2.iconName] = icon2.icon;
      } else {
        acc[iconName] = icon2;
      }
      return acc;
    }, {});
  }
  __name(normalizeIcons, "normalizeIcons");
  function defineIcons(prefix, icons) {
    let params = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
    const {
      skipHooks = false
    } = params;
    const normalized = normalizeIcons(icons);
    if (typeof namespace.hooks.addPack === "function" && !skipHooks) {
      namespace.hooks.addPack(prefix, normalizeIcons(icons));
    } else {
      namespace.styles[prefix] = {
        ...namespace.styles[prefix] || {},
        ...normalized
      };
    }
    if (prefix === "fas") {
      defineIcons("fa", icons);
    }
  }
  __name(defineIcons, "defineIcons");
  const {
    styles,
    shims
  } = namespace;
  const LONG_STYLE = {
    [a]: Object.values(PREFIX_TO_LONG_STYLE[a]),
    [r]: Object.values(PREFIX_TO_LONG_STYLE[r]),
    [o]: Object.values(PREFIX_TO_LONG_STYLE[o])
  };
  let _defaultUsablePrefix = null;
  let _byUnicode = {};
  let _byLigature = {};
  let _byOldName = {};
  let _byOldUnicode = {};
  let _byAlias = {};
  const PREFIXES = {
    [a]: Object.keys(PREFIX_TO_STYLE[a]),
    [r]: Object.keys(PREFIX_TO_STYLE[r]),
    [o]: Object.keys(PREFIX_TO_STYLE[o])
  };
  function isReserved(name) {
    return ~RESERVED_CLASSES.indexOf(name);
  }
  __name(isReserved, "isReserved");
  function getIconName(cssPrefix, cls) {
    const parts = cls.split("-");
    const prefix = parts[0];
    const iconName = parts.slice(1).join("-");
    if (prefix === cssPrefix && iconName !== "" && !isReserved(iconName)) {
      return iconName;
    } else {
      return null;
    }
  }
  __name(getIconName, "getIconName");
  const build = /* @__PURE__ */ __name(() => {
    const lookup = /* @__PURE__ */ __name((reducer) => {
      return reduce(styles, (o$$1, style, prefix) => {
        o$$1[prefix] = reduce(style, reducer, {});
        return o$$1;
      }, {});
    }, "lookup");
    _byUnicode = lookup((acc, icon2, iconName) => {
      if (icon2[3]) {
        acc[icon2[3]] = iconName;
      }
      if (icon2[2]) {
        const aliases = icon2[2].filter((a$$1) => {
          return typeof a$$1 === "number";
        });
        aliases.forEach((alias) => {
          acc[alias.toString(16)] = iconName;
        });
      }
      return acc;
    });
    _byLigature = lookup((acc, icon2, iconName) => {
      acc[iconName] = iconName;
      if (icon2[2]) {
        const aliases = icon2[2].filter((a$$1) => {
          return typeof a$$1 === "string";
        });
        aliases.forEach((alias) => {
          acc[alias] = iconName;
        });
      }
      return acc;
    });
    _byAlias = lookup((acc, icon2, iconName) => {
      const aliases = icon2[2];
      acc[iconName] = iconName;
      aliases.forEach((alias) => {
        acc[alias] = iconName;
      });
      return acc;
    });
    const hasRegular = "far" in styles || config.autoFetchSvg;
    const shimLookups = reduce(shims, (acc, shim) => {
      const maybeNameMaybeUnicode = shim[0];
      let prefix = shim[1];
      const iconName = shim[2];
      if (prefix === "far" && !hasRegular) {
        prefix = "fas";
      }
      if (typeof maybeNameMaybeUnicode === "string") {
        acc.names[maybeNameMaybeUnicode] = {
          prefix,
          iconName
        };
      }
      if (typeof maybeNameMaybeUnicode === "number") {
        acc.unicodes[maybeNameMaybeUnicode.toString(16)] = {
          prefix,
          iconName
        };
      }
      return acc;
    }, {
      names: {},
      unicodes: {}
    });
    _byOldName = shimLookups.names;
    _byOldUnicode = shimLookups.unicodes;
    _defaultUsablePrefix = getCanonicalPrefix(config.styleDefault, {
      family: config.familyDefault
    });
  }, "build");
  onChange((c$$1) => {
    _defaultUsablePrefix = getCanonicalPrefix(c$$1.styleDefault, {
      family: config.familyDefault
    });
  });
  build();
  function byUnicode(prefix, unicode) {
    return (_byUnicode[prefix] || {})[unicode];
  }
  __name(byUnicode, "byUnicode");
  function byLigature(prefix, ligature) {
    return (_byLigature[prefix] || {})[ligature];
  }
  __name(byLigature, "byLigature");
  function byAlias(prefix, alias) {
    return (_byAlias[prefix] || {})[alias];
  }
  __name(byAlias, "byAlias");
  function byOldName(name) {
    return _byOldName[name] || {
      prefix: null,
      iconName: null
    };
  }
  __name(byOldName, "byOldName");
  function byOldUnicode(unicode) {
    const oldUnicode = _byOldUnicode[unicode];
    const newUnicode = byUnicode("fas", unicode);
    return oldUnicode || (newUnicode ? {
      prefix: "fas",
      iconName: newUnicode
    } : null) || {
      prefix: null,
      iconName: null
    };
  }
  __name(byOldUnicode, "byOldUnicode");
  function getDefaultUsablePrefix() {
    return _defaultUsablePrefix;
  }
  __name(getDefaultUsablePrefix, "getDefaultUsablePrefix");
  const emptyCanonicalIcon = /* @__PURE__ */ __name(() => {
    return {
      prefix: null,
      iconName: null,
      rest: []
    };
  }, "emptyCanonicalIcon");
  function getCanonicalPrefix(styleOrPrefix) {
    let params = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    const {
      family = a
    } = params;
    const style = PREFIX_TO_STYLE[family][styleOrPrefix];
    const prefix = STYLE_TO_PREFIX[family][styleOrPrefix] || STYLE_TO_PREFIX[family][style];
    const defined = styleOrPrefix in namespace.styles ? styleOrPrefix : null;
    const result = prefix || defined || null;
    return result;
  }
  __name(getCanonicalPrefix, "getCanonicalPrefix");
  const PREFIXES_FOR_FAMILY = {
    [a]: Object.keys(PREFIX_TO_LONG_STYLE[a]),
    [r]: Object.keys(PREFIX_TO_LONG_STYLE[r]),
    [o]: Object.keys(PREFIX_TO_LONG_STYLE[o])
  };
  function getCanonicalIcon(values) {
    let params = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    const {
      skipLookups = false
    } = params;
    const famProps = {
      [a]: "".concat(config.cssPrefix, "-").concat(a),
      [r]: "".concat(config.cssPrefix, "-").concat(r),
      [o]: "".concat(config.cssPrefix, "-").concat(o)
    };
    let givenPrefix = null;
    let family = a;
    const nonDuotoneFamilyIds = c.filter((familyId) => familyId !== t);
    nonDuotoneFamilyIds.forEach((familyId) => {
      if (values.includes(famProps[familyId]) || values.some((v$$1) => PREFIXES_FOR_FAMILY[familyId].includes(v$$1))) {
        family = familyId;
      }
    });
    const canonical = values.reduce((acc, cls) => {
      const iconName = getIconName(config.cssPrefix, cls);
      if (styles[cls]) {
        cls = LONG_STYLE[family].includes(cls) ? LONG_STYLE_TO_PREFIX[family][cls] : cls;
        givenPrefix = cls;
        acc.prefix = cls;
      } else if (PREFIXES[family].indexOf(cls) > -1) {
        givenPrefix = cls;
        acc.prefix = getCanonicalPrefix(cls, {
          family
        });
      } else if (iconName) {
        acc.iconName = iconName;
      } else if (cls !== config.replacementClass && !nonDuotoneFamilyIds.some((familyName) => cls === famProps[familyName])) {
        acc.rest.push(cls);
      }
      if (!skipLookups && acc.prefix && acc.iconName) {
        const shim = givenPrefix === "fa" ? byOldName(acc.iconName) : {};
        const aliasIconName = byAlias(acc.prefix, acc.iconName);
        if (shim.prefix) {
          givenPrefix = null;
        }
        acc.iconName = shim.iconName || aliasIconName || acc.iconName;
        acc.prefix = shim.prefix || acc.prefix;
        if (acc.prefix === "far" && !styles["far"] && styles["fas"] && !config.autoFetchSvg) {
          acc.prefix = "fas";
        }
      }
      return acc;
    }, emptyCanonicalIcon());
    if (values.includes("fa-brands") || values.includes("fab")) {
      canonical.prefix = "fab";
    }
    if (values.includes("fa-duotone") || values.includes("fad")) {
      canonical.prefix = "fad";
    }
    if (!canonical.prefix && family === r && (styles["fass"] || config.autoFetchSvg)) {
      canonical.prefix = "fass";
      canonical.iconName = byAlias(canonical.prefix, canonical.iconName) || canonical.iconName;
    }
    if (!canonical.prefix && family === o && (styles["fasds"] || config.autoFetchSvg)) {
      canonical.prefix = "fasds";
      canonical.iconName = byAlias(canonical.prefix, canonical.iconName) || canonical.iconName;
    }
    if (canonical.prefix === "fa" || givenPrefix === "fa") {
      canonical.prefix = getDefaultUsablePrefix() || "fas";
    }
    return canonical;
  }
  __name(getCanonicalIcon, "getCanonicalIcon");
  const _Library = class _Library {
    constructor() {
      this.definitions = {};
    }
    add() {
      for (var _len = arguments.length, definitions = new Array(_len), _key = 0; _key < _len; _key++) {
        definitions[_key] = arguments[_key];
      }
      const additions = definitions.reduce(this._pullDefinitions, {});
      Object.keys(additions).forEach((key) => {
        this.definitions[key] = {
          ...this.definitions[key] || {},
          ...additions[key]
        };
        defineIcons(key, additions[key]);
        const longPrefix = PREFIX_TO_LONG_STYLE[a][key];
        if (longPrefix) defineIcons(longPrefix, additions[key]);
        build();
      });
    }
    reset() {
      this.definitions = {};
    }
    _pullDefinitions(additions, definition) {
      const normalized = definition.prefix && definition.iconName && definition.icon ? {
        0: definition
      } : definition;
      Object.keys(normalized).map((key) => {
        const {
          prefix,
          iconName,
          icon: icon2
        } = normalized[key];
        const aliases = icon2[2];
        if (!additions[prefix]) additions[prefix] = {};
        if (aliases.length > 0) {
          aliases.forEach((alias) => {
            if (typeof alias === "string") {
              additions[prefix][alias] = icon2;
            }
          });
        }
        additions[prefix][iconName] = icon2;
      });
      return additions;
    }
  };
  __name(_Library, "Library");
  let Library = _Library;
  let _plugins = [];
  let _hooks = {};
  const providers = {};
  const defaultProviderKeys = Object.keys(providers);
  function registerPlugins(nextPlugins, _ref2) {
    let {
      mixoutsTo: obj
    } = _ref2;
    _plugins = nextPlugins;
    _hooks = {};
    Object.keys(providers).forEach((k2) => {
      if (defaultProviderKeys.indexOf(k2) === -1) {
        delete providers[k2];
      }
    });
    _plugins.forEach((plugin) => {
      const mixout = plugin.mixout ? plugin.mixout() : {};
      Object.keys(mixout).forEach((tk) => {
        if (typeof mixout[tk] === "function") {
          obj[tk] = mixout[tk];
        }
        if (typeof mixout[tk] === "object") {
          Object.keys(mixout[tk]).forEach((sk) => {
            if (!obj[tk]) {
              obj[tk] = {};
            }
            obj[tk][sk] = mixout[tk][sk];
          });
        }
      });
      if (plugin.hooks) {
        const hooks = plugin.hooks();
        Object.keys(hooks).forEach((hook) => {
          if (!_hooks[hook]) {
            _hooks[hook] = [];
          }
          _hooks[hook].push(hooks[hook]);
        });
      }
      if (plugin.provides) {
        plugin.provides(providers);
      }
    });
    return obj;
  }
  __name(registerPlugins, "registerPlugins");
  function chainHooks(hook, accumulator) {
    for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
      args[_key - 2] = arguments[_key];
    }
    const hookFns = _hooks[hook] || [];
    hookFns.forEach((hookFn) => {
      accumulator = hookFn.apply(null, [accumulator, ...args]);
    });
    return accumulator;
  }
  __name(chainHooks, "chainHooks");
  function callHooks(hook) {
    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
      args[_key2 - 1] = arguments[_key2];
    }
    const hookFns = _hooks[hook] || [];
    hookFns.forEach((hookFn) => {
      hookFn.apply(null, args);
    });
    return void 0;
  }
  __name(callHooks, "callHooks");
  function callProvided() {
    const hook = arguments[0];
    const args = Array.prototype.slice.call(arguments, 1);
    return providers[hook] ? providers[hook].apply(null, args) : void 0;
  }
  __name(callProvided, "callProvided");
  function findIconDefinition(iconLookup) {
    if (iconLookup.prefix === "fa") {
      iconLookup.prefix = "fas";
    }
    let {
      iconName
    } = iconLookup;
    const prefix = iconLookup.prefix || getDefaultUsablePrefix();
    if (!iconName) return;
    iconName = byAlias(prefix, iconName) || iconName;
    return iconFromMapping(library.definitions, prefix, iconName) || iconFromMapping(namespace.styles, prefix, iconName);
  }
  __name(findIconDefinition, "findIconDefinition");
  const library = new Library();
  const noAuto = /* @__PURE__ */ __name(() => {
    config.autoReplaceSvg = false;
    config.observeMutations = false;
    callHooks("noAuto");
  }, "noAuto");
  const dom = {
    i2svg: /* @__PURE__ */ __name(function() {
      let params = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      if (IS_DOM) {
        callHooks("beforeI2svg", params);
        callProvided("pseudoElements2svg", params);
        return callProvided("i2svg", params);
      } else {
        return Promise.reject(new Error("Operation requires a DOM of some kind."));
      }
    }, "i2svg"),
    watch: /* @__PURE__ */ __name(function() {
      let params = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      const {
        autoReplaceSvgRoot
      } = params;
      if (config.autoReplaceSvg === false) {
        config.autoReplaceSvg = true;
      }
      config.observeMutations = true;
      domready(() => {
        autoReplace({
          autoReplaceSvgRoot
        });
        callHooks("watch", params);
      });
    }, "watch")
  };
  const parse = {
    icon: /* @__PURE__ */ __name((icon2) => {
      if (icon2 === null) {
        return null;
      }
      if (typeof icon2 === "object" && icon2.prefix && icon2.iconName) {
        return {
          prefix: icon2.prefix,
          iconName: byAlias(icon2.prefix, icon2.iconName) || icon2.iconName
        };
      }
      if (Array.isArray(icon2) && icon2.length === 2) {
        const iconName = icon2[1].indexOf("fa-") === 0 ? icon2[1].slice(3) : icon2[1];
        const prefix = getCanonicalPrefix(icon2[0]);
        return {
          prefix,
          iconName: byAlias(prefix, iconName) || iconName
        };
      }
      if (typeof icon2 === "string" && (icon2.indexOf("".concat(config.cssPrefix, "-")) > -1 || icon2.match(ICON_SELECTION_SYNTAX_PATTERN))) {
        const canonicalIcon = getCanonicalIcon(icon2.split(" "), {
          skipLookups: true
        });
        return {
          prefix: canonicalIcon.prefix || getDefaultUsablePrefix(),
          iconName: byAlias(canonicalIcon.prefix, canonicalIcon.iconName) || canonicalIcon.iconName
        };
      }
      if (typeof icon2 === "string") {
        const prefix = getDefaultUsablePrefix();
        return {
          prefix,
          iconName: byAlias(prefix, icon2) || icon2
        };
      }
    }, "icon")
  };
  const api = {
    noAuto,
    config,
    dom,
    parse,
    library,
    findIconDefinition,
    toHtml
  };
  const autoReplace = /* @__PURE__ */ __name(function() {
    let params = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    const {
      autoReplaceSvgRoot = DOCUMENT
    } = params;
    if ((Object.keys(namespace.styles).length > 0 || config.autoFetchSvg) && IS_DOM && config.autoReplaceSvg) api.dom.i2svg({
      node: autoReplaceSvgRoot
    });
  }, "autoReplace");
  function domVariants(val, abstractCreator) {
    Object.defineProperty(val, "abstract", {
      get: abstractCreator
    });
    Object.defineProperty(val, "html", {
      get: /* @__PURE__ */ __name(function() {
        return val.abstract.map((a2) => toHtml(a2));
      }, "get")
    });
    Object.defineProperty(val, "node", {
      get: /* @__PURE__ */ __name(function() {
        if (!IS_DOM) return;
        const container = DOCUMENT.createElement("div");
        container.innerHTML = val.html;
        return container.children;
      }, "get")
    });
    return val;
  }
  __name(domVariants, "domVariants");
  function asIcon(_ref2) {
    let {
      children,
      main,
      mask,
      attributes,
      styles: styles2,
      transform
    } = _ref2;
    if (transformIsMeaningful(transform) && main.found && !mask.found) {
      const {
        width,
        height
      } = main;
      const offset = {
        x: width / height / 2,
        y: 0.5
      };
      attributes["style"] = joinStyles({
        ...styles2,
        "transform-origin": "".concat(offset.x + transform.x / 16, "em ").concat(offset.y + transform.y / 16, "em")
      });
    }
    return [{
      tag: "svg",
      attributes,
      children
    }];
  }
  __name(asIcon, "asIcon");
  function asSymbol(_ref2) {
    let {
      prefix,
      iconName,
      children,
      attributes,
      symbol
    } = _ref2;
    const id = symbol === true ? "".concat(prefix, "-").concat(config.cssPrefix, "-").concat(iconName) : symbol;
    return [{
      tag: "svg",
      attributes: {
        style: "display: none;"
      },
      children: [{
        tag: "symbol",
        attributes: {
          ...attributes,
          id
        },
        children
      }]
    }];
  }
  __name(asSymbol, "asSymbol");
  function makeInlineSvgAbstract(params) {
    const {
      icons: {
        main,
        mask
      },
      prefix,
      iconName,
      transform,
      symbol,
      title,
      maskId,
      titleId,
      extra,
      watchable = false
    } = params;
    const {
      width,
      height
    } = mask.found ? mask : main;
    const isUploadedIcon = prefix === "fak";
    const attrClass = [config.replacementClass, iconName ? "".concat(config.cssPrefix, "-").concat(iconName) : ""].filter((c2) => extra.classes.indexOf(c2) === -1).filter((c2) => c2 !== "" || !!c2).concat(extra.classes).join(" ");
    let content = {
      children: [],
      attributes: {
        ...extra.attributes,
        "data-prefix": prefix,
        "data-icon": iconName,
        "class": attrClass,
        "role": extra.attributes.role || "img",
        "xmlns": "http://www.w3.org/2000/svg",
        "viewBox": "0 0 ".concat(width, " ").concat(height)
      }
    };
    const uploadedIconWidthStyle = isUploadedIcon && !~extra.classes.indexOf("fa-fw") ? {
      width: "".concat(width / height * 16 * 0.0625, "em")
    } : {};
    if (watchable) {
      content.attributes[DATA_FA_I2SVG] = "";
    }
    if (title) {
      content.children.push({
        tag: "title",
        attributes: {
          id: content.attributes["aria-labelledby"] || "title-".concat(titleId || nextUniqueId())
        },
        children: [title]
      });
      delete content.attributes.title;
    }
    const args = {
      ...content,
      prefix,
      iconName,
      main,
      mask,
      maskId,
      transform,
      symbol,
      styles: {
        ...uploadedIconWidthStyle,
        ...extra.styles
      }
    };
    const {
      children,
      attributes
    } = mask.found && main.found ? callProvided("generateAbstractMask", args) || {
      children: [],
      attributes: {}
    } : callProvided("generateAbstractIcon", args) || {
      children: [],
      attributes: {}
    };
    args.children = children;
    args.attributes = attributes;
    if (symbol) {
      return asSymbol(args);
    } else {
      return asIcon(args);
    }
  }
  __name(makeInlineSvgAbstract, "makeInlineSvgAbstract");
  function makeLayersTextAbstract(params) {
    const {
      content,
      width,
      height,
      transform,
      title,
      extra,
      watchable = false
    } = params;
    const attributes = {
      ...extra.attributes,
      ...title ? {
        "title": title
      } : {},
      "class": extra.classes.join(" ")
    };
    if (watchable) {
      attributes[DATA_FA_I2SVG] = "";
    }
    const styles2 = {
      ...extra.styles
    };
    if (transformIsMeaningful(transform)) {
      styles2["transform"] = transformForCss({
        transform,
        startCentered: true,
        width,
        height
      });
      styles2["-webkit-transform"] = styles2["transform"];
    }
    const styleString = joinStyles(styles2);
    if (styleString.length > 0) {
      attributes["style"] = styleString;
    }
    const val = [];
    val.push({
      tag: "span",
      attributes,
      children: [content]
    });
    if (title) {
      val.push({
        tag: "span",
        attributes: {
          class: "sr-only"
        },
        children: [title]
      });
    }
    return val;
  }
  __name(makeLayersTextAbstract, "makeLayersTextAbstract");
  function makeLayersCounterAbstract(params) {
    const {
      content,
      title,
      extra
    } = params;
    const attributes = {
      ...extra.attributes,
      ...title ? {
        "title": title
      } : {},
      "class": extra.classes.join(" ")
    };
    const styleString = joinStyles(extra.styles);
    if (styleString.length > 0) {
      attributes["style"] = styleString;
    }
    const val = [];
    val.push({
      tag: "span",
      attributes,
      children: [content]
    });
    if (title) {
      val.push({
        tag: "span",
        attributes: {
          class: "sr-only"
        },
        children: [title]
      });
    }
    return val;
  }
  __name(makeLayersCounterAbstract, "makeLayersCounterAbstract");
  const {
    styles: styles$1
  } = namespace;
  function asFoundIcon(icon2) {
    const width = icon2[0];
    const height = icon2[1];
    const [vectorData] = icon2.slice(4);
    let element = null;
    if (Array.isArray(vectorData)) {
      element = {
        tag: "g",
        attributes: {
          class: "".concat(config.cssPrefix, "-").concat(DUOTONE_CLASSES.GROUP)
        },
        children: [{
          tag: "path",
          attributes: {
            class: "".concat(config.cssPrefix, "-").concat(DUOTONE_CLASSES.SECONDARY),
            fill: "currentColor",
            d: vectorData[0]
          }
        }, {
          tag: "path",
          attributes: {
            class: "".concat(config.cssPrefix, "-").concat(DUOTONE_CLASSES.PRIMARY),
            fill: "currentColor",
            d: vectorData[1]
          }
        }]
      };
    } else {
      element = {
        tag: "path",
        attributes: {
          fill: "currentColor",
          d: vectorData
        }
      };
    }
    return {
      found: true,
      width,
      height,
      icon: element
    };
  }
  __name(asFoundIcon, "asFoundIcon");
  const missingIconResolutionMixin = {
    found: false,
    width: 512,
    height: 512
  };
  function maybeNotifyMissing(iconName, prefix) {
    if (!PRODUCTION$1 && !config.showMissingIcons && iconName) {
      console.error('Icon with name "'.concat(iconName, '" and prefix "').concat(prefix, '" is missing.'));
    }
  }
  __name(maybeNotifyMissing, "maybeNotifyMissing");
  function findIcon(iconName, prefix) {
    let givenPrefix = prefix;
    if (prefix === "fa" && config.styleDefault !== null) {
      prefix = getDefaultUsablePrefix();
    }
    return new Promise((resolve, reject) => {
      if (givenPrefix === "fa") {
        const shim = byOldName(iconName) || {};
        iconName = shim.iconName || iconName;
        prefix = shim.prefix || prefix;
      }
      if (iconName && prefix && styles$1[prefix] && styles$1[prefix][iconName]) {
        const icon2 = styles$1[prefix][iconName];
        return resolve(asFoundIcon(icon2));
      }
      maybeNotifyMissing(iconName, prefix);
      resolve({
        ...missingIconResolutionMixin,
        icon: config.showMissingIcons && iconName ? callProvided("missingIconAbstract") || {} : {}
      });
    });
  }
  __name(findIcon, "findIcon");
  const noop$1 = /* @__PURE__ */ __name(() => {
  }, "noop$1");
  const p$2 = config.measurePerformance && PERFORMANCE && PERFORMANCE.mark && PERFORMANCE.measure ? PERFORMANCE : {
    mark: noop$1,
    measure: noop$1
  };
  const preamble = 'FA "6.6.0"';
  const begin = /* @__PURE__ */ __name((name) => {
    p$2.mark("".concat(preamble, " ").concat(name, " begins"));
    return () => end(name);
  }, "begin");
  const end = /* @__PURE__ */ __name((name) => {
    p$2.mark("".concat(preamble, " ").concat(name, " ends"));
    p$2.measure("".concat(preamble, " ").concat(name), "".concat(preamble, " ").concat(name, " begins"), "".concat(preamble, " ").concat(name, " ends"));
  }, "end");
  var perf = {
    begin,
    end
  };
  const noop$2 = /* @__PURE__ */ __name(() => {
  }, "noop$2");
  function isWatched(node) {
    const i2svg = node.getAttribute ? node.getAttribute(DATA_FA_I2SVG) : null;
    return typeof i2svg === "string";
  }
  __name(isWatched, "isWatched");
  function hasPrefixAndIcon(node) {
    const prefix = node.getAttribute ? node.getAttribute(DATA_PREFIX) : null;
    const icon2 = node.getAttribute ? node.getAttribute(DATA_ICON) : null;
    return prefix && icon2;
  }
  __name(hasPrefixAndIcon, "hasPrefixAndIcon");
  function hasBeenReplaced(node) {
    return node && node.classList && node.classList.contains && node.classList.contains(config.replacementClass);
  }
  __name(hasBeenReplaced, "hasBeenReplaced");
  function getMutator() {
    if (config.autoReplaceSvg === true) {
      return mutators.replace;
    }
    const mutator = mutators[config.autoReplaceSvg];
    return mutator || mutators.replace;
  }
  __name(getMutator, "getMutator");
  function createElementNS(tag) {
    return DOCUMENT.createElementNS("http://www.w3.org/2000/svg", tag);
  }
  __name(createElementNS, "createElementNS");
  function createElement(tag) {
    return DOCUMENT.createElement(tag);
  }
  __name(createElement, "createElement");
  function convertSVG(abstractObj) {
    let params = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    const {
      ceFn = abstractObj.tag === "svg" ? createElementNS : createElement
    } = params;
    if (typeof abstractObj === "string") {
      return DOCUMENT.createTextNode(abstractObj);
    }
    const tag = ceFn(abstractObj.tag);
    Object.keys(abstractObj.attributes || []).forEach(function(key) {
      tag.setAttribute(key, abstractObj.attributes[key]);
    });
    const children = abstractObj.children || [];
    children.forEach(function(child) {
      tag.appendChild(convertSVG(child, {
        ceFn
      }));
    });
    return tag;
  }
  __name(convertSVG, "convertSVG");
  function nodeAsComment(node) {
    let comment = " ".concat(node.outerHTML, " ");
    comment = "".concat(comment, "Font Awesome fontawesome.com ");
    return comment;
  }
  __name(nodeAsComment, "nodeAsComment");
  const mutators = {
    replace: /* @__PURE__ */ __name(function(mutation) {
      const node = mutation[0];
      if (node.parentNode) {
        mutation[1].forEach((abstract) => {
          node.parentNode.insertBefore(convertSVG(abstract), node);
        });
        if (node.getAttribute(DATA_FA_I2SVG) === null && config.keepOriginalSource) {
          let comment = DOCUMENT.createComment(nodeAsComment(node));
          node.parentNode.replaceChild(comment, node);
        } else {
          node.remove();
        }
      }
    }, "replace"),
    nest: /* @__PURE__ */ __name(function(mutation) {
      const node = mutation[0];
      const abstract = mutation[1];
      if (~classArray(node).indexOf(config.replacementClass)) {
        return mutators.replace(mutation);
      }
      const forSvg = new RegExp("".concat(config.cssPrefix, "-.*"));
      delete abstract[0].attributes.id;
      if (abstract[0].attributes.class) {
        const splitClasses = abstract[0].attributes.class.split(" ").reduce((acc, cls) => {
          if (cls === config.replacementClass || cls.match(forSvg)) {
            acc.toSvg.push(cls);
          } else {
            acc.toNode.push(cls);
          }
          return acc;
        }, {
          toNode: [],
          toSvg: []
        });
        abstract[0].attributes.class = splitClasses.toSvg.join(" ");
        if (splitClasses.toNode.length === 0) {
          node.removeAttribute("class");
        } else {
          node.setAttribute("class", splitClasses.toNode.join(" "));
        }
      }
      const newInnerHTML = abstract.map((a2) => toHtml(a2)).join("\n");
      node.setAttribute(DATA_FA_I2SVG, "");
      node.innerHTML = newInnerHTML;
    }, "nest")
  };
  function performOperationSync(op) {
    op();
  }
  __name(performOperationSync, "performOperationSync");
  function perform(mutations, callback) {
    const callbackFunction = typeof callback === "function" ? callback : noop$2;
    if (mutations.length === 0) {
      callbackFunction();
    } else {
      let frame = performOperationSync;
      if (config.mutateApproach === MUTATION_APPROACH_ASYNC) {
        frame = WINDOW.requestAnimationFrame || performOperationSync;
      }
      frame(() => {
        const mutator = getMutator();
        const mark = perf.begin("mutate");
        mutations.map(mutator);
        mark();
        callbackFunction();
      });
    }
  }
  __name(perform, "perform");
  let disabled = false;
  function disableObservation() {
    disabled = true;
  }
  __name(disableObservation, "disableObservation");
  function enableObservation() {
    disabled = false;
  }
  __name(enableObservation, "enableObservation");
  let mo$1 = null;
  function observe(options) {
    if (!MUTATION_OBSERVER) {
      return;
    }
    if (!config.observeMutations) {
      return;
    }
    const {
      treeCallback = noop$2,
      nodeCallback = noop$2,
      pseudoElementsCallback = noop$2,
      observeMutationsRoot = DOCUMENT
    } = options;
    mo$1 = new MUTATION_OBSERVER((objects) => {
      if (disabled) return;
      const defaultPrefix = getDefaultUsablePrefix();
      toArray(objects).forEach((mutationRecord) => {
        if (mutationRecord.type === "childList" && mutationRecord.addedNodes.length > 0 && !isWatched(mutationRecord.addedNodes[0])) {
          if (config.searchPseudoElements) {
            pseudoElementsCallback(mutationRecord.target);
          }
          treeCallback(mutationRecord.target);
        }
        if (mutationRecord.type === "attributes" && mutationRecord.target.parentNode && config.searchPseudoElements) {
          pseudoElementsCallback(mutationRecord.target.parentNode);
        }
        if (mutationRecord.type === "attributes" && isWatched(mutationRecord.target) && ~ATTRIBUTES_WATCHED_FOR_MUTATION.indexOf(mutationRecord.attributeName)) {
          if (mutationRecord.attributeName === "class" && hasPrefixAndIcon(mutationRecord.target)) {
            const {
              prefix,
              iconName
            } = getCanonicalIcon(classArray(mutationRecord.target));
            mutationRecord.target.setAttribute(DATA_PREFIX, prefix || defaultPrefix);
            if (iconName) mutationRecord.target.setAttribute(DATA_ICON, iconName);
          } else if (hasBeenReplaced(mutationRecord.target)) {
            nodeCallback(mutationRecord.target);
          }
        }
      });
    });
    if (!IS_DOM) return;
    mo$1.observe(observeMutationsRoot, {
      childList: true,
      attributes: true,
      characterData: true,
      subtree: true
    });
  }
  __name(observe, "observe");
  function disconnect() {
    if (!mo$1) return;
    mo$1.disconnect();
  }
  __name(disconnect, "disconnect");
  function styleParser(node) {
    const style = node.getAttribute("style");
    let val = [];
    if (style) {
      val = style.split(";").reduce((acc, style2) => {
        const styles2 = style2.split(":");
        const prop = styles2[0];
        const value = styles2.slice(1);
        if (prop && value.length > 0) {
          acc[prop] = value.join(":").trim();
        }
        return acc;
      }, {});
    }
    return val;
  }
  __name(styleParser, "styleParser");
  function classParser(node) {
    const existingPrefix = node.getAttribute("data-prefix");
    const existingIconName = node.getAttribute("data-icon");
    const innerText = node.innerText !== void 0 ? node.innerText.trim() : "";
    let val = getCanonicalIcon(classArray(node));
    if (!val.prefix) {
      val.prefix = getDefaultUsablePrefix();
    }
    if (existingPrefix && existingIconName) {
      val.prefix = existingPrefix;
      val.iconName = existingIconName;
    }
    if (val.iconName && val.prefix) {
      return val;
    }
    if (val.prefix && innerText.length > 0) {
      val.iconName = byLigature(val.prefix, node.innerText) || byUnicode(val.prefix, toHex(node.innerText));
    }
    if (!val.iconName && config.autoFetchSvg && node.firstChild && node.firstChild.nodeType === Node.TEXT_NODE) {
      val.iconName = node.firstChild.data;
    }
    return val;
  }
  __name(classParser, "classParser");
  function attributesParser(node) {
    const extraAttributes = toArray(node.attributes).reduce((acc, attr) => {
      if (acc.name !== "class" && acc.name !== "style") {
        acc[attr.name] = attr.value;
      }
      return acc;
    }, {});
    const title = node.getAttribute("title");
    const titleId = node.getAttribute("data-fa-title-id");
    if (config.autoA11y) {
      if (title) {
        extraAttributes["aria-labelledby"] = "".concat(config.replacementClass, "-title-").concat(titleId || nextUniqueId());
      } else {
        extraAttributes["aria-hidden"] = "true";
        extraAttributes["focusable"] = "false";
      }
    }
    return extraAttributes;
  }
  __name(attributesParser, "attributesParser");
  function blankMeta() {
    return {
      iconName: null,
      title: null,
      titleId: null,
      prefix: null,
      transform: meaninglessTransform,
      symbol: false,
      mask: {
        iconName: null,
        prefix: null,
        rest: []
      },
      maskId: null,
      extra: {
        classes: [],
        styles: {},
        attributes: {}
      }
    };
  }
  __name(blankMeta, "blankMeta");
  function parseMeta(node) {
    let parser = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {
      styleParser: true
    };
    const {
      iconName,
      prefix,
      rest: extraClasses
    } = classParser(node);
    const extraAttributes = attributesParser(node);
    const pluginMeta = chainHooks("parseNodeAttributes", {}, node);
    let extraStyles = parser.styleParser ? styleParser(node) : [];
    return {
      iconName,
      title: node.getAttribute("title"),
      titleId: node.getAttribute("data-fa-title-id"),
      prefix,
      transform: meaninglessTransform,
      mask: {
        iconName: null,
        prefix: null,
        rest: []
      },
      maskId: null,
      symbol: false,
      extra: {
        classes: extraClasses,
        styles: extraStyles,
        attributes: extraAttributes
      },
      ...pluginMeta
    };
  }
  __name(parseMeta, "parseMeta");
  const {
    styles: styles$2
  } = namespace;
  function generateMutation(node) {
    const nodeMeta = config.autoReplaceSvg === "nest" ? parseMeta(node, {
      styleParser: false
    }) : parseMeta(node);
    if (~nodeMeta.extra.classes.indexOf(LAYERS_TEXT_CLASSNAME)) {
      return callProvided("generateLayersText", node, nodeMeta);
    } else {
      return callProvided("generateSvgReplacementMutation", node, nodeMeta);
    }
  }
  __name(generateMutation, "generateMutation");
  let knownPrefixes = /* @__PURE__ */ new Set();
  FAMILIES.map((family) => {
    knownPrefixes.add("fa-".concat(family));
  });
  Object.keys(PREFIX_TO_STYLE[a]).map(knownPrefixes.add.bind(knownPrefixes));
  Object.keys(PREFIX_TO_STYLE[r]).map(knownPrefixes.add.bind(knownPrefixes));
  Object.keys(PREFIX_TO_STYLE[o]).map(knownPrefixes.add.bind(knownPrefixes));
  knownPrefixes = [...knownPrefixes];
  function onTree(root) {
    let callback = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;
    if (!IS_DOM) return Promise.resolve();
    const htmlClassList = DOCUMENT.documentElement.classList;
    const hclAdd = /* @__PURE__ */ __name((suffix) => htmlClassList.add("".concat(HTML_CLASS_I2SVG_BASE_CLASS, "-").concat(suffix)), "hclAdd");
    const hclRemove = /* @__PURE__ */ __name((suffix) => htmlClassList.remove("".concat(HTML_CLASS_I2SVG_BASE_CLASS, "-").concat(suffix)), "hclRemove");
    const prefixes2 = config.autoFetchSvg ? knownPrefixes : FAMILIES.map((f$$1) => "fa-".concat(f$$1)).concat(Object.keys(styles$2));
    if (!prefixes2.includes("fa")) {
      prefixes2.push("fa");
    }
    const prefixesDomQuery = [".".concat(LAYERS_TEXT_CLASSNAME, ":not([").concat(DATA_FA_I2SVG, "])")].concat(prefixes2.map((p$$1) => ".".concat(p$$1, ":not([").concat(DATA_FA_I2SVG, "])"))).join(", ");
    if (prefixesDomQuery.length === 0) {
      return Promise.resolve();
    }
    let candidates = [];
    try {
      candidates = toArray(root.querySelectorAll(prefixesDomQuery));
    } catch (e$$1) {
    }
    if (candidates.length > 0) {
      hclAdd("pending");
      hclRemove("complete");
    } else {
      return Promise.resolve();
    }
    const mark = perf.begin("onTree");
    const mutations = candidates.reduce((acc, node) => {
      try {
        const mutation = generateMutation(node);
        if (mutation) {
          acc.push(mutation);
        }
      } catch (e$$1) {
        if (!PRODUCTION$1) {
          if (e$$1.name === "MissingIcon") {
            console.error(e$$1);
          }
        }
      }
      return acc;
    }, []);
    return new Promise((resolve, reject) => {
      Promise.all(mutations).then((resolvedMutations) => {
        perform(resolvedMutations, () => {
          hclAdd("active");
          hclAdd("complete");
          hclRemove("pending");
          if (typeof callback === "function") callback();
          mark();
          resolve();
        });
      }).catch((e$$1) => {
        mark();
        reject(e$$1);
      });
    });
  }
  __name(onTree, "onTree");
  function onNode(node) {
    let callback = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;
    generateMutation(node).then((mutation) => {
      if (mutation) {
        perform([mutation], callback);
      }
    });
  }
  __name(onNode, "onNode");
  function resolveIcons(next) {
    return function(maybeIconDefinition) {
      let params = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      const iconDefinition = (maybeIconDefinition || {}).icon ? maybeIconDefinition : findIconDefinition(maybeIconDefinition || {});
      let {
        mask
      } = params;
      if (mask) {
        mask = (mask || {}).icon ? mask : findIconDefinition(mask || {});
      }
      return next(iconDefinition, {
        ...params,
        mask
      });
    };
  }
  __name(resolveIcons, "resolveIcons");
  const render = /* @__PURE__ */ __name(function(iconDefinition) {
    let params = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    const {
      transform = meaninglessTransform,
      symbol = false,
      mask = null,
      maskId = null,
      title = null,
      titleId = null,
      classes = [],
      attributes = {},
      styles: styles2 = {}
    } = params;
    if (!iconDefinition) return;
    const {
      prefix,
      iconName,
      icon: icon2
    } = iconDefinition;
    return domVariants({
      type: "icon",
      ...iconDefinition
    }, () => {
      callHooks("beforeDOMElementCreation", {
        iconDefinition,
        params
      });
      if (config.autoA11y) {
        if (title) {
          attributes["aria-labelledby"] = "".concat(config.replacementClass, "-title-").concat(titleId || nextUniqueId());
        } else {
          attributes["aria-hidden"] = "true";
          attributes["focusable"] = "false";
        }
      }
      return makeInlineSvgAbstract({
        icons: {
          main: asFoundIcon(icon2),
          mask: mask ? asFoundIcon(mask.icon) : {
            found: false,
            width: null,
            height: null,
            icon: {}
          }
        },
        prefix,
        iconName,
        transform: {
          ...meaninglessTransform,
          ...transform
        },
        symbol,
        title,
        maskId,
        titleId,
        extra: {
          attributes,
          styles: styles2,
          classes
        }
      });
    });
  }, "render");
  var ReplaceElements = {
    mixout() {
      return {
        icon: resolveIcons(render)
      };
    },
    hooks() {
      return {
        mutationObserverCallbacks(accumulator) {
          accumulator.treeCallback = onTree;
          accumulator.nodeCallback = onNode;
          return accumulator;
        }
      };
    },
    provides(providers$$1) {
      providers$$1.i2svg = function(params) {
        const {
          node = DOCUMENT,
          callback = /* @__PURE__ */ __name(() => {
          }, "callback")
        } = params;
        return onTree(node, callback);
      };
      providers$$1.generateSvgReplacementMutation = function(node, nodeMeta) {
        const {
          iconName,
          title,
          titleId,
          prefix,
          transform,
          symbol,
          mask,
          maskId,
          extra
        } = nodeMeta;
        return new Promise((resolve, reject) => {
          Promise.all([findIcon(iconName, prefix), mask.iconName ? findIcon(mask.iconName, mask.prefix) : Promise.resolve({
            found: false,
            width: 512,
            height: 512,
            icon: {}
          })]).then((_ref2) => {
            let [main, mask2] = _ref2;
            resolve([node, makeInlineSvgAbstract({
              icons: {
                main,
                mask: mask2
              },
              prefix,
              iconName,
              transform,
              symbol,
              maskId,
              title,
              titleId,
              extra,
              watchable: true
            })]);
          }).catch(reject);
        });
      };
      providers$$1.generateAbstractIcon = function(_ref2) {
        let {
          children,
          attributes,
          main,
          transform,
          styles: styles2
        } = _ref2;
        const styleString = joinStyles(styles2);
        if (styleString.length > 0) {
          attributes["style"] = styleString;
        }
        let nextChild;
        if (transformIsMeaningful(transform)) {
          nextChild = callProvided("generateAbstractTransformGrouping", {
            main,
            transform,
            containerWidth: main.width,
            iconWidth: main.width
          });
        }
        children.push(nextChild || main.icon);
        return {
          children,
          attributes
        };
      };
    }
  };
  var Layers = {
    mixout() {
      return {
        layer(assembler) {
          let params = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
          const {
            classes = []
          } = params;
          return domVariants({
            type: "layer"
          }, () => {
            callHooks("beforeDOMElementCreation", {
              assembler,
              params
            });
            let children = [];
            assembler((args) => {
              Array.isArray(args) ? args.map((a2) => {
                children = children.concat(a2.abstract);
              }) : children = children.concat(args.abstract);
            });
            return [{
              tag: "span",
              attributes: {
                class: ["".concat(config.cssPrefix, "-layers"), ...classes].join(" ")
              },
              children
            }];
          });
        }
      };
    }
  };
  var LayersCounter = {
    mixout() {
      return {
        counter(content) {
          let params = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
          const {
            title = null,
            classes = [],
            attributes = {},
            styles: styles2 = {}
          } = params;
          return domVariants({
            type: "counter",
            content
          }, () => {
            callHooks("beforeDOMElementCreation", {
              content,
              params
            });
            return makeLayersCounterAbstract({
              content: content.toString(),
              title,
              extra: {
                attributes,
                styles: styles2,
                classes: ["".concat(config.cssPrefix, "-layers-counter"), ...classes]
              }
            });
          });
        }
      };
    }
  };
  var LayersText = {
    mixout() {
      return {
        text(content) {
          let params = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
          const {
            transform = meaninglessTransform,
            title = null,
            classes = [],
            attributes = {},
            styles: styles2 = {}
          } = params;
          return domVariants({
            type: "text",
            content
          }, () => {
            callHooks("beforeDOMElementCreation", {
              content,
              params
            });
            return makeLayersTextAbstract({
              content,
              transform: {
                ...meaninglessTransform,
                ...transform
              },
              title,
              extra: {
                attributes,
                styles: styles2,
                classes: ["".concat(config.cssPrefix, "-layers-text"), ...classes]
              }
            });
          });
        }
      };
    },
    provides(providers$$1) {
      providers$$1.generateLayersText = function(node, nodeMeta) {
        const {
          title,
          transform,
          extra
        } = nodeMeta;
        let width = null;
        let height = null;
        if (IS_IE) {
          const computedFontSize = parseInt(getComputedStyle(node).fontSize, 10);
          const boundingClientRect = node.getBoundingClientRect();
          width = boundingClientRect.width / computedFontSize;
          height = boundingClientRect.height / computedFontSize;
        }
        if (config.autoA11y && !title) {
          extra.attributes["aria-hidden"] = "true";
        }
        return Promise.resolve([node, makeLayersTextAbstract({
          content: node.innerHTML,
          width,
          height,
          transform,
          title,
          extra,
          watchable: true
        })]);
      };
    }
  };
  const CLEAN_CONTENT_PATTERN = new RegExp('"', "ug");
  const SECONDARY_UNICODE_RANGE = [1105920, 1112319];
  const _FONT_FAMILY_WEIGHT_TO_PREFIX = {
    ...{
      FontAwesome: {
        normal: "fas",
        400: "fas"
      }
    },
    ...eo,
    ...ao,
    ...mo
  };
  const FONT_FAMILY_WEIGHT_TO_PREFIX = Object.keys(_FONT_FAMILY_WEIGHT_TO_PREFIX).reduce((acc, key) => {
    acc[key.toLowerCase()] = _FONT_FAMILY_WEIGHT_TO_PREFIX[key];
    return acc;
  }, {});
  const FONT_FAMILY_WEIGHT_FALLBACK = Object.keys(FONT_FAMILY_WEIGHT_TO_PREFIX).reduce((acc, fontFamily) => {
    const weights = FONT_FAMILY_WEIGHT_TO_PREFIX[fontFamily];
    acc[fontFamily] = weights[900] || [...Object.entries(weights)][0][1];
    return acc;
  }, {});
  function hexValueFromContent(content) {
    const cleaned = content.replace(CLEAN_CONTENT_PATTERN, "");
    const codePoint = codePointAt(cleaned, 0);
    const isPrependTen = codePoint >= SECONDARY_UNICODE_RANGE[0] && codePoint <= SECONDARY_UNICODE_RANGE[1];
    const isDoubled = cleaned.length === 2 ? cleaned[0] === cleaned[1] : false;
    return {
      value: isDoubled ? toHex(cleaned[0]) : toHex(cleaned),
      isSecondary: isPrependTen || isDoubled
    };
  }
  __name(hexValueFromContent, "hexValueFromContent");
  function getPrefix(fontFamily, fontWeight) {
    const fontFamilySanitized = fontFamily.replace(/^['"]|['"]$/g, "").toLowerCase();
    const fontWeightInteger = parseInt(fontWeight);
    const fontWeightSanitized = isNaN(fontWeightInteger) ? "normal" : fontWeightInteger;
    return (FONT_FAMILY_WEIGHT_TO_PREFIX[fontFamilySanitized] || {})[fontWeightSanitized] || FONT_FAMILY_WEIGHT_FALLBACK[fontFamilySanitized];
  }
  __name(getPrefix, "getPrefix");
  function replaceForPosition(node, position) {
    const pendingAttribute = "".concat(DATA_FA_PSEUDO_ELEMENT_PENDING).concat(position.replace(":", "-"));
    return new Promise((resolve, reject) => {
      if (node.getAttribute(pendingAttribute) !== null) {
        return resolve();
      }
      const children = toArray(node.children);
      const alreadyProcessedPseudoElement = children.filter((c2) => c2.getAttribute(DATA_FA_PSEUDO_ELEMENT) === position)[0];
      const styles2 = WINDOW.getComputedStyle(node, position);
      const fontFamily = styles2.getPropertyValue("font-family");
      const fontFamilyMatch = fontFamily.match(FONT_FAMILY_PATTERN);
      const fontWeight = styles2.getPropertyValue("font-weight");
      const content = styles2.getPropertyValue("content");
      if (alreadyProcessedPseudoElement && !fontFamilyMatch) {
        node.removeChild(alreadyProcessedPseudoElement);
        return resolve();
      } else if (fontFamilyMatch && content !== "none" && content !== "") {
        const content2 = styles2.getPropertyValue("content");
        let prefix = getPrefix(fontFamily, fontWeight);
        const {
          value: hexValue,
          isSecondary
        } = hexValueFromContent(content2);
        const isV4 = fontFamilyMatch[0].startsWith("FontAwesome");
        let iconName = byUnicode(prefix, hexValue);
        let iconIdentifier = iconName;
        if (isV4) {
          const iconName4 = byOldUnicode(hexValue);
          if (iconName4.iconName && iconName4.prefix) {
            iconName = iconName4.iconName;
            prefix = iconName4.prefix;
          }
        }
        if (iconName && !isSecondary && (!alreadyProcessedPseudoElement || alreadyProcessedPseudoElement.getAttribute(DATA_PREFIX) !== prefix || alreadyProcessedPseudoElement.getAttribute(DATA_ICON) !== iconIdentifier)) {
          node.setAttribute(pendingAttribute, iconIdentifier);
          if (alreadyProcessedPseudoElement) {
            node.removeChild(alreadyProcessedPseudoElement);
          }
          const meta = blankMeta();
          const {
            extra
          } = meta;
          extra.attributes[DATA_FA_PSEUDO_ELEMENT] = position;
          findIcon(iconName, prefix).then((main) => {
            const abstract = makeInlineSvgAbstract({
              ...meta,
              icons: {
                main,
                mask: emptyCanonicalIcon()
              },
              prefix,
              iconName: iconIdentifier,
              extra,
              watchable: true
            });
            const element = DOCUMENT.createElementNS("http://www.w3.org/2000/svg", "svg");
            if (position === "::before") {
              node.insertBefore(element, node.firstChild);
            } else {
              node.appendChild(element);
            }
            element.outerHTML = abstract.map((a2) => toHtml(a2)).join("\n");
            node.removeAttribute(pendingAttribute);
            resolve();
          }).catch(reject);
        } else {
          resolve();
        }
      } else {
        resolve();
      }
    });
  }
  __name(replaceForPosition, "replaceForPosition");
  function replace(node) {
    return Promise.all([replaceForPosition(node, "::before"), replaceForPosition(node, "::after")]);
  }
  __name(replace, "replace");
  function processable(node) {
    return node.parentNode !== document.head && !~TAGNAMES_TO_SKIP_FOR_PSEUDOELEMENTS.indexOf(node.tagName.toUpperCase()) && !node.getAttribute(DATA_FA_PSEUDO_ELEMENT) && (!node.parentNode || node.parentNode.tagName !== "svg");
  }
  __name(processable, "processable");
  function searchPseudoElements(root) {
    if (!IS_DOM) return;
    return new Promise((resolve, reject) => {
      const operations = toArray(root.querySelectorAll("*")).filter(processable).map(replace);
      const end2 = perf.begin("searchPseudoElements");
      disableObservation();
      Promise.all(operations).then(() => {
        end2();
        enableObservation();
        resolve();
      }).catch(() => {
        end2();
        enableObservation();
        reject();
      });
    });
  }
  __name(searchPseudoElements, "searchPseudoElements");
  var PseudoElements = {
    hooks() {
      return {
        mutationObserverCallbacks(accumulator) {
          accumulator.pseudoElementsCallback = searchPseudoElements;
          return accumulator;
        }
      };
    },
    provides(providers2) {
      providers2.pseudoElements2svg = function(params) {
        const {
          node = DOCUMENT
        } = params;
        if (config.searchPseudoElements) {
          searchPseudoElements(node);
        }
      };
    }
  };
  let _unwatched = false;
  var MutationObserver$1 = {
    mixout() {
      return {
        dom: {
          unwatch() {
            disableObservation();
            _unwatched = true;
          }
        }
      };
    },
    hooks() {
      return {
        bootstrap() {
          observe(chainHooks("mutationObserverCallbacks", {}));
        },
        noAuto() {
          disconnect();
        },
        watch(params) {
          const {
            observeMutationsRoot
          } = params;
          if (_unwatched) {
            enableObservation();
          } else {
            observe(chainHooks("mutationObserverCallbacks", {
              observeMutationsRoot
            }));
          }
        }
      };
    }
  };
  const parseTransformString = /* @__PURE__ */ __name((transformString) => {
    let transform = {
      size: 16,
      x: 0,
      y: 0,
      flipX: false,
      flipY: false,
      rotate: 0
    };
    return transformString.toLowerCase().split(" ").reduce((acc, n) => {
      const parts = n.toLowerCase().split("-");
      const first = parts[0];
      let rest = parts.slice(1).join("-");
      if (first && rest === "h") {
        acc.flipX = true;
        return acc;
      }
      if (first && rest === "v") {
        acc.flipY = true;
        return acc;
      }
      rest = parseFloat(rest);
      if (isNaN(rest)) {
        return acc;
      }
      switch (first) {
        case "grow":
          acc.size = acc.size + rest;
          break;
        case "shrink":
          acc.size = acc.size - rest;
          break;
        case "left":
          acc.x = acc.x - rest;
          break;
        case "right":
          acc.x = acc.x + rest;
          break;
        case "up":
          acc.y = acc.y - rest;
          break;
        case "down":
          acc.y = acc.y + rest;
          break;
        case "rotate":
          acc.rotate = acc.rotate + rest;
          break;
      }
      return acc;
    }, transform);
  }, "parseTransformString");
  var PowerTransforms = {
    mixout() {
      return {
        parse: {
          transform: /* @__PURE__ */ __name((transformString) => {
            return parseTransformString(transformString);
          }, "transform")
        }
      };
    },
    hooks() {
      return {
        parseNodeAttributes(accumulator, node) {
          const transformString = node.getAttribute("data-fa-transform");
          if (transformString) {
            accumulator.transform = parseTransformString(transformString);
          }
          return accumulator;
        }
      };
    },
    provides(providers2) {
      providers2.generateAbstractTransformGrouping = function(_ref2) {
        let {
          main,
          transform,
          containerWidth,
          iconWidth
        } = _ref2;
        const outer = {
          transform: "translate(".concat(containerWidth / 2, " 256)")
        };
        const innerTranslate = "translate(".concat(transform.x * 32, ", ").concat(transform.y * 32, ") ");
        const innerScale = "scale(".concat(transform.size / 16 * (transform.flipX ? -1 : 1), ", ").concat(transform.size / 16 * (transform.flipY ? -1 : 1), ") ");
        const innerRotate = "rotate(".concat(transform.rotate, " 0 0)");
        const inner = {
          transform: "".concat(innerTranslate, " ").concat(innerScale, " ").concat(innerRotate)
        };
        const path = {
          transform: "translate(".concat(iconWidth / 2 * -1, " -256)")
        };
        const operations = {
          outer,
          inner,
          path
        };
        return {
          tag: "g",
          attributes: {
            ...operations.outer
          },
          children: [{
            tag: "g",
            attributes: {
              ...operations.inner
            },
            children: [{
              tag: main.icon.tag,
              children: main.icon.children,
              attributes: {
                ...main.icon.attributes,
                ...operations.path
              }
            }]
          }]
        };
      };
    }
  };
  const ALL_SPACE = {
    x: 0,
    y: 0,
    width: "100%",
    height: "100%"
  };
  function fillBlack(abstract) {
    let force = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;
    if (abstract.attributes && (abstract.attributes.fill || force)) {
      abstract.attributes.fill = "black";
    }
    return abstract;
  }
  __name(fillBlack, "fillBlack");
  function deGroup(abstract) {
    if (abstract.tag === "g") {
      return abstract.children;
    } else {
      return [abstract];
    }
  }
  __name(deGroup, "deGroup");
  var Masks = {
    hooks() {
      return {
        parseNodeAttributes(accumulator, node) {
          const maskData = node.getAttribute("data-fa-mask");
          const mask = !maskData ? emptyCanonicalIcon() : getCanonicalIcon(maskData.split(" ").map((i) => i.trim()));
          if (!mask.prefix) {
            mask.prefix = getDefaultUsablePrefix();
          }
          accumulator.mask = mask;
          accumulator.maskId = node.getAttribute("data-fa-mask-id");
          return accumulator;
        }
      };
    },
    provides(providers2) {
      providers2.generateAbstractMask = function(_ref2) {
        let {
          children,
          attributes,
          main,
          mask,
          maskId: explicitMaskId,
          transform
        } = _ref2;
        const {
          width: mainWidth,
          icon: mainPath
        } = main;
        const {
          width: maskWidth,
          icon: maskPath
        } = mask;
        const trans = transformForSvg({
          transform,
          containerWidth: maskWidth,
          iconWidth: mainWidth
        });
        const maskRect = {
          tag: "rect",
          attributes: {
            ...ALL_SPACE,
            fill: "white"
          }
        };
        const maskInnerGroupChildrenMixin = mainPath.children ? {
          children: mainPath.children.map(fillBlack)
        } : {};
        const maskInnerGroup = {
          tag: "g",
          attributes: {
            ...trans.inner
          },
          children: [fillBlack({
            tag: mainPath.tag,
            attributes: {
              ...mainPath.attributes,
              ...trans.path
            },
            ...maskInnerGroupChildrenMixin
          })]
        };
        const maskOuterGroup = {
          tag: "g",
          attributes: {
            ...trans.outer
          },
          children: [maskInnerGroup]
        };
        const maskId = "mask-".concat(explicitMaskId || nextUniqueId());
        const clipId = "clip-".concat(explicitMaskId || nextUniqueId());
        const maskTag = {
          tag: "mask",
          attributes: {
            ...ALL_SPACE,
            id: maskId,
            maskUnits: "userSpaceOnUse",
            maskContentUnits: "userSpaceOnUse"
          },
          children: [maskRect, maskOuterGroup]
        };
        const defs = {
          tag: "defs",
          children: [{
            tag: "clipPath",
            attributes: {
              id: clipId
            },
            children: deGroup(maskPath)
          }, maskTag]
        };
        children.push(defs, {
          tag: "rect",
          attributes: {
            fill: "currentColor",
            "clip-path": "url(#".concat(clipId, ")"),
            mask: "url(#".concat(maskId, ")"),
            ...ALL_SPACE
          }
        });
        return {
          children,
          attributes
        };
      };
    }
  };
  var MissingIconIndicator = {
    provides(providers2) {
      let reduceMotion = false;
      if (WINDOW.matchMedia) {
        reduceMotion = WINDOW.matchMedia("(prefers-reduced-motion: reduce)").matches;
      }
      providers2.missingIconAbstract = function() {
        const gChildren = [];
        const FILL = {
          fill: "currentColor"
        };
        const ANIMATION_BASE = {
          attributeType: "XML",
          repeatCount: "indefinite",
          dur: "2s"
        };
        gChildren.push({
          tag: "path",
          attributes: {
            ...FILL,
            d: "M156.5,447.7l-12.6,29.5c-18.7-9.5-35.9-21.2-51.5-34.9l22.7-22.7C127.6,430.5,141.5,440,156.5,447.7z M40.6,272H8.5 c1.4,21.2,5.4,41.7,11.7,61.1L50,321.2C45.1,305.5,41.8,289,40.6,272z M40.6,240c1.4-18.8,5.2-37,11.1-54.1l-29.5-12.6 C14.7,194.3,10,216.7,8.5,240H40.6z M64.3,156.5c7.8-14.9,17.2-28.8,28.1-41.5L69.7,92.3c-13.7,15.6-25.5,32.8-34.9,51.5 L64.3,156.5z M397,419.6c-13.9,12-29.4,22.3-46.1,30.4l11.9,29.8c20.7-9.9,39.8-22.6,56.9-37.6L397,419.6z M115,92.4 c13.9-12,29.4-22.3,46.1-30.4l-11.9-29.8c-20.7,9.9-39.8,22.6-56.8,37.6L115,92.4z M447.7,355.5c-7.8,14.9-17.2,28.8-28.1,41.5 l22.7,22.7c13.7-15.6,25.5-32.9,34.9-51.5L447.7,355.5z M471.4,272c-1.4,18.8-5.2,37-11.1,54.1l29.5,12.6 c7.5-21.1,12.2-43.5,13.6-66.8H471.4z M321.2,462c-15.7,5-32.2,8.2-49.2,9.4v32.1c21.2-1.4,41.7-5.4,61.1-11.7L321.2,462z M240,471.4c-18.8-1.4-37-5.2-54.1-11.1l-12.6,29.5c21.1,7.5,43.5,12.2,66.8,13.6V471.4z M462,190.8c5,15.7,8.2,32.2,9.4,49.2h32.1 c-1.4-21.2-5.4-41.7-11.7-61.1L462,190.8z M92.4,397c-12-13.9-22.3-29.4-30.4-46.1l-29.8,11.9c9.9,20.7,22.6,39.8,37.6,56.9 L92.4,397z M272,40.6c18.8,1.4,36.9,5.2,54.1,11.1l12.6-29.5C317.7,14.7,295.3,10,272,8.5V40.6z M190.8,50 c15.7-5,32.2-8.2,49.2-9.4V8.5c-21.2,1.4-41.7,5.4-61.1,11.7L190.8,50z M442.3,92.3L419.6,115c12,13.9,22.3,29.4,30.5,46.1 l29.8-11.9C470,128.5,457.3,109.4,442.3,92.3z M397,92.4l22.7-22.7c-15.6-13.7-32.8-25.5-51.5-34.9l-12.6,29.5 C370.4,72.1,384.4,81.5,397,92.4z"
          }
        });
        const OPACITY_ANIMATE = {
          ...ANIMATION_BASE,
          attributeName: "opacity"
        };
        const dot = {
          tag: "circle",
          attributes: {
            ...FILL,
            cx: "256",
            cy: "364",
            r: "28"
          },
          children: []
        };
        if (!reduceMotion) {
          dot.children.push({
            tag: "animate",
            attributes: {
              ...ANIMATION_BASE,
              attributeName: "r",
              values: "28;14;28;28;14;28;"
            }
          }, {
            tag: "animate",
            attributes: {
              ...OPACITY_ANIMATE,
              values: "1;0;1;1;0;1;"
            }
          });
        }
        gChildren.push(dot);
        gChildren.push({
          tag: "path",
          attributes: {
            ...FILL,
            opacity: "1",
            d: "M263.7,312h-16c-6.6,0-12-5.4-12-12c0-71,77.4-63.9,77.4-107.8c0-20-17.8-40.2-57.4-40.2c-29.1,0-44.3,9.6-59.2,28.7 c-3.9,5-11.1,6-16.2,2.4l-13.1-9.2c-5.6-3.9-6.9-11.8-2.6-17.2c21.2-27.2,46.4-44.7,91.2-44.7c52.3,0,97.4,29.8,97.4,80.2 c0,67.6-77.4,63.5-77.4,107.8C275.7,306.6,270.3,312,263.7,312z"
          },
          children: reduceMotion ? [] : [{
            tag: "animate",
            attributes: {
              ...OPACITY_ANIMATE,
              values: "1;0;0;0;0;1;"
            }
          }]
        });
        if (!reduceMotion) {
          gChildren.push({
            tag: "path",
            attributes: {
              ...FILL,
              opacity: "0",
              d: "M232.5,134.5l7,168c0.3,6.4,5.6,11.5,12,11.5h9c6.4,0,11.7-5.1,12-11.5l7-168c0.3-6.8-5.2-12.5-12-12.5h-23 C237.7,122,232.2,127.7,232.5,134.5z"
            },
            children: [{
              tag: "animate",
              attributes: {
                ...OPACITY_ANIMATE,
                values: "0;0;1;1;0;0;"
              }
            }]
          });
        }
        return {
          tag: "g",
          attributes: {
            "class": "missing"
          },
          children: gChildren
        };
      };
    }
  };
  var SvgSymbols = {
    hooks() {
      return {
        parseNodeAttributes(accumulator, node) {
          const symbolData = node.getAttribute("data-fa-symbol");
          const symbol = symbolData === null ? false : symbolData === "" ? true : symbolData;
          accumulator["symbol"] = symbol;
          return accumulator;
        }
      };
    }
  };
  var plugins = [InjectCSS, ReplaceElements, Layers, LayersCounter, LayersText, PseudoElements, MutationObserver$1, PowerTransforms, Masks, MissingIconIndicator, SvgSymbols];
  registerPlugins(plugins, {
    mixoutsTo: api
  });
  api.noAuto;
  api.config;
  api.library;
  api.dom;
  const parse$1 = api.parse;
  api.findIconDefinition;
  api.toHtml;
  const icon = api.icon;
  api.layer;
  api.text;
  api.counter;
  var define_process_default = { env: { NODE_ENV: "production" } };
  function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
      var symbols = Object.getOwnPropertySymbols(object);
      enumerableOnly && (symbols = symbols.filter(function(sym) {
        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
      })), keys.push.apply(keys, symbols);
    }
    return keys;
  }
  __name(ownKeys, "ownKeys");
  function _objectSpread2(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = null != arguments[i] ? arguments[i] : {};
      i % 2 ? ownKeys(Object(source), true).forEach(function(key) {
        _defineProperty(target, key, source[key]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
    return target;
  }
  __name(_objectSpread2, "_objectSpread2");
  function _typeof$1(obj) {
    "@babel/helpers - typeof";
    return _typeof$1 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && "function" == typeof Symbol && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof$1(obj);
  }
  __name(_typeof$1, "_typeof$1");
  function _defineProperty(obj, key, value) {
    if (key in obj) {
      Object.defineProperty(obj, key, {
        value,
        enumerable: true,
        configurable: true,
        writable: true
      });
    } else {
      obj[key] = value;
    }
    return obj;
  }
  __name(_defineProperty, "_defineProperty");
  function _objectWithoutPropertiesLoose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for (i = 0; i < sourceKeys.length; i++) {
      key = sourceKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      target[key] = source[key];
    }
    return target;
  }
  __name(_objectWithoutPropertiesLoose, "_objectWithoutPropertiesLoose");
  function _objectWithoutProperties(source, excluded) {
    if (source == null) return {};
    var target = _objectWithoutPropertiesLoose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
      var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
      for (i = 0; i < sourceSymbolKeys.length; i++) {
        key = sourceSymbolKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
        target[key] = source[key];
      }
    }
    return target;
  }
  __name(_objectWithoutProperties, "_objectWithoutProperties");
  function _toConsumableArray$1(arr) {
    return _arrayWithoutHoles$1(arr) || _iterableToArray$1(arr) || _unsupportedIterableToArray$1(arr) || _nonIterableSpread$1();
  }
  __name(_toConsumableArray$1, "_toConsumableArray$1");
  function _arrayWithoutHoles$1(arr) {
    if (Array.isArray(arr)) return _arrayLikeToArray$1(arr);
  }
  __name(_arrayWithoutHoles$1, "_arrayWithoutHoles$1");
  function _iterableToArray$1(iter) {
    if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
  }
  __name(_iterableToArray$1, "_iterableToArray$1");
  function _unsupportedIterableToArray$1(o2, minLen) {
    if (!o2) return;
    if (typeof o2 === "string") return _arrayLikeToArray$1(o2, minLen);
    var n = Object.prototype.toString.call(o2).slice(8, -1);
    if (n === "Object" && o2.constructor) n = o2.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(o2);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$1(o2, minLen);
  }
  __name(_unsupportedIterableToArray$1, "_unsupportedIterableToArray$1");
  function _arrayLikeToArray$1(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
    return arr2;
  }
  __name(_arrayLikeToArray$1, "_arrayLikeToArray$1");
  function _nonIterableSpread$1() {
    throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  __name(_nonIterableSpread$1, "_nonIterableSpread$1");
  function classList(props) {
    var _classes;
    var beat = props.beat, fade = props.fade, beatFade = props.beatFade, bounce = props.bounce, shake = props.shake, flash = props.flash, spin = props.spin, spinPulse = props.spinPulse, spinReverse = props.spinReverse, pulse = props.pulse, fixedWidth = props.fixedWidth, inverse = props.inverse, border = props.border, listItem = props.listItem, flip = props.flip, size = props.size, rotation = props.rotation, pull = props.pull;
    var classes = (_classes = {
      "fa-beat": beat,
      "fa-fade": fade,
      "fa-beat-fade": beatFade,
      "fa-bounce": bounce,
      "fa-shake": shake,
      "fa-flash": flash,
      "fa-spin": spin,
      "fa-spin-reverse": spinReverse,
      "fa-spin-pulse": spinPulse,
      "fa-pulse": pulse,
      "fa-fw": fixedWidth,
      "fa-inverse": inverse,
      "fa-border": border,
      "fa-li": listItem,
      "fa-flip": flip === true,
      "fa-flip-horizontal": flip === "horizontal" || flip === "both",
      "fa-flip-vertical": flip === "vertical" || flip === "both"
    }, _defineProperty(_classes, "fa-".concat(size), typeof size !== "undefined" && size !== null), _defineProperty(_classes, "fa-rotate-".concat(rotation), typeof rotation !== "undefined" && rotation !== null && rotation !== 0), _defineProperty(_classes, "fa-pull-".concat(pull), typeof pull !== "undefined" && pull !== null), _defineProperty(_classes, "fa-swap-opacity", props.swapOpacity), _classes);
    return Object.keys(classes).map(function(key) {
      return classes[key] ? key : null;
    }).filter(function(key) {
      return key;
    });
  }
  __name(classList, "classList");
  function _isNumerical(obj) {
    obj = obj - 0;
    return obj === obj;
  }
  __name(_isNumerical, "_isNumerical");
  function camelize(string) {
    if (_isNumerical(string)) {
      return string;
    }
    string = string.replace(/[\-_\s]+(.)?/g, function(match, chr) {
      return chr ? chr.toUpperCase() : "";
    });
    return string.substr(0, 1).toLowerCase() + string.substr(1);
  }
  __name(camelize, "camelize");
  var _excluded = ["style"];
  function capitalize(val) {
    return val.charAt(0).toUpperCase() + val.slice(1);
  }
  __name(capitalize, "capitalize");
  function styleToObject(style) {
    return style.split(";").map(function(s) {
      return s.trim();
    }).filter(function(s) {
      return s;
    }).reduce(function(acc, pair) {
      var i = pair.indexOf(":");
      var prop = camelize(pair.slice(0, i));
      var value = pair.slice(i + 1).trim();
      prop.startsWith("webkit") ? acc[capitalize(prop)] = value : acc[prop] = value;
      return acc;
    }, {});
  }
  __name(styleToObject, "styleToObject");
  function convert(createElement2, element) {
    var extraProps = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
    if (typeof element === "string") {
      return element;
    }
    var children = (element.children || []).map(function(child) {
      return convert(createElement2, child);
    });
    var mixins = Object.keys(element.attributes || {}).reduce(function(acc, key) {
      var val = element.attributes[key];
      switch (key) {
        case "class":
          acc.attrs["className"] = val;
          delete element.attributes["class"];
          break;
        case "style":
          acc.attrs["style"] = styleToObject(val);
          break;
        default:
          if (key.indexOf("aria-") === 0 || key.indexOf("data-") === 0) {
            acc.attrs[key.toLowerCase()] = val;
          } else {
            acc.attrs[camelize(key)] = val;
          }
      }
      return acc;
    }, {
      attrs: {}
    });
    var _extraProps$style = extraProps.style, existingStyle = _extraProps$style === void 0 ? {} : _extraProps$style, remaining = _objectWithoutProperties(extraProps, _excluded);
    mixins.attrs["style"] = _objectSpread2(_objectSpread2({}, mixins.attrs["style"]), existingStyle);
    return createElement2.apply(void 0, [element.tag, _objectSpread2(_objectSpread2({}, mixins.attrs), remaining)].concat(_toConsumableArray$1(children)));
  }
  __name(convert, "convert");
  var PRODUCTION = false;
  try {
    PRODUCTION = define_process_default.env.NODE_ENV === "production";
  } catch (e) {
  }
  function log() {
    if (!PRODUCTION && console && typeof console.error === "function") {
      var _console;
      (_console = console).error.apply(_console, arguments);
    }
  }
  __name(log, "log");
  function normalizeIconArgs(icon2) {
    if (icon2 && _typeof$1(icon2) === "object" && icon2.prefix && icon2.iconName && icon2.icon) {
      return icon2;
    }
    if (parse$1.icon) {
      return parse$1.icon(icon2);
    }
    if (icon2 === null) {
      return null;
    }
    if (icon2 && _typeof$1(icon2) === "object" && icon2.prefix && icon2.iconName) {
      return icon2;
    }
    if (Array.isArray(icon2) && icon2.length === 2) {
      return {
        prefix: icon2[0],
        iconName: icon2[1]
      };
    }
    if (typeof icon2 === "string") {
      return {
        prefix: "fas",
        iconName: icon2
      };
    }
  }
  __name(normalizeIconArgs, "normalizeIconArgs");
  function objectWithKey(key, value) {
    return Array.isArray(value) && value.length > 0 || !Array.isArray(value) && value ? _defineProperty({}, key, value) : {};
  }
  __name(objectWithKey, "objectWithKey");
  var defaultProps = {
    border: false,
    className: "",
    mask: null,
    maskId: null,
    fixedWidth: false,
    inverse: false,
    flip: false,
    icon: null,
    listItem: false,
    pull: null,
    pulse: false,
    rotation: null,
    size: null,
    spin: false,
    spinPulse: false,
    spinReverse: false,
    beat: false,
    fade: false,
    beatFade: false,
    bounce: false,
    shake: false,
    symbol: false,
    title: "",
    titleId: null,
    transform: null,
    swapOpacity: false
  };
  var FontAwesomeIcon = /* @__PURE__ */ r$1.forwardRef(function(props, ref) {
    var allProps = _objectSpread2(_objectSpread2({}, defaultProps), props);
    var iconArgs = allProps.icon, maskArgs = allProps.mask, symbol = allProps.symbol, className = allProps.className, title = allProps.title, titleId = allProps.titleId, maskId = allProps.maskId;
    var iconLookup = normalizeIconArgs(iconArgs);
    var classes = objectWithKey("classes", [].concat(_toConsumableArray$1(classList(allProps)), _toConsumableArray$1((className || "").split(" "))));
    var transform = objectWithKey("transform", typeof allProps.transform === "string" ? parse$1.transform(allProps.transform) : allProps.transform);
    var mask = objectWithKey("mask", normalizeIconArgs(maskArgs));
    var renderedIcon = icon(iconLookup, _objectSpread2(_objectSpread2(_objectSpread2(_objectSpread2({}, classes), transform), mask), {}, {
      symbol,
      title,
      titleId,
      maskId
    }));
    if (!renderedIcon) {
      log("Could not find icon", iconLookup);
      return null;
    }
    var abstract = renderedIcon.abstract;
    var extraProps = {
      ref
    };
    Object.keys(allProps).forEach(function(key) {
      if (!defaultProps.hasOwnProperty(key)) {
        extraProps[key] = allProps[key];
      }
    });
    return convertCurry(abstract[0], extraProps);
  });
  FontAwesomeIcon.displayName = "FontAwesomeIcon";
  FontAwesomeIcon.propTypes = {
    beat: PropTypes.bool,
    border: PropTypes.bool,
    beatFade: PropTypes.bool,
    bounce: PropTypes.bool,
    className: PropTypes.string,
    fade: PropTypes.bool,
    flash: PropTypes.bool,
    mask: PropTypes.oneOfType([PropTypes.object, PropTypes.array, PropTypes.string]),
    maskId: PropTypes.string,
    fixedWidth: PropTypes.bool,
    inverse: PropTypes.bool,
    flip: PropTypes.oneOf([true, false, "horizontal", "vertical", "both"]),
    icon: PropTypes.oneOfType([PropTypes.object, PropTypes.array, PropTypes.string]),
    listItem: PropTypes.bool,
    pull: PropTypes.oneOf(["right", "left"]),
    pulse: PropTypes.bool,
    rotation: PropTypes.oneOf([0, 90, 180, 270]),
    shake: PropTypes.bool,
    size: PropTypes.oneOf(["2xs", "xs", "sm", "lg", "xl", "2xl", "1x", "2x", "3x", "4x", "5x", "6x", "7x", "8x", "9x", "10x"]),
    spin: PropTypes.bool,
    spinPulse: PropTypes.bool,
    spinReverse: PropTypes.bool,
    symbol: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),
    title: PropTypes.string,
    titleId: PropTypes.string,
    transform: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),
    swapOpacity: PropTypes.bool
  };
  var convertCurry = convert.bind(null, r$1.createElement);
  const ColumnSection = /* @__PURE__ */ __name(({ columnIndex, column: { title, links } }) => {
    const [show, setShow] = r$1.useState(false);
    const isWindowDefined = typeof window !== "undefined";
    const initialMatches = isWindowDefined ? window.innerWidth >= 1260 : false;
    const [isLgDesktop, setIsLgDesktop] = r$1.useState(initialMatches);
    const accordionBodyRef = r$1.useRef(null);
    r$1.useEffect(() => {
      const mediaWatcher = window.matchMedia("screen and (min-width: 1260px)");
      const handleMediaChange = /* @__PURE__ */ __name((e) => setIsLgDesktop(e.matches), "handleMediaChange");
      mediaWatcher.addEventListener("change", handleMediaChange);
      handleMediaChange(mediaWatcher);
      return () => mediaWatcher.removeEventListener("change", handleMediaChange);
    }, []);
    const handleAnimation = /* @__PURE__ */ __name((showingContent) => {
      const accordionBody = accordionBodyRef == null ? void 0 : accordionBodyRef.current;
      if (!accordionBody) return;
      accordionBody.classList.add("collapsing");
      const animation = accordionBody.animate(
        [
          {
            maxHeight: showingContent ? `${accordionBody.scrollHeight}px` : "0px"
          }
        ],
        {
          duration: 350,
          easing: "ease-in-out",
          fill: "forwards"
        }
      );
      animation.onfinish = () => {
        accordionBody.classList.remove("collapsing");
        if (showingContent) {
          accordionBody.classList.add("show");
        } else {
          accordionBody.classList.remove("show");
        }
      };
    }, "handleAnimation");
    const handleToggle = /* @__PURE__ */ __name(() => {
      if (isLgDesktop) {
        setShow(true);
        return;
      }
      setShow((prev) => {
        const showingContent = !prev;
        handleAnimation(showingContent);
        return showingContent;
      });
    }, "handleToggle");
    return /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "col-xl flex-footer testname-column", children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "card accordion-item desktop-disable-xl", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "accordion-header", children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "h5", children: /* @__PURE__ */ jsxRuntimeExports.jsxs(
        "button",
        {
          id: `footlink-header-${columnIndex}`,
          className: "accordion-button",
          "aria-expanded": show || isLgDesktop,
          "aria-controls": `footlink-${columnIndex}`,
          onClick: handleToggle,
          type: "button",
          disabled: isLgDesktop,
          children: [
            title,
            /* @__PURE__ */ jsxRuntimeExports.jsx(
              FontAwesomeIcon,
              {
                className: show || isLgDesktop ? "open" : "",
                icon: faChevronDown
              }
            )
          ]
        }
      ) }) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        "div",
        {
          id: `footlink-${columnIndex}`,
          className: "accordion-body",
          role: "region",
          "aria-labelledby": `footlink-header-${columnIndex}`,
          ref: accordionBodyRef,
          children: links.map((link) => /* @__PURE__ */ jsxRuntimeExports.jsx(
            "a",
            {
              className: "nav-link",
              href: link.url,
              title: link.title,
              children: link.text
            },
            `footlink-${title}-link-${link.text}`
          ))
        }
      )
    ] }) });
  }, "ColumnSection");
  ColumnSection.propTypes = {
    columnIndex: PropTypes.number.isRequired,
    column: propTypesExports.shape({
      title: PropTypes.string,
      links: propTypesExports.arrayOf(
        propTypesExports.shape({
          url: PropTypes.string.isRequired,
          title: PropTypes.string,
          text: PropTypes.string.isRequired
        })
      )
    })
  };
  const ContactComponent = /* @__PURE__ */ __name(({
    contact: { title = "", contactLink = "", contributionLink = "", columns }
  }) => {
    return /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "wrapper", id: "wrapper-footer-columns", "data-testid": "contact", children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "container", id: "footer-columns", children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "row", "data-testid": "columns-container", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "col-xl-3", id: "info-column", children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "h5", children: title }),
        contactLink && /* @__PURE__ */ jsxRuntimeExports.jsx("p", { className: "contact-link", children: /* @__PURE__ */ jsxRuntimeExports.jsx("a", { href: contactLink, children: "Contact Us" }) }),
        contributionLink && /* @__PURE__ */ jsxRuntimeExports.jsx(
          "p",
          {
            className: "contribute-button",
            "data-testid": "contact-contribution-link",
            children: /* @__PURE__ */ jsxRuntimeExports.jsx(
              Button,
              {
                color: "gold",
                href: contributionLink,
                text: "Support ASU",
                classes: "btn"
              }
            )
          }
        )
      ] }),
      columns && columns.length && /* @__PURE__ */ jsxRuntimeExports.jsx(jsxRuntimeExports.Fragment, { children: columns.map((column, columnIndex) => /* @__PURE__ */ jsxRuntimeExports.jsx(
        ColumnSection,
        {
          columnIndex,
          column
        },
        `footlink-${column.title}`
      )) })
    ] }) }) });
  }, "ContactComponent");
  ContactComponent.propTypes = {
    contact: propTypesExports.shape({
      title: PropTypes.string.isRequired,
      contactLink: PropTypes.string.isRequired,
      contributionLink: PropTypes.string,
      columns: propTypesExports.arrayOf(
        propTypesExports.shape({
          title: PropTypes.string,
          links: propTypesExports.arrayOf(
            propTypesExports.shape({
              url: PropTypes.string.isRequired,
              title: PropTypes.string,
              text: PropTypes.string.isRequired
            })
          )
        })
      )
    })
  };
  function _typeof(obj) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && "function" == typeof Symbol && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  }
  __name(_typeof, "_typeof");
  function _setPrototypeOf(o2, p) {
    _setPrototypeOf = Object.setPrototypeOf || /* @__PURE__ */ __name(function _setPrototypeOf2(o22, p2) {
      o22.__proto__ = p2;
      return o22;
    }, "_setPrototypeOf2");
    return _setPrototypeOf(o2, p);
  }
  __name(_setPrototypeOf, "_setPrototypeOf");
  function _isNativeReflectConstruct() {
    if (typeof Reflect === "undefined" || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === "function") return true;
    try {
      Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
      }));
      return true;
    } catch (e) {
      return false;
    }
  }
  __name(_isNativeReflectConstruct, "_isNativeReflectConstruct");
  function _construct(Parent, args, Class) {
    if (_isNativeReflectConstruct()) {
      _construct = Reflect.construct;
    } else {
      _construct = /* @__PURE__ */ __name(function _construct2(Parent2, args2, Class2) {
        var a2 = [null];
        a2.push.apply(a2, args2);
        var Constructor = Function.bind.apply(Parent2, a2);
        var instance = new Constructor();
        if (Class2) _setPrototypeOf(instance, Class2.prototype);
        return instance;
      }, "_construct2");
    }
    return _construct.apply(null, arguments);
  }
  __name(_construct, "_construct");
  function _toConsumableArray(arr) {
    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
  }
  __name(_toConsumableArray, "_toConsumableArray");
  function _arrayWithoutHoles(arr) {
    if (Array.isArray(arr)) return _arrayLikeToArray(arr);
  }
  __name(_arrayWithoutHoles, "_arrayWithoutHoles");
  function _iterableToArray(iter) {
    if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
  }
  __name(_iterableToArray, "_iterableToArray");
  function _unsupportedIterableToArray(o2, minLen) {
    if (!o2) return;
    if (typeof o2 === "string") return _arrayLikeToArray(o2, minLen);
    var n = Object.prototype.toString.call(o2).slice(8, -1);
    if (n === "Object" && o2.constructor) n = o2.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(o2);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o2, minLen);
  }
  __name(_unsupportedIterableToArray, "_unsupportedIterableToArray");
  function _arrayLikeToArray(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
    return arr2;
  }
  __name(_arrayLikeToArray, "_arrayLikeToArray");
  function _nonIterableSpread() {
    throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  __name(_nonIterableSpread, "_nonIterableSpread");
  var hasOwnProperty = Object.hasOwnProperty, setPrototypeOf = Object.setPrototypeOf, isFrozen = Object.isFrozen, getPrototypeOf = Object.getPrototypeOf, getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
  var freeze = Object.freeze, seal = Object.seal, create = Object.create;
  var _ref = typeof Reflect !== "undefined" && Reflect, apply = _ref.apply, construct = _ref.construct;
  if (!apply) {
    apply = /* @__PURE__ */ __name(function apply2(fun, thisValue, args) {
      return fun.apply(thisValue, args);
    }, "apply2");
  }
  if (!freeze) {
    freeze = /* @__PURE__ */ __name(function freeze2(x2) {
      return x2;
    }, "freeze2");
  }
  if (!seal) {
    seal = /* @__PURE__ */ __name(function seal2(x2) {
      return x2;
    }, "seal2");
  }
  if (!construct) {
    construct = /* @__PURE__ */ __name(function construct2(Func, args) {
      return _construct(Func, _toConsumableArray(args));
    }, "construct2");
  }
  var arrayForEach = unapply(Array.prototype.forEach);
  var arrayPop = unapply(Array.prototype.pop);
  var arrayPush = unapply(Array.prototype.push);
  var stringToLowerCase = unapply(String.prototype.toLowerCase);
  var stringToString = unapply(String.prototype.toString);
  var stringMatch = unapply(String.prototype.match);
  var stringReplace = unapply(String.prototype.replace);
  var stringIndexOf = unapply(String.prototype.indexOf);
  var stringTrim = unapply(String.prototype.trim);
  var regExpTest = unapply(RegExp.prototype.test);
  var typeErrorCreate = unconstruct(TypeError);
  function unapply(func) {
    return function(thisArg) {
      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }
      return apply(func, thisArg, args);
    };
  }
  __name(unapply, "unapply");
  function unconstruct(func) {
    return function() {
      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }
      return construct(func, args);
    };
  }
  __name(unconstruct, "unconstruct");
  function addToSet(set, array, transformCaseFunc) {
    var _transformCaseFunc;
    transformCaseFunc = (_transformCaseFunc = transformCaseFunc) !== null && _transformCaseFunc !== void 0 ? _transformCaseFunc : stringToLowerCase;
    if (setPrototypeOf) {
      setPrototypeOf(set, null);
    }
    var l = array.length;
    while (l--) {
      var element = array[l];
      if (typeof element === "string") {
        var lcElement = transformCaseFunc(element);
        if (lcElement !== element) {
          if (!isFrozen(array)) {
            array[l] = lcElement;
          }
          element = lcElement;
        }
      }
      set[element] = true;
    }
    return set;
  }
  __name(addToSet, "addToSet");
  function clone(object) {
    var newObject = create(null);
    var property;
    for (property in object) {
      if (apply(hasOwnProperty, object, [property]) === true) {
        newObject[property] = object[property];
      }
    }
    return newObject;
  }
  __name(clone, "clone");
  function lookupGetter(object, prop) {
    while (object !== null) {
      var desc = getOwnPropertyDescriptor(object, prop);
      if (desc) {
        if (desc.get) {
          return unapply(desc.get);
        }
        if (typeof desc.value === "function") {
          return unapply(desc.value);
        }
      }
      object = getPrototypeOf(object);
    }
    function fallbackValue(element) {
      console.warn("fallback value for", element);
      return null;
    }
    __name(fallbackValue, "fallbackValue");
    return fallbackValue;
  }
  __name(lookupGetter, "lookupGetter");
  var html$1 = freeze(["a", "abbr", "acronym", "address", "area", "article", "aside", "audio", "b", "bdi", "bdo", "big", "blink", "blockquote", "body", "br", "button", "canvas", "caption", "center", "cite", "code", "col", "colgroup", "content", "data", "datalist", "dd", "decorator", "del", "details", "dfn", "dialog", "dir", "div", "dl", "dt", "element", "em", "fieldset", "figcaption", "figure", "font", "footer", "form", "h1", "h2", "h3", "h4", "h5", "h6", "head", "header", "hgroup", "hr", "html", "i", "img", "input", "ins", "kbd", "label", "legend", "li", "main", "map", "mark", "marquee", "menu", "menuitem", "meter", "nav", "nobr", "ol", "optgroup", "option", "output", "p", "picture", "pre", "progress", "q", "rp", "rt", "ruby", "s", "samp", "section", "select", "shadow", "small", "source", "spacer", "span", "strike", "strong", "style", "sub", "summary", "sup", "table", "tbody", "td", "template", "textarea", "tfoot", "th", "thead", "time", "tr", "track", "tt", "u", "ul", "var", "video", "wbr"]);
  var svg$1 = freeze(["svg", "a", "altglyph", "altglyphdef", "altglyphitem", "animatecolor", "animatemotion", "animatetransform", "circle", "clippath", "defs", "desc", "ellipse", "filter", "font", "g", "glyph", "glyphref", "hkern", "image", "line", "lineargradient", "marker", "mask", "metadata", "mpath", "path", "pattern", "polygon", "polyline", "radialgradient", "rect", "stop", "style", "switch", "symbol", "text", "textpath", "title", "tref", "tspan", "view", "vkern"]);
  var svgFilters = freeze(["feBlend", "feColorMatrix", "feComponentTransfer", "feComposite", "feConvolveMatrix", "feDiffuseLighting", "feDisplacementMap", "feDistantLight", "feFlood", "feFuncA", "feFuncB", "feFuncG", "feFuncR", "feGaussianBlur", "feImage", "feMerge", "feMergeNode", "feMorphology", "feOffset", "fePointLight", "feSpecularLighting", "feSpotLight", "feTile", "feTurbulence"]);
  var svgDisallowed = freeze(["animate", "color-profile", "cursor", "discard", "fedropshadow", "font-face", "font-face-format", "font-face-name", "font-face-src", "font-face-uri", "foreignobject", "hatch", "hatchpath", "mesh", "meshgradient", "meshpatch", "meshrow", "missing-glyph", "script", "set", "solidcolor", "unknown", "use"]);
  var mathMl$1 = freeze(["math", "menclose", "merror", "mfenced", "mfrac", "mglyph", "mi", "mlabeledtr", "mmultiscripts", "mn", "mo", "mover", "mpadded", "mphantom", "mroot", "mrow", "ms", "mspace", "msqrt", "mstyle", "msub", "msup", "msubsup", "mtable", "mtd", "mtext", "mtr", "munder", "munderover"]);
  var mathMlDisallowed = freeze(["maction", "maligngroup", "malignmark", "mlongdiv", "mscarries", "mscarry", "msgroup", "mstack", "msline", "msrow", "semantics", "annotation", "annotation-xml", "mprescripts", "none"]);
  var text = freeze(["#text"]);
  var html = freeze(["accept", "action", "align", "alt", "autocapitalize", "autocomplete", "autopictureinpicture", "autoplay", "background", "bgcolor", "border", "capture", "cellpadding", "cellspacing", "checked", "cite", "class", "clear", "color", "cols", "colspan", "controls", "controlslist", "coords", "crossorigin", "datetime", "decoding", "default", "dir", "disabled", "disablepictureinpicture", "disableremoteplayback", "download", "draggable", "enctype", "enterkeyhint", "face", "for", "headers", "height", "hidden", "high", "href", "hreflang", "id", "inputmode", "integrity", "ismap", "kind", "label", "lang", "list", "loading", "loop", "low", "max", "maxlength", "media", "method", "min", "minlength", "multiple", "muted", "name", "nonce", "noshade", "novalidate", "nowrap", "open", "optimum", "pattern", "placeholder", "playsinline", "poster", "preload", "pubdate", "radiogroup", "readonly", "rel", "required", "rev", "reversed", "role", "rows", "rowspan", "spellcheck", "scope", "selected", "shape", "size", "sizes", "span", "srclang", "start", "src", "srcset", "step", "style", "summary", "tabindex", "title", "translate", "type", "usemap", "valign", "value", "width", "xmlns", "slot"]);
  var svg = freeze(["accent-height", "accumulate", "additive", "alignment-baseline", "ascent", "attributename", "attributetype", "azimuth", "basefrequency", "baseline-shift", "begin", "bias", "by", "class", "clip", "clippathunits", "clip-path", "clip-rule", "color", "color-interpolation", "color-interpolation-filters", "color-profile", "color-rendering", "cx", "cy", "d", "dx", "dy", "diffuseconstant", "direction", "display", "divisor", "dur", "edgemode", "elevation", "end", "fill", "fill-opacity", "fill-rule", "filter", "filterunits", "flood-color", "flood-opacity", "font-family", "font-size", "font-size-adjust", "font-stretch", "font-style", "font-variant", "font-weight", "fx", "fy", "g1", "g2", "glyph-name", "glyphref", "gradientunits", "gradienttransform", "height", "href", "id", "image-rendering", "in", "in2", "k", "k1", "k2", "k3", "k4", "kerning", "keypoints", "keysplines", "keytimes", "lang", "lengthadjust", "letter-spacing", "kernelmatrix", "kernelunitlength", "lighting-color", "local", "marker-end", "marker-mid", "marker-start", "markerheight", "markerunits", "markerwidth", "maskcontentunits", "maskunits", "max", "mask", "media", "method", "mode", "min", "name", "numoctaves", "offset", "operator", "opacity", "order", "orient", "orientation", "origin", "overflow", "paint-order", "path", "pathlength", "patterncontentunits", "patterntransform", "patternunits", "points", "preservealpha", "preserveaspectratio", "primitiveunits", "r", "rx", "ry", "radius", "refx", "refy", "repeatcount", "repeatdur", "restart", "result", "rotate", "scale", "seed", "shape-rendering", "specularconstant", "specularexponent", "spreadmethod", "startoffset", "stddeviation", "stitchtiles", "stop-color", "stop-opacity", "stroke-dasharray", "stroke-dashoffset", "stroke-linecap", "stroke-linejoin", "stroke-miterlimit", "stroke-opacity", "stroke", "stroke-width", "style", "surfacescale", "systemlanguage", "tabindex", "targetx", "targety", "transform", "transform-origin", "text-anchor", "text-decoration", "text-rendering", "textlength", "type", "u1", "u2", "unicode", "values", "viewbox", "visibility", "version", "vert-adv-y", "vert-origin-x", "vert-origin-y", "width", "word-spacing", "wrap", "writing-mode", "xchannelselector", "ychannelselector", "x", "x1", "x2", "xmlns", "y", "y1", "y2", "z", "zoomandpan"]);
  var mathMl = freeze(["accent", "accentunder", "align", "bevelled", "close", "columnsalign", "columnlines", "columnspan", "denomalign", "depth", "dir", "display", "displaystyle", "encoding", "fence", "frame", "height", "href", "id", "largeop", "length", "linethickness", "lspace", "lquote", "mathbackground", "mathcolor", "mathsize", "mathvariant", "maxsize", "minsize", "movablelimits", "notation", "numalign", "open", "rowalign", "rowlines", "rowspacing", "rowspan", "rspace", "rquote", "scriptlevel", "scriptminsize", "scriptsizemultiplier", "selection", "separator", "separators", "stretchy", "subscriptshift", "supscriptshift", "symmetric", "voffset", "width", "xmlns"]);
  var xml = freeze(["xlink:href", "xml:id", "xlink:title", "xml:space", "xmlns:xlink"]);
  var MUSTACHE_EXPR = seal(/\{\{[\w\W]*|[\w\W]*\}\}/gm);
  var ERB_EXPR = seal(/<%[\w\W]*|[\w\W]*%>/gm);
  var TMPLIT_EXPR = seal(/\${[\w\W]*}/gm);
  var DATA_ATTR = seal(/^data-[\-\w.\u00B7-\uFFFF]/);
  var ARIA_ATTR = seal(/^aria-[\-\w]+$/);
  var IS_ALLOWED_URI = seal(
    /^(?:(?:(?:f|ht)tps?|mailto|tel|callto|cid|xmpp):|[^a-z]|[a-z+.\-]+(?:[^a-z+.\-:]|$))/i
    // eslint-disable-line no-useless-escape
  );
  var IS_SCRIPT_OR_DATA = seal(/^(?:\w+script|data):/i);
  var ATTR_WHITESPACE = seal(
    /[\u0000-\u0020\u00A0\u1680\u180E\u2000-\u2029\u205F\u3000]/g
    // eslint-disable-line no-control-regex
  );
  var DOCTYPE_NAME = seal(/^html$/i);
  var CUSTOM_ELEMENT = seal(/^[a-z][.\w]*(-[.\w]+)+$/i);
  var getGlobal = /* @__PURE__ */ __name(function getGlobal2() {
    return typeof window === "undefined" ? null : window;
  }, "getGlobal2");
  var _createTrustedTypesPolicy = /* @__PURE__ */ __name(function _createTrustedTypesPolicy2(trustedTypes, document2) {
    if (_typeof(trustedTypes) !== "object" || typeof trustedTypes.createPolicy !== "function") {
      return null;
    }
    var suffix = null;
    var ATTR_NAME = "data-tt-policy-suffix";
    if (document2.currentScript && document2.currentScript.hasAttribute(ATTR_NAME)) {
      suffix = document2.currentScript.getAttribute(ATTR_NAME);
    }
    var policyName = "dompurify" + (suffix ? "#" + suffix : "");
    try {
      return trustedTypes.createPolicy(policyName, {
        createHTML: /* @__PURE__ */ __name(function createHTML(html2) {
          return html2;
        }, "createHTML"),
        createScriptURL: /* @__PURE__ */ __name(function createScriptURL(scriptUrl) {
          return scriptUrl;
        }, "createScriptURL")
      });
    } catch (_2) {
      console.warn("TrustedTypes policy " + policyName + " could not be created.");
      return null;
    }
  }, "_createTrustedTypesPolicy2");
  function createDOMPurify() {
    var window2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : getGlobal();
    var DOMPurify = /* @__PURE__ */ __name(function DOMPurify2(root) {
      return createDOMPurify(root);
    }, "DOMPurify2");
    DOMPurify.version = "2.5.7";
    DOMPurify.removed = [];
    if (!window2 || !window2.document || window2.document.nodeType !== 9) {
      DOMPurify.isSupported = false;
      return DOMPurify;
    }
    var originalDocument = window2.document;
    var document2 = window2.document;
    var DocumentFragment = window2.DocumentFragment, HTMLTemplateElement = window2.HTMLTemplateElement, Node2 = window2.Node, Element = window2.Element, NodeFilter = window2.NodeFilter, _window$NamedNodeMap = window2.NamedNodeMap, NamedNodeMap = _window$NamedNodeMap === void 0 ? window2.NamedNodeMap || window2.MozNamedAttrMap : _window$NamedNodeMap, HTMLFormElement = window2.HTMLFormElement, DOMParser = window2.DOMParser, trustedTypes = window2.trustedTypes;
    var ElementPrototype = Element.prototype;
    var cloneNode = lookupGetter(ElementPrototype, "cloneNode");
    var getNextSibling = lookupGetter(ElementPrototype, "nextSibling");
    var getChildNodes = lookupGetter(ElementPrototype, "childNodes");
    var getParentNode = lookupGetter(ElementPrototype, "parentNode");
    if (typeof HTMLTemplateElement === "function") {
      var template = document2.createElement("template");
      if (template.content && template.content.ownerDocument) {
        document2 = template.content.ownerDocument;
      }
    }
    var trustedTypesPolicy = _createTrustedTypesPolicy(trustedTypes, originalDocument);
    var emptyHTML = trustedTypesPolicy ? trustedTypesPolicy.createHTML("") : "";
    var _document = document2, implementation = _document.implementation, createNodeIterator = _document.createNodeIterator, createDocumentFragment = _document.createDocumentFragment, getElementsByTagName = _document.getElementsByTagName;
    var importNode = originalDocument.importNode;
    var documentMode = {};
    try {
      documentMode = clone(document2).documentMode ? document2.documentMode : {};
    } catch (_2) {
    }
    var hooks = {};
    DOMPurify.isSupported = typeof getParentNode === "function" && implementation && implementation.createHTMLDocument !== void 0 && documentMode !== 9;
    var MUSTACHE_EXPR$1 = MUSTACHE_EXPR, ERB_EXPR$1 = ERB_EXPR, TMPLIT_EXPR$1 = TMPLIT_EXPR, DATA_ATTR$1 = DATA_ATTR, ARIA_ATTR$1 = ARIA_ATTR, IS_SCRIPT_OR_DATA$1 = IS_SCRIPT_OR_DATA, ATTR_WHITESPACE$1 = ATTR_WHITESPACE, CUSTOM_ELEMENT$1 = CUSTOM_ELEMENT;
    var IS_ALLOWED_URI$1 = IS_ALLOWED_URI;
    var ALLOWED_TAGS = null;
    var DEFAULT_ALLOWED_TAGS = addToSet({}, [].concat(_toConsumableArray(html$1), _toConsumableArray(svg$1), _toConsumableArray(svgFilters), _toConsumableArray(mathMl$1), _toConsumableArray(text)));
    var ALLOWED_ATTR = null;
    var DEFAULT_ALLOWED_ATTR = addToSet({}, [].concat(_toConsumableArray(html), _toConsumableArray(svg), _toConsumableArray(mathMl), _toConsumableArray(xml)));
    var CUSTOM_ELEMENT_HANDLING = Object.seal(Object.create(null, {
      tagNameCheck: {
        writable: true,
        configurable: false,
        enumerable: true,
        value: null
      },
      attributeNameCheck: {
        writable: true,
        configurable: false,
        enumerable: true,
        value: null
      },
      allowCustomizedBuiltInElements: {
        writable: true,
        configurable: false,
        enumerable: true,
        value: false
      }
    }));
    var FORBID_TAGS = null;
    var FORBID_ATTR = null;
    var ALLOW_ARIA_ATTR = true;
    var ALLOW_DATA_ATTR = true;
    var ALLOW_UNKNOWN_PROTOCOLS = false;
    var ALLOW_SELF_CLOSE_IN_ATTR = true;
    var SAFE_FOR_TEMPLATES = false;
    var SAFE_FOR_XML = true;
    var WHOLE_DOCUMENT = false;
    var SET_CONFIG = false;
    var FORCE_BODY = false;
    var RETURN_DOM = false;
    var RETURN_DOM_FRAGMENT = false;
    var RETURN_TRUSTED_TYPE = false;
    var SANITIZE_DOM = true;
    var SANITIZE_NAMED_PROPS = false;
    var SANITIZE_NAMED_PROPS_PREFIX = "user-content-";
    var KEEP_CONTENT = true;
    var IN_PLACE = false;
    var USE_PROFILES = {};
    var FORBID_CONTENTS = null;
    var DEFAULT_FORBID_CONTENTS = addToSet({}, ["annotation-xml", "audio", "colgroup", "desc", "foreignobject", "head", "iframe", "math", "mi", "mn", "mo", "ms", "mtext", "noembed", "noframes", "noscript", "plaintext", "script", "style", "svg", "template", "thead", "title", "video", "xmp"]);
    var DATA_URI_TAGS = null;
    var DEFAULT_DATA_URI_TAGS = addToSet({}, ["audio", "video", "img", "source", "image", "track"]);
    var URI_SAFE_ATTRIBUTES = null;
    var DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, ["alt", "class", "for", "id", "label", "name", "pattern", "placeholder", "role", "summary", "title", "value", "style", "xmlns"]);
    var MATHML_NAMESPACE = "http://www.w3.org/1998/Math/MathML";
    var SVG_NAMESPACE = "http://www.w3.org/2000/svg";
    var HTML_NAMESPACE = "http://www.w3.org/1999/xhtml";
    var NAMESPACE = HTML_NAMESPACE;
    var IS_EMPTY_INPUT = false;
    var ALLOWED_NAMESPACES = null;
    var DEFAULT_ALLOWED_NAMESPACES = addToSet({}, [MATHML_NAMESPACE, SVG_NAMESPACE, HTML_NAMESPACE], stringToString);
    var PARSER_MEDIA_TYPE;
    var SUPPORTED_PARSER_MEDIA_TYPES = ["application/xhtml+xml", "text/html"];
    var DEFAULT_PARSER_MEDIA_TYPE = "text/html";
    var transformCaseFunc;
    var CONFIG = null;
    var formElement = document2.createElement("form");
    var isRegexOrFunction = /* @__PURE__ */ __name(function isRegexOrFunction2(testValue) {
      return testValue instanceof RegExp || testValue instanceof Function;
    }, "isRegexOrFunction2");
    var _parseConfig = /* @__PURE__ */ __name(function _parseConfig2(cfg) {
      if (CONFIG && CONFIG === cfg) {
        return;
      }
      if (!cfg || _typeof(cfg) !== "object") {
        cfg = {};
      }
      cfg = clone(cfg);
      PARSER_MEDIA_TYPE = // eslint-disable-next-line unicorn/prefer-includes
      SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE) === -1 ? PARSER_MEDIA_TYPE = DEFAULT_PARSER_MEDIA_TYPE : PARSER_MEDIA_TYPE = cfg.PARSER_MEDIA_TYPE;
      transformCaseFunc = PARSER_MEDIA_TYPE === "application/xhtml+xml" ? stringToString : stringToLowerCase;
      ALLOWED_TAGS = "ALLOWED_TAGS" in cfg ? addToSet({}, cfg.ALLOWED_TAGS, transformCaseFunc) : DEFAULT_ALLOWED_TAGS;
      ALLOWED_ATTR = "ALLOWED_ATTR" in cfg ? addToSet({}, cfg.ALLOWED_ATTR, transformCaseFunc) : DEFAULT_ALLOWED_ATTR;
      ALLOWED_NAMESPACES = "ALLOWED_NAMESPACES" in cfg ? addToSet({}, cfg.ALLOWED_NAMESPACES, stringToString) : DEFAULT_ALLOWED_NAMESPACES;
      URI_SAFE_ATTRIBUTES = "ADD_URI_SAFE_ATTR" in cfg ? addToSet(
        clone(DEFAULT_URI_SAFE_ATTRIBUTES),
        // eslint-disable-line indent
        cfg.ADD_URI_SAFE_ATTR,
        // eslint-disable-line indent
        transformCaseFunc
        // eslint-disable-line indent
      ) : DEFAULT_URI_SAFE_ATTRIBUTES;
      DATA_URI_TAGS = "ADD_DATA_URI_TAGS" in cfg ? addToSet(
        clone(DEFAULT_DATA_URI_TAGS),
        // eslint-disable-line indent
        cfg.ADD_DATA_URI_TAGS,
        // eslint-disable-line indent
        transformCaseFunc
        // eslint-disable-line indent
      ) : DEFAULT_DATA_URI_TAGS;
      FORBID_CONTENTS = "FORBID_CONTENTS" in cfg ? addToSet({}, cfg.FORBID_CONTENTS, transformCaseFunc) : DEFAULT_FORBID_CONTENTS;
      FORBID_TAGS = "FORBID_TAGS" in cfg ? addToSet({}, cfg.FORBID_TAGS, transformCaseFunc) : {};
      FORBID_ATTR = "FORBID_ATTR" in cfg ? addToSet({}, cfg.FORBID_ATTR, transformCaseFunc) : {};
      USE_PROFILES = "USE_PROFILES" in cfg ? cfg.USE_PROFILES : false;
      ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false;
      ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false;
      ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false;
      ALLOW_SELF_CLOSE_IN_ATTR = cfg.ALLOW_SELF_CLOSE_IN_ATTR !== false;
      SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false;
      SAFE_FOR_XML = cfg.SAFE_FOR_XML !== false;
      WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false;
      RETURN_DOM = cfg.RETURN_DOM || false;
      RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false;
      RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false;
      FORCE_BODY = cfg.FORCE_BODY || false;
      SANITIZE_DOM = cfg.SANITIZE_DOM !== false;
      SANITIZE_NAMED_PROPS = cfg.SANITIZE_NAMED_PROPS || false;
      KEEP_CONTENT = cfg.KEEP_CONTENT !== false;
      IN_PLACE = cfg.IN_PLACE || false;
      IS_ALLOWED_URI$1 = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI$1;
      NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;
      CUSTOM_ELEMENT_HANDLING = cfg.CUSTOM_ELEMENT_HANDLING || {};
      if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck)) {
        CUSTOM_ELEMENT_HANDLING.tagNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck;
      }
      if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)) {
        CUSTOM_ELEMENT_HANDLING.attributeNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck;
      }
      if (cfg.CUSTOM_ELEMENT_HANDLING && typeof cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements === "boolean") {
        CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements = cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements;
      }
      if (SAFE_FOR_TEMPLATES) {
        ALLOW_DATA_ATTR = false;
      }
      if (RETURN_DOM_FRAGMENT) {
        RETURN_DOM = true;
      }
      if (USE_PROFILES) {
        ALLOWED_TAGS = addToSet({}, _toConsumableArray(text));
        ALLOWED_ATTR = [];
        if (USE_PROFILES.html === true) {
          addToSet(ALLOWED_TAGS, html$1);
          addToSet(ALLOWED_ATTR, html);
        }
        if (USE_PROFILES.svg === true) {
          addToSet(ALLOWED_TAGS, svg$1);
          addToSet(ALLOWED_ATTR, svg);
          addToSet(ALLOWED_ATTR, xml);
        }
        if (USE_PROFILES.svgFilters === true) {
          addToSet(ALLOWED_TAGS, svgFilters);
          addToSet(ALLOWED_ATTR, svg);
          addToSet(ALLOWED_ATTR, xml);
        }
        if (USE_PROFILES.mathMl === true) {
          addToSet(ALLOWED_TAGS, mathMl$1);
          addToSet(ALLOWED_ATTR, mathMl);
          addToSet(ALLOWED_ATTR, xml);
        }
      }
      if (cfg.ADD_TAGS) {
        if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {
          ALLOWED_TAGS = clone(ALLOWED_TAGS);
        }
        addToSet(ALLOWED_TAGS, cfg.ADD_TAGS, transformCaseFunc);
      }
      if (cfg.ADD_ATTR) {
        if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {
          ALLOWED_ATTR = clone(ALLOWED_ATTR);
        }
        addToSet(ALLOWED_ATTR, cfg.ADD_ATTR, transformCaseFunc);
      }
      if (cfg.ADD_URI_SAFE_ATTR) {
        addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR, transformCaseFunc);
      }
      if (cfg.FORBID_CONTENTS) {
        if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) {
          FORBID_CONTENTS = clone(FORBID_CONTENTS);
        }
        addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS, transformCaseFunc);
      }
      if (KEEP_CONTENT) {
        ALLOWED_TAGS["#text"] = true;
      }
      if (WHOLE_DOCUMENT) {
        addToSet(ALLOWED_TAGS, ["html", "head", "body"]);
      }
      if (ALLOWED_TAGS.table) {
        addToSet(ALLOWED_TAGS, ["tbody"]);
        delete FORBID_TAGS.tbody;
      }
      if (freeze) {
        freeze(cfg);
      }
      CONFIG = cfg;
    }, "_parseConfig2");
    var MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, ["mi", "mo", "mn", "ms", "mtext"]);
    var HTML_INTEGRATION_POINTS = addToSet({}, ["annotation-xml"]);
    var COMMON_SVG_AND_HTML_ELEMENTS = addToSet({}, ["title", "style", "font", "a", "script"]);
    var ALL_SVG_TAGS = addToSet({}, svg$1);
    addToSet(ALL_SVG_TAGS, svgFilters);
    addToSet(ALL_SVG_TAGS, svgDisallowed);
    var ALL_MATHML_TAGS = addToSet({}, mathMl$1);
    addToSet(ALL_MATHML_TAGS, mathMlDisallowed);
    var _checkValidNamespace = /* @__PURE__ */ __name(function _checkValidNamespace2(element) {
      var parent = getParentNode(element);
      if (!parent || !parent.tagName) {
        parent = {
          namespaceURI: NAMESPACE,
          tagName: "template"
        };
      }
      var tagName = stringToLowerCase(element.tagName);
      var parentTagName = stringToLowerCase(parent.tagName);
      if (!ALLOWED_NAMESPACES[element.namespaceURI]) {
        return false;
      }
      if (element.namespaceURI === SVG_NAMESPACE) {
        if (parent.namespaceURI === HTML_NAMESPACE) {
          return tagName === "svg";
        }
        if (parent.namespaceURI === MATHML_NAMESPACE) {
          return tagName === "svg" && (parentTagName === "annotation-xml" || MATHML_TEXT_INTEGRATION_POINTS[parentTagName]);
        }
        return Boolean(ALL_SVG_TAGS[tagName]);
      }
      if (element.namespaceURI === MATHML_NAMESPACE) {
        if (parent.namespaceURI === HTML_NAMESPACE) {
          return tagName === "math";
        }
        if (parent.namespaceURI === SVG_NAMESPACE) {
          return tagName === "math" && HTML_INTEGRATION_POINTS[parentTagName];
        }
        return Boolean(ALL_MATHML_TAGS[tagName]);
      }
      if (element.namespaceURI === HTML_NAMESPACE) {
        if (parent.namespaceURI === SVG_NAMESPACE && !HTML_INTEGRATION_POINTS[parentTagName]) {
          return false;
        }
        if (parent.namespaceURI === MATHML_NAMESPACE && !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]) {
          return false;
        }
        return !ALL_MATHML_TAGS[tagName] && (COMMON_SVG_AND_HTML_ELEMENTS[tagName] || !ALL_SVG_TAGS[tagName]);
      }
      if (PARSER_MEDIA_TYPE === "application/xhtml+xml" && ALLOWED_NAMESPACES[element.namespaceURI]) {
        return true;
      }
      return false;
    }, "_checkValidNamespace2");
    var _forceRemove = /* @__PURE__ */ __name(function _forceRemove2(node) {
      arrayPush(DOMPurify.removed, {
        element: node
      });
      try {
        node.parentNode.removeChild(node);
      } catch (_2) {
        try {
          node.outerHTML = emptyHTML;
        } catch (_22) {
          node.remove();
        }
      }
    }, "_forceRemove2");
    var _removeAttribute = /* @__PURE__ */ __name(function _removeAttribute2(name, node) {
      try {
        arrayPush(DOMPurify.removed, {
          attribute: node.getAttributeNode(name),
          from: node
        });
      } catch (_2) {
        arrayPush(DOMPurify.removed, {
          attribute: null,
          from: node
        });
      }
      node.removeAttribute(name);
      if (name === "is" && !ALLOWED_ATTR[name]) {
        if (RETURN_DOM || RETURN_DOM_FRAGMENT) {
          try {
            _forceRemove(node);
          } catch (_2) {
          }
        } else {
          try {
            node.setAttribute(name, "");
          } catch (_2) {
          }
        }
      }
    }, "_removeAttribute2");
    var _initDocument = /* @__PURE__ */ __name(function _initDocument2(dirty) {
      var doc;
      var leadingWhitespace;
      if (FORCE_BODY) {
        dirty = "<remove></remove>" + dirty;
      } else {
        var matches = stringMatch(dirty, /^[\r\n\t ]+/);
        leadingWhitespace = matches && matches[0];
      }
      if (PARSER_MEDIA_TYPE === "application/xhtml+xml" && NAMESPACE === HTML_NAMESPACE) {
        dirty = '<html xmlns="http://www.w3.org/1999/xhtml"><head></head><body>' + dirty + "</body></html>";
      }
      var dirtyPayload = trustedTypesPolicy ? trustedTypesPolicy.createHTML(dirty) : dirty;
      if (NAMESPACE === HTML_NAMESPACE) {
        try {
          doc = new DOMParser().parseFromString(dirtyPayload, PARSER_MEDIA_TYPE);
        } catch (_2) {
        }
      }
      if (!doc || !doc.documentElement) {
        doc = implementation.createDocument(NAMESPACE, "template", null);
        try {
          doc.documentElement.innerHTML = IS_EMPTY_INPUT ? emptyHTML : dirtyPayload;
        } catch (_2) {
        }
      }
      var body = doc.body || doc.documentElement;
      if (dirty && leadingWhitespace) {
        body.insertBefore(document2.createTextNode(leadingWhitespace), body.childNodes[0] || null);
      }
      if (NAMESPACE === HTML_NAMESPACE) {
        return getElementsByTagName.call(doc, WHOLE_DOCUMENT ? "html" : "body")[0];
      }
      return WHOLE_DOCUMENT ? doc.documentElement : body;
    }, "_initDocument2");
    var _createIterator = /* @__PURE__ */ __name(function _createIterator2(root) {
      return createNodeIterator.call(
        root.ownerDocument || root,
        root,
        // eslint-disable-next-line no-bitwise
        NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT | NodeFilter.SHOW_PROCESSING_INSTRUCTION | NodeFilter.SHOW_CDATA_SECTION,
        null,
        false
      );
    }, "_createIterator2");
    var _isClobbered = /* @__PURE__ */ __name(function _isClobbered2(elm) {
      return elm instanceof HTMLFormElement && (typeof elm.nodeName !== "string" || typeof elm.textContent !== "string" || typeof elm.removeChild !== "function" || !(elm.attributes instanceof NamedNodeMap) || typeof elm.removeAttribute !== "function" || typeof elm.setAttribute !== "function" || typeof elm.namespaceURI !== "string" || typeof elm.insertBefore !== "function" || typeof elm.hasChildNodes !== "function");
    }, "_isClobbered2");
    var _isNode = /* @__PURE__ */ __name(function _isNode2(object) {
      return _typeof(Node2) === "object" ? object instanceof Node2 : object && _typeof(object) === "object" && typeof object.nodeType === "number" && typeof object.nodeName === "string";
    }, "_isNode2");
    var _executeHook = /* @__PURE__ */ __name(function _executeHook2(entryPoint, currentNode, data) {
      if (!hooks[entryPoint]) {
        return;
      }
      arrayForEach(hooks[entryPoint], function(hook) {
        hook.call(DOMPurify, currentNode, data, CONFIG);
      });
    }, "_executeHook2");
    var _sanitizeElements = /* @__PURE__ */ __name(function _sanitizeElements2(currentNode) {
      var content;
      _executeHook("beforeSanitizeElements", currentNode, null);
      if (_isClobbered(currentNode)) {
        _forceRemove(currentNode);
        return true;
      }
      if (regExpTest(/[\u0080-\uFFFF]/, currentNode.nodeName)) {
        _forceRemove(currentNode);
        return true;
      }
      var tagName = transformCaseFunc(currentNode.nodeName);
      _executeHook("uponSanitizeElement", currentNode, {
        tagName,
        allowedTags: ALLOWED_TAGS
      });
      if (currentNode.hasChildNodes() && !_isNode(currentNode.firstElementChild) && (!_isNode(currentNode.content) || !_isNode(currentNode.content.firstElementChild)) && regExpTest(/<[/\w]/g, currentNode.innerHTML) && regExpTest(/<[/\w]/g, currentNode.textContent)) {
        _forceRemove(currentNode);
        return true;
      }
      if (tagName === "select" && regExpTest(/<template/i, currentNode.innerHTML)) {
        _forceRemove(currentNode);
        return true;
      }
      if (currentNode.nodeType === 7) {
        _forceRemove(currentNode);
        return true;
      }
      if (SAFE_FOR_XML && currentNode.nodeType === 8 && regExpTest(/<[/\w]/g, currentNode.data)) {
        _forceRemove(currentNode);
        return true;
      }
      if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {
        if (!FORBID_TAGS[tagName] && _basicCustomElementTest(tagName)) {
          if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, tagName)) return false;
          if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(tagName)) return false;
        }
        if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {
          var parentNode = getParentNode(currentNode) || currentNode.parentNode;
          var childNodes = getChildNodes(currentNode) || currentNode.childNodes;
          if (childNodes && parentNode) {
            var childCount = childNodes.length;
            for (var i = childCount - 1; i >= 0; --i) {
              var childClone = cloneNode(childNodes[i], true);
              childClone.__removalCount = (currentNode.__removalCount || 0) + 1;
              parentNode.insertBefore(childClone, getNextSibling(currentNode));
            }
          }
        }
        _forceRemove(currentNode);
        return true;
      }
      if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {
        _forceRemove(currentNode);
        return true;
      }
      if ((tagName === "noscript" || tagName === "noembed" || tagName === "noframes") && regExpTest(/<\/no(script|embed|frames)/i, currentNode.innerHTML)) {
        _forceRemove(currentNode);
        return true;
      }
      if (SAFE_FOR_TEMPLATES && currentNode.nodeType === 3) {
        content = currentNode.textContent;
        content = stringReplace(content, MUSTACHE_EXPR$1, " ");
        content = stringReplace(content, ERB_EXPR$1, " ");
        content = stringReplace(content, TMPLIT_EXPR$1, " ");
        if (currentNode.textContent !== content) {
          arrayPush(DOMPurify.removed, {
            element: currentNode.cloneNode()
          });
          currentNode.textContent = content;
        }
      }
      _executeHook("afterSanitizeElements", currentNode, null);
      return false;
    }, "_sanitizeElements2");
    var _isValidAttribute = /* @__PURE__ */ __name(function _isValidAttribute2(lcTag, lcName, value) {
      if (SANITIZE_DOM && (lcName === "id" || lcName === "name") && (value in document2 || value in formElement)) {
        return false;
      }
      if (ALLOW_DATA_ATTR && !FORBID_ATTR[lcName] && regExpTest(DATA_ATTR$1, lcName)) ;
      else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR$1, lcName)) ;
      else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {
        if (
          // First condition does a very basic check if a) it's basically a valid custom element tagname AND
          // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck
          // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck
          _basicCustomElementTest(lcTag) && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, lcTag) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(lcTag)) && (CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.attributeNameCheck, lcName) || CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.attributeNameCheck(lcName)) || // Alternative, second condition checks if it's an `is`-attribute, AND
          // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck
          lcName === "is" && CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, value) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(value))
        ) ;
        else {
          return false;
        }
      } else if (URI_SAFE_ATTRIBUTES[lcName]) ;
      else if (regExpTest(IS_ALLOWED_URI$1, stringReplace(value, ATTR_WHITESPACE$1, ""))) ;
      else if ((lcName === "src" || lcName === "xlink:href" || lcName === "href") && lcTag !== "script" && stringIndexOf(value, "data:") === 0 && DATA_URI_TAGS[lcTag]) ;
      else if (ALLOW_UNKNOWN_PROTOCOLS && !regExpTest(IS_SCRIPT_OR_DATA$1, stringReplace(value, ATTR_WHITESPACE$1, ""))) ;
      else if (value) {
        return false;
      } else ;
      return true;
    }, "_isValidAttribute2");
    var _basicCustomElementTest = /* @__PURE__ */ __name(function _basicCustomElementTest2(tagName) {
      return tagName !== "annotation-xml" && stringMatch(tagName, CUSTOM_ELEMENT$1);
    }, "_basicCustomElementTest2");
    var _sanitizeAttributes = /* @__PURE__ */ __name(function _sanitizeAttributes2(currentNode) {
      var attr;
      var value;
      var lcName;
      var l;
      _executeHook("beforeSanitizeAttributes", currentNode, null);
      var attributes = currentNode.attributes;
      if (!attributes) {
        return;
      }
      var hookEvent = {
        attrName: "",
        attrValue: "",
        keepAttr: true,
        allowedAttributes: ALLOWED_ATTR
      };
      l = attributes.length;
      while (l--) {
        attr = attributes[l];
        var _attr = attr, name = _attr.name, namespaceURI = _attr.namespaceURI;
        value = name === "value" ? attr.value : stringTrim(attr.value);
        lcName = transformCaseFunc(name);
        hookEvent.attrName = lcName;
        hookEvent.attrValue = value;
        hookEvent.keepAttr = true;
        hookEvent.forceKeepAttr = void 0;
        _executeHook("uponSanitizeAttribute", currentNode, hookEvent);
        value = hookEvent.attrValue;
        if (hookEvent.forceKeepAttr) {
          continue;
        }
        _removeAttribute(name, currentNode);
        if (!hookEvent.keepAttr) {
          continue;
        }
        if (!ALLOW_SELF_CLOSE_IN_ATTR && regExpTest(/\/>/i, value)) {
          _removeAttribute(name, currentNode);
          continue;
        }
        if (SAFE_FOR_TEMPLATES) {
          value = stringReplace(value, MUSTACHE_EXPR$1, " ");
          value = stringReplace(value, ERB_EXPR$1, " ");
          value = stringReplace(value, TMPLIT_EXPR$1, " ");
        }
        var lcTag = transformCaseFunc(currentNode.nodeName);
        if (!_isValidAttribute(lcTag, lcName, value)) {
          continue;
        }
        if (SANITIZE_NAMED_PROPS && (lcName === "id" || lcName === "name")) {
          _removeAttribute(name, currentNode);
          value = SANITIZE_NAMED_PROPS_PREFIX + value;
        }
        if (SAFE_FOR_XML && regExpTest(/((--!?|])>)|<\/(style|title)/i, value)) {
          _removeAttribute(name, currentNode);
          continue;
        }
        if (trustedTypesPolicy && _typeof(trustedTypes) === "object" && typeof trustedTypes.getAttributeType === "function") {
          if (namespaceURI) ;
          else {
            switch (trustedTypes.getAttributeType(lcTag, lcName)) {
              case "TrustedHTML": {
                value = trustedTypesPolicy.createHTML(value);
                break;
              }
              case "TrustedScriptURL": {
                value = trustedTypesPolicy.createScriptURL(value);
                break;
              }
            }
          }
        }
        try {
          if (namespaceURI) {
            currentNode.setAttributeNS(namespaceURI, name, value);
          } else {
            currentNode.setAttribute(name, value);
          }
          if (_isClobbered(currentNode)) {
            _forceRemove(currentNode);
          } else {
            arrayPop(DOMPurify.removed);
          }
        } catch (_2) {
        }
      }
      _executeHook("afterSanitizeAttributes", currentNode, null);
    }, "_sanitizeAttributes2");
    var _sanitizeShadowDOM = /* @__PURE__ */ __name(function _sanitizeShadowDOM2(fragment) {
      var shadowNode;
      var shadowIterator = _createIterator(fragment);
      _executeHook("beforeSanitizeShadowDOM", fragment, null);
      while (shadowNode = shadowIterator.nextNode()) {
        _executeHook("uponSanitizeShadowNode", shadowNode, null);
        if (_sanitizeElements(shadowNode)) {
          continue;
        }
        if (shadowNode.content instanceof DocumentFragment) {
          _sanitizeShadowDOM2(shadowNode.content);
        }
        _sanitizeAttributes(shadowNode);
      }
      _executeHook("afterSanitizeShadowDOM", fragment, null);
    }, "_sanitizeShadowDOM2");
    DOMPurify.sanitize = function(dirty) {
      var cfg = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      var body;
      var importedNode;
      var currentNode;
      var oldNode;
      var returnNode;
      IS_EMPTY_INPUT = !dirty;
      if (IS_EMPTY_INPUT) {
        dirty = "<!-->";
      }
      if (typeof dirty !== "string" && !_isNode(dirty)) {
        if (typeof dirty.toString === "function") {
          dirty = dirty.toString();
          if (typeof dirty !== "string") {
            throw typeErrorCreate("dirty is not a string, aborting");
          }
        } else {
          throw typeErrorCreate("toString is not a function");
        }
      }
      if (!DOMPurify.isSupported) {
        if (_typeof(window2.toStaticHTML) === "object" || typeof window2.toStaticHTML === "function") {
          if (typeof dirty === "string") {
            return window2.toStaticHTML(dirty);
          }
          if (_isNode(dirty)) {
            return window2.toStaticHTML(dirty.outerHTML);
          }
        }
        return dirty;
      }
      if (!SET_CONFIG) {
        _parseConfig(cfg);
      }
      DOMPurify.removed = [];
      if (typeof dirty === "string") {
        IN_PLACE = false;
      }
      if (IN_PLACE) {
        if (dirty.nodeName) {
          var tagName = transformCaseFunc(dirty.nodeName);
          if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {
            throw typeErrorCreate("root node is forbidden and cannot be sanitized in-place");
          }
        }
      } else if (dirty instanceof Node2) {
        body = _initDocument("<!---->");
        importedNode = body.ownerDocument.importNode(dirty, true);
        if (importedNode.nodeType === 1 && importedNode.nodeName === "BODY") {
          body = importedNode;
        } else if (importedNode.nodeName === "HTML") {
          body = importedNode;
        } else {
          body.appendChild(importedNode);
        }
      } else {
        if (!RETURN_DOM && !SAFE_FOR_TEMPLATES && !WHOLE_DOCUMENT && // eslint-disable-next-line unicorn/prefer-includes
        dirty.indexOf("<") === -1) {
          return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(dirty) : dirty;
        }
        body = _initDocument(dirty);
        if (!body) {
          return RETURN_DOM ? null : RETURN_TRUSTED_TYPE ? emptyHTML : "";
        }
      }
      if (body && FORCE_BODY) {
        _forceRemove(body.firstChild);
      }
      var nodeIterator = _createIterator(IN_PLACE ? dirty : body);
      while (currentNode = nodeIterator.nextNode()) {
        if (currentNode.nodeType === 3 && currentNode === oldNode) {
          continue;
        }
        if (_sanitizeElements(currentNode)) {
          continue;
        }
        if (currentNode.content instanceof DocumentFragment) {
          _sanitizeShadowDOM(currentNode.content);
        }
        _sanitizeAttributes(currentNode);
        oldNode = currentNode;
      }
      oldNode = null;
      if (IN_PLACE) {
        return dirty;
      }
      if (RETURN_DOM) {
        if (RETURN_DOM_FRAGMENT) {
          returnNode = createDocumentFragment.call(body.ownerDocument);
          while (body.firstChild) {
            returnNode.appendChild(body.firstChild);
          }
        } else {
          returnNode = body;
        }
        if (ALLOWED_ATTR.shadowroot || ALLOWED_ATTR.shadowrootmod) {
          returnNode = importNode.call(originalDocument, returnNode, true);
        }
        return returnNode;
      }
      var serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;
      if (WHOLE_DOCUMENT && ALLOWED_TAGS["!doctype"] && body.ownerDocument && body.ownerDocument.doctype && body.ownerDocument.doctype.name && regExpTest(DOCTYPE_NAME, body.ownerDocument.doctype.name)) {
        serializedHTML = "<!DOCTYPE " + body.ownerDocument.doctype.name + ">\n" + serializedHTML;
      }
      if (SAFE_FOR_TEMPLATES) {
        serializedHTML = stringReplace(serializedHTML, MUSTACHE_EXPR$1, " ");
        serializedHTML = stringReplace(serializedHTML, ERB_EXPR$1, " ");
        serializedHTML = stringReplace(serializedHTML, TMPLIT_EXPR$1, " ");
      }
      return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(serializedHTML) : serializedHTML;
    };
    DOMPurify.setConfig = function(cfg) {
      _parseConfig(cfg);
      SET_CONFIG = true;
    };
    DOMPurify.clearConfig = function() {
      CONFIG = null;
      SET_CONFIG = false;
    };
    DOMPurify.isValidAttribute = function(tag, attr, value) {
      if (!CONFIG) {
        _parseConfig({});
      }
      var lcTag = transformCaseFunc(tag);
      var lcName = transformCaseFunc(attr);
      return _isValidAttribute(lcTag, lcName, value);
    };
    DOMPurify.addHook = function(entryPoint, hookFunction) {
      if (typeof hookFunction !== "function") {
        return;
      }
      hooks[entryPoint] = hooks[entryPoint] || [];
      arrayPush(hooks[entryPoint], hookFunction);
    };
    DOMPurify.removeHook = function(entryPoint) {
      if (hooks[entryPoint]) {
        return arrayPop(hooks[entryPoint]);
      }
    };
    DOMPurify.removeHooks = function(entryPoint) {
      if (hooks[entryPoint]) {
        hooks[entryPoint] = [];
      }
    };
    DOMPurify.removeAllHooks = function() {
      hooks = {};
    };
    return DOMPurify;
  }
  __name(createDOMPurify, "createDOMPurify");
  createDOMPurify();
  function* idGenerator(key = "id-", startIndex = 0) {
    let i = startIndex;
    while (true) {
      i += 1;
      yield key + i;
    }
  }
  __name(idGenerator, "idGenerator");
  function getCurrentScriptPath() {
    const match = (
      // @ts-ignore
      (document.currentScript && document.currentScript.src || "").match(/(.*\/)/)
    );
    return match && match.length > 0 ? match[0].substr(0, match[0].length - 1) : "/";
  }
  __name(getCurrentScriptPath, "getCurrentScriptPath");
  PropTypes.shape({
    event: PropTypes.string,
    action: PropTypes.string,
    name: PropTypes.string,
    region: PropTypes.string,
    section: PropTypes.string,
    component: PropTypes.string,
    type: PropTypes.string,
    text: PropTypes.string
  });
  const trackGAEvent = /* @__PURE__ */ __name(({
    event = "",
    action = "",
    name = "",
    type = "",
    section = "",
    text: text2 = "",
    region = "",
    component = ""
  }) => {
    const { dataLayer } = window;
    const e = {
      event: event.toLowerCase(),
      action: action.toLowerCase(),
      name: name.toLowerCase(),
      type: type.toLowerCase(),
      region: region.toLowerCase(),
      section: section.toLowerCase(),
      text: text2.toLowerCase(),
      component: component.toLowerCase()
    };
    if (dataLayer) dataLayer.push(e);
  }, "trackGAEvent");
  const FOOTER_URLS = {
    MAPS_AND_LOCATIONS: "https://www.asu.edu/about/locations-maps",
    JOBS: "https://cfo.asu.edu/applicant",
    DIRECTORY: "https://search.asu.edu/?search-tabs=web_dir_faculty_staff",
    CONTACT_ASU: "https://www.asu.edu/about/contact",
    MY_ASU: "https://my.asu.edu/",
    RANKINGS: "https://www.asu.edu/rankings"
  };
  const LEGAL_URLS = {
    COPYRIGHT_AND_TRADEMARK: "https://www.asu.edu/about/copyright-trademark",
    ACCESSIBILITY_REPORT: "https://accessibility.asu.edu/report",
    PRIVACY: "https://www.asu.edu/about/privacy",
    TERMS_OF_USE: "https://www.asu.edu/about/terms-of-use",
    EMERGENCY: "https://www.asu.edu/emergency/"
  };
  const DEFAULT_GA_EVENT$3 = {
    type: "internal link",
    section: "secondary footer"
  };
  const currentScriptPath$3 = getCurrentScriptPath();
  const innovationLogo = `${currentScriptPath$3}assets/images/innovationLogo.png`;
  const Innovation = /* @__PURE__ */ __name(() => {
    return /* @__PURE__ */ jsxRuntimeExports.jsx(
      "div",
      {
        className: "wrapper",
        id: "wrapper-footer-innovation",
        "data-testid": "innovation",
        children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "container", id: "footer-innovation", children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "row", children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "col", children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "d-flex footer-innovation-links", children: [
          /* @__PURE__ */ jsxRuntimeExports.jsxs("nav", { className: "nav", "aria-label": "University Services", children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx(
              "a",
              {
                className: "nav-link",
                href: FOOTER_URLS.MAPS_AND_LOCATIONS,
                onFocus: /* @__PURE__ */ __name(() => trackGAEvent({
                  ...DEFAULT_GA_EVENT$3,
                  text: "maps and locations"
                }), "onFocus"),
                children: "Maps and Locations"
              }
            ),
            /* @__PURE__ */ jsxRuntimeExports.jsx(
              "a",
              {
                className: "nav-link",
                href: FOOTER_URLS.JOBS,
                onFocus: /* @__PURE__ */ __name(() => trackGAEvent({
                  ...DEFAULT_GA_EVENT$3,
                  text: "jobs"
                }), "onFocus"),
                children: "Jobs"
              }
            ),
            /* @__PURE__ */ jsxRuntimeExports.jsx(
              "a",
              {
                className: "nav-link",
                href: FOOTER_URLS.DIRECTORY,
                onFocus: /* @__PURE__ */ __name(() => trackGAEvent({
                  ...DEFAULT_GA_EVENT$3,
                  text: "directory"
                }), "onFocus"),
                children: "Directory"
              }
            ),
            /* @__PURE__ */ jsxRuntimeExports.jsx(
              "a",
              {
                className: "nav-link",
                href: FOOTER_URLS.CONTACT_ASU,
                onFocus: /* @__PURE__ */ __name(() => trackGAEvent({
                  ...DEFAULT_GA_EVENT$3,
                  text: "contact asu"
                }), "onFocus"),
                children: "Contact ASU"
              }
            ),
            /* @__PURE__ */ jsxRuntimeExports.jsx(
              "a",
              {
                className: "nav-link",
                href: FOOTER_URLS.MY_ASU,
                onFocus: /* @__PURE__ */ __name(() => trackGAEvent({
                  ...DEFAULT_GA_EVENT$3,
                  text: "my asu"
                }), "onFocus"),
                children: "My ASU"
              }
            )
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsx(
            "a",
            {
              className: "img-link",
              href: FOOTER_URLS.RANKINGS,
              onFocus: /* @__PURE__ */ __name(() => trackGAEvent({
                ...DEFAULT_GA_EVENT$3,
                text: "#1 in the u.s. for innovation"
              }), "onFocus"),
              children: /* @__PURE__ */ jsxRuntimeExports.jsx(
                "img",
                {
                  src: innovationLogo,
                  alt: "Repeatedly ranked #1 in innovation (ASU ahead of MIT and Stanford), sustainability (ASU ahead of Stanford and UC Berkeley), and global impact (ASU ahead of MIT and Penn State)",
                  width: "459",
                  height: "100",
                  loading: "lazy",
                  decoding: "async"
                }
              )
            }
          )
        ] }) }) }) })
      }
    );
  }, "Innovation");
  const DEFAULT_GA_EVENT$2 = {
    type: "internal link",
    section: "tertiary footer"
  };
  const Legal = /* @__PURE__ */ __name(() => {
    function getURL() {
      try {
        const URL = window.location.href;
        return URL;
      } catch (error) {
        console.error(error);
        return "";
      }
    }
    __name(getURL, "getURL");
    return /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "wrapper", id: "wrapper-footer-colophon", "data-testid": "legal", children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "container", id: "footer-colophon", children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "row", children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "col", children: /* @__PURE__ */ jsxRuntimeExports.jsxs(
      "nav",
      {
        className: "nav colophon",
        "aria-label": "University Legal and Compliance",
        children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx(
            "a",
            {
              className: "nav-link",
              href: LEGAL_URLS.COPYRIGHT_AND_TRADEMARK,
              onFocus: /* @__PURE__ */ __name(() => trackGAEvent({
                ...DEFAULT_GA_EVENT$2,
                text: "copyright and trademark"
              }), "onFocus"),
              children: "Copyright and Trademark"
            }
          ),
          /* @__PURE__ */ jsxRuntimeExports.jsx(
            "a",
            {
              className: "nav-link",
              href: `${LEGAL_URLS.ACCESSIBILITY_REPORT}?a11yref=${getURL()}`,
              onFocus: /* @__PURE__ */ __name(() => trackGAEvent({
                ...DEFAULT_GA_EVENT$2,
                text: "accessibility"
              }), "onFocus"),
              children: "Accessibility"
            }
          ),
          /* @__PURE__ */ jsxRuntimeExports.jsx(
            "a",
            {
              className: "nav-link",
              href: LEGAL_URLS.PRIVACY,
              onFocus: /* @__PURE__ */ __name(() => trackGAEvent({
                ...DEFAULT_GA_EVENT$2,
                text: "privacy"
              }), "onFocus"),
              children: "Privacy"
            }
          ),
          /* @__PURE__ */ jsxRuntimeExports.jsx(
            "a",
            {
              className: "nav-link",
              href: LEGAL_URLS.TERMS_OF_USE,
              onFocus: /* @__PURE__ */ __name(() => trackGAEvent({
                ...DEFAULT_GA_EVENT$2,
                text: "terms of use"
              }), "onFocus"),
              children: "Terms of Use"
            }
          ),
          /* @__PURE__ */ jsxRuntimeExports.jsx(
            "a",
            {
              className: "nav-link",
              href: LEGAL_URLS.EMERGENCY,
              onFocus: /* @__PURE__ */ __name(() => trackGAEvent({
                ...DEFAULT_GA_EVENT$2,
                text: "emergency"
              }), "onFocus"),
              children: "Emergency"
            }
          )
        ]
      }
    ) }) }) }) });
  }, "Legal");
  const faSquareInstagram = {
    prefix: "fab",
    iconName: "square-instagram",
    icon: [448, 512, ["instagram-square"], "e055", "M194.4 211.7a53.3 53.3 0 1 0 59.3 88.7 53.3 53.3 0 1 0 -59.3-88.7zm142.3-68.4c-5.2-5.2-11.5-9.3-18.4-12c-18.1-7.1-57.6-6.8-83.1-6.5c-4.1 0-7.9 .1-11.2 .1c-3.3 0-7.2 0-11.4-.1c-25.5-.3-64.8-.7-82.9 6.5c-6.9 2.7-13.1 6.8-18.4 12s-9.3 11.5-12 18.4c-7.1 18.1-6.7 57.7-6.5 83.2c0 4.1 .1 7.9 .1 11.1s0 7-.1 11.1c-.2 25.5-.6 65.1 6.5 83.2c2.7 6.9 6.8 13.1 12 18.4s11.5 9.3 18.4 12c18.1 7.1 57.6 6.8 83.1 6.5c4.1 0 7.9-.1 11.2-.1c3.3 0 7.2 0 11.4 .1c25.5 .3 64.8 .7 82.9-6.5c6.9-2.7 13.1-6.8 18.4-12s9.3-11.5 12-18.4c7.2-18 6.8-57.4 6.5-83c0-4.2-.1-8.1-.1-11.4s0-7.1 .1-11.4c.3-25.5 .7-64.9-6.5-83l0 0c-2.7-6.9-6.8-13.1-12-18.4zm-67.1 44.5A82 82 0 1 1 178.4 324.2a82 82 0 1 1 91.1-136.4zm29.2-1.3c-3.1-2.1-5.6-5.1-7.1-8.6s-1.8-7.3-1.1-11.1s2.6-7.1 5.2-9.8s6.1-4.5 9.8-5.2s7.6-.4 11.1 1.1s6.5 3.9 8.6 7s3.2 6.8 3.2 10.6c0 2.5-.5 5-1.4 7.3s-2.4 4.4-4.1 6.2s-3.9 3.2-6.2 4.2s-4.8 1.5-7.3 1.5l0 0c-3.8 0-7.5-1.1-10.6-3.2zM448 96c0-35.3-28.7-64-64-64H64C28.7 32 0 60.7 0 96V416c0 35.3 28.7 64 64 64H384c35.3 0 64-28.7 64-64V96zM357 389c-18.7 18.7-41.4 24.6-67 25.9c-26.4 1.5-105.6 1.5-132 0c-25.6-1.3-48.3-7.2-67-25.9s-24.6-41.4-25.8-67c-1.5-26.4-1.5-105.6 0-132c1.3-25.6 7.1-48.3 25.8-67s41.5-24.6 67-25.8c26.4-1.5 105.6-1.5 132 0c25.6 1.3 48.3 7.1 67 25.8s24.6 41.4 25.8 67c1.5 26.3 1.5 105.4 0 131.9c-1.3 25.6-7.1 48.3-25.8 67z"]
  };
  const faInstagramSquare = faSquareInstagram;
  const faSquareYoutube = {
    prefix: "fab",
    iconName: "square-youtube",
    icon: [448, 512, [61798, "youtube-square"], "f431", "M282 256.2l-95.2-54.1V310.3L282 256.2zM384 32H64C28.7 32 0 60.7 0 96V416c0 35.3 28.7 64 64 64H384c35.3 0 64-28.7 64-64V96c0-35.3-28.7-64-64-64zm14.4 136.1c7.6 28.6 7.6 88.2 7.6 88.2s0 59.6-7.6 88.1c-4.2 15.8-16.5 27.7-32.2 31.9C337.9 384 224 384 224 384s-113.9 0-142.2-7.6c-15.7-4.2-28-16.1-32.2-31.9C42 315.9 42 256.3 42 256.3s0-59.7 7.6-88.2c4.2-15.8 16.5-28.2 32.2-32.4C110.1 128 224 128 224 128s113.9 0 142.2 7.7c15.7 4.2 28 16.6 32.2 32.4z"]
  };
  const faYoutubeSquare = faSquareYoutube;
  const faSquareFacebook = {
    prefix: "fab",
    iconName: "square-facebook",
    icon: [448, 512, ["facebook-square"], "f082", "M64 32C28.7 32 0 60.7 0 96V416c0 35.3 28.7 64 64 64h98.2V334.2H109.4V256h52.8V222.3c0-87.1 39.4-127.5 125-127.5c16.2 0 44.2 3.2 55.7 6.4V172c-6-.6-16.5-1-29.6-1c-42 0-58.2 15.9-58.2 57.2V256h83.6l-14.4 78.2H255V480H384c35.3 0 64-28.7 64-64V96c0-35.3-28.7-64-64-64H64z"]
  };
  const faFacebookSquare = faSquareFacebook;
  const faLinkedin = {
    prefix: "fab",
    iconName: "linkedin",
    icon: [448, 512, [], "f08c", "M416 32H31.9C14.3 32 0 46.5 0 64.3v383.4C0 465.5 14.3 480 31.9 480H416c17.6 0 32-14.5 32-32.3V64.3c0-17.8-14.4-32.3-32-32.3zM135.4 416H69V202.2h66.5V416zm-33.2-243c-21.3 0-38.5-17.3-38.5-38.5S80.9 96 102.2 96c21.2 0 38.5 17.3 38.5 38.5 0 21.3-17.2 38.5-38.5 38.5zm282.1 243h-66.4V312c0-24.8-.5-56.7-34.5-56.7-34.6 0-39.9 27-39.9 54.9V416h-66.4V202.2h63.7v29.2h.9c8.9-16.8 30.6-34.5 62.9-34.5 67.2 0 79.7 44.3 79.7 101.9V416z"]
  };
  const faSquareXTwitter = {
    prefix: "fab",
    iconName: "square-x-twitter",
    icon: [448, 512, [], "e61a", "M64 32C28.7 32 0 60.7 0 96V416c0 35.3 28.7 64 64 64H384c35.3 0 64-28.7 64-64V96c0-35.3-28.7-64-64-64H64zm297.1 84L257.3 234.6 379.4 396H283.8L209 298.1 123.3 396H75.8l111-126.9L69.7 116h98l67.7 89.5L313.6 116h47.5zM323.3 367.6L153.4 142.9H125.1L296.9 367.6h26.3z"]
  };
  const currentScriptPath$2 = getCurrentScriptPath();
  const endorsedLogo = `${currentScriptPath$2}assets/images/endorsedLogo.png`;
  const DEFAULT_GA_EVENT$1 = {
    type: "external link",
    section: "primary footer"
  };
  const Social = /* @__PURE__ */ __name(({ social: { logoUrl, unitLogo, mediaLinks } }) => {
    return /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "wrapper", id: "wrapper-endorsed-footer", "data-testid": "social", children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "container", id: "endorsed-footer", children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "row", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "col-md", id: "endorsed-logo", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
        "a",
        {
          href: logoUrl,
          onFocus: /* @__PURE__ */ __name(() => trackGAEvent({
            ...DEFAULT_GA_EVENT$1,
            type: "internal link",
            text: "asu logo"
          }), "onFocus"),
          children: /* @__PURE__ */ jsxRuntimeExports.jsx(
            "img",
            {
              src: unitLogo,
              alt: "ASU University Technology Office Arizona State University."
            }
          )
        }
      ) }),
      mediaLinks && /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "col-md", id: "social-media", children: /* @__PURE__ */ jsxRuntimeExports.jsxs("nav", { className: "nav", "aria-label": "Social Media", children: [
        mediaLinks.facebook && /* @__PURE__ */ jsxRuntimeExports.jsx(
          "a",
          {
            className: "nav-link",
            href: mediaLinks.facebook,
            "data-testid": "facebook",
            onFocus: /* @__PURE__ */ __name(() => trackGAEvent({
              ...DEFAULT_GA_EVENT$1,
              text: "facebook icon"
            }), "onFocus"),
            children: /* @__PURE__ */ jsxRuntimeExports.jsx(
              FontAwesomeIcon,
              {
                title: "Facebook Social Media Icon",
                icon: faFacebookSquare
              }
            )
          }
        ),
        mediaLinks.twitter && /* @__PURE__ */ jsxRuntimeExports.jsx(
          "a",
          {
            className: "nav-link",
            href: mediaLinks.twitter,
            "data-testid": "twitter",
            onFocus: /* @__PURE__ */ __name(() => trackGAEvent({
              ...DEFAULT_GA_EVENT$1,
              text: "twitter icon"
            }), "onFocus"),
            children: /* @__PURE__ */ jsxRuntimeExports.jsx(
              FontAwesomeIcon,
              {
                title: "Twitter Social Media Icon",
                icon: faSquareXTwitter
              }
            )
          }
        ),
        mediaLinks.instagram && /* @__PURE__ */ jsxRuntimeExports.jsx(
          "a",
          {
            className: "nav-link",
            href: mediaLinks.instagram,
            "data-testid": "instagram",
            onFocus: /* @__PURE__ */ __name(() => trackGAEvent({
              ...DEFAULT_GA_EVENT$1,
              text: "instagram icon"
            }), "onFocus"),
            children: /* @__PURE__ */ jsxRuntimeExports.jsx(
              FontAwesomeIcon,
              {
                title: "Instagram Social Media Icon",
                icon: faInstagramSquare
              }
            )
          }
        ),
        mediaLinks.youtube && /* @__PURE__ */ jsxRuntimeExports.jsx(
          "a",
          {
            className: "nav-link",
            href: mediaLinks.youtube,
            "data-testid": "youtube",
            onFocus: /* @__PURE__ */ __name(() => trackGAEvent({
              ...DEFAULT_GA_EVENT$1,
              text: "youtube icon"
            }), "onFocus"),
            children: /* @__PURE__ */ jsxRuntimeExports.jsx(
              FontAwesomeIcon,
              {
                title: "YouTube Social Media Icon",
                icon: faYoutubeSquare
              }
            )
          }
        ),
        mediaLinks.linkedIn && /* @__PURE__ */ jsxRuntimeExports.jsx(
          "a",
          {
            className: "nav-link",
            href: mediaLinks.linkedIn,
            "data-testid": "linkedin",
            onFocus: /* @__PURE__ */ __name(() => trackGAEvent({
              ...DEFAULT_GA_EVENT$1,
              text: "linkedin icon"
            }), "onFocus"),
            children: /* @__PURE__ */ jsxRuntimeExports.jsx(
              FontAwesomeIcon,
              {
                title: "LinkedIn Social Media Icon",
                icon: faLinkedin
              }
            )
          }
        )
      ] }) })
    ] }) }) });
  }, "Social");
  Social.propTypes = {
    social: propTypesExports.shape({
      unitLogo: PropTypes.string.isRequired,
      mediaLinks: propTypesExports.shape({
        facebook: PropTypes.string,
        twitter: PropTypes.string,
        linkedIn: PropTypes.string,
        instagram: PropTypes.string,
        youtube: PropTypes.string
      })
    })
  };
  Social.defaultProps = {
    social: {
      unitLogo: endorsedLogo,
      mediaLinks: {
        facebook: "",
        twitter: "",
        linkedIn: "",
        instagram: "",
        youtube: ""
      }
    }
  };
  const resetList = Ae`
  padding-left: 0;
  margin-bottom: 0;
  list-style: none;
`;
  const flexCenter = Ae`
  display: flex;
  align-items: center;
`;
  const StyledFooter = qe.footer`
  // Variables
  --color-divider-darker: #1e1e1e;
  --color-base-white: #ffffff;
  --color-base-grey-2: #e8e8e8;
  --color-base-gold: #ffc627;
  --color-divider-lighter: #393939;
  --color-base-grey-7: #191919;
  --color-base-grey-4: #bfbfbf;

  // Base Styles
  * {
    box-sizing: border-box;
    font-family: Arial, Helvetica, "Nimbus Sans L", "Liberation Sans", FreeSans,
      sans-serif;
    line-height: 1.5rem;
  }

  .btn,
  a[class^="button-"] {
    text-decoration: none !important;
    padding: 1rem 2rem;
    white-space: nowrap;
    line-height: 1rem;
    width: max-content !important;
    font-size: 1rem;
    display: inline-block;
    &:active {
      transform: scale(0.95);
    }
  }

  h5,
  .h5 {
    font-size: 1rem;
    line-height: 1.5rem;
    letter-spacing: -0.015rem;
    margin: 1rem 0;
  }

  .nav {
    display: flex;
    flex-wrap: wrap;
    ${resetList}
  }

  // Footer Sections
  #wrapper-endorsed-footer,
  #wrapper-footer-columns {
    background: var(--color-divider-darker);

    h5,
    .h5 {
      color: var(--color-base-white);
      font-weight: 700;
    }
  }

  #wrapper-endorsed-footer {
    a {
      color: var(--color-base-grey-2);
    }

    & + #wrapper-footer-columns {
      border-top: 2px solid var(--color-divider-lighter);
    }
  }

  #wrapper-footer-innovation {
    background-color: var(--color-base-gold);
  }

  #wrapper-footer-colophon {
    background-color: var(--color-base-grey-2);
  }

  #wrapper-footer-innovation,
  #wrapper-footer-colophon {
    a {
      margin-right: 1.5rem;
      text-decoration: none;
      color: var(--color-base-grey-7);
    }
  }

  // Endorsed Footer
  #endorsed-logo {
    --endorsed-logo-display: block;
    --endorsed-logo-padding-top: 12px;
    --endorsed-logo-padding-bottom: 12px;
    --endorsed-logo-img-max-height: 100%;
    --endorsed-logo-img-width: 100%;
    padding-top: var(--endorsed-logo-padding-top);
    padding-bottom: var(--endorsed-logo-padding-bottom);
    display: var(--endorsed-logo-display);
    align-items: center;

    img {
      width: var(--endorsed-logo-img-width);
      height: auto;
      max-height: var(--endorsed-logo-img-max-height);
      transform: scale(1.13);
      padding: 0;
      margin: 0;
    }

    @media (min-width: 768px) {
      --endorsed-logo-display: flex;
      --endorsed-logo-padding-top: 20px;
      --endorsed-logo-padding-bottom: 20px;
      --endorsed-logo-img-max-height: 6rem;
      --endorsed-logo-img-width: auto;
    }
  }

  #endorsed-footer {
    #social-media {
      .nav {
        padding-bottom: 1.5rem;

        @media (min-width: 768px) {
          padding: 2.5rem 0;
          justify-content: flex-end;
        }
      }

      .nav-link {
        padding: 0.75rem 1rem 0.5rem 1rem;
        font-size: 2rem;
        color: var(--color-base-grey-4);
        line-height: 1;
        padding-top: 7px;

        &:first-child {
          @media (max-width: 575.98px) {
            padding-left: 0;
          }
        }

        &:last-child {
          @media (min-width: 768px) {
            padding-right: 0;
          }
        }
      }
    }
  }

  // Footer Columns
  #footer-columns {
    #info-column {
      .contact-link {
        margin-bottom: 1.5rem;

        a {
          color: var(--color-base-grey-2);
          line-height: 1.5rem;
          text-decoration: underline;

          &:hover {
            color: var(--color-base-gold);
          }
        }
      }

      .contribute-button {
        margin-bottom: 1.5rem;
      }
    }

    .flex-footer {
      .accordion-item,
      .accordion-header,
      .accordion-body {
        background: var(--color-divider-darker);
        color: var(--color-base-white);
        border: 0;
      }

      .accordion-header {
        border-top: 1px solid var(--color-divider-lighter);
        padding-left: 0;

        h5,
        .h5 {
          margin: 0;
          a,
          .accordion-button {
            ${flexCenter}
            justify-content: space-between;
          }
        }

        a,
        .accordion-button {
          color: var(--color-base-grey-2);
          padding: 1.5rem 0;
          text-decoration: none;
          background: none;
          border: none;
          font: inherit;
          color: inherit;
          cursor: pointer;
          text-align: inherit;
          width: 100%;

          &:hover {
            background: var(--color-divider-darker);
          }

          svg,
          fa-chevron-up {
            margin-left: 1rem;
            transition: 0.5s cubic-bezier(0.19, 1, 0.19, 1);
            margin-left: 0.5rem;
            font-size: 0.75rem;

            &.open {
              transform: rotate(180deg);
            }
          }
        }

        @media (min-width: 1260px) {
          border-top: 0;
          padding: 0;
          a,
          .accordion-button {
            padding: 0;
            cursor: default;
          }

          span {
            display: none;
          }
        }
      }

      .accordion-body {
        display: none;
        overflow: hidden;
        padding: 0 0 0 1.5rem;

        &.collapsing {
          display: block;
          max-height: 0px;
        }
        &.show {
          display: block;
          max-height: 1000px;
        }

        .nav-link {
          color: var(--color-base-grey-2);
          padding: 0 0 1rem;
          line-height: 1.5rem;
          text-decoration: none;
          display: block;

          &:hover,
          &:focus {
            color: var(--color-base-gold);
            text-decoration: underline;
          }
        }

        @media (min-width: 1260px) {
          padding: 0;
          display: block;
          min-height: fit-content;
        }
      }
    }

    @media (min-width: 1260px) {
      padding-bottom: 3rem;
      padding-top: 3rem;
      h5,
      .h5 {
        margin: 0 0 1.5rem 0;
      }
      .accordion-header:has(.h5, h5) {
        h5,
        .h5 {
          margin: 0 0 1.5rem 0;
        }
      }
    }
  }

  // Footer Innovation
  #footer-innovation {
    .footer-innovation-links {
      justify-content: space-between;
      align-items: center;
      font-weight: 700;

      .img-link {
        order: 2;
        margin-right: 0;
        transform: translate(1.5rem, 0);

        img {
          height: 100px;
          width: auto;
        }
      }

      .nav-link {
        padding: 0;
      }

      @media (max-width: 991.98px) {
        flex-direction: column;
        padding: 0.5rem 0;

        .img-link {
          margin-right: 0;
          transform: none;

          img {
            width: 100%;
            height: auto;
            order: -1;
          }
        }

        .nav {
          display: grid;
          grid-template-rows: 1fr 1fr 1fr;
          grid-auto-flow: column;
          justify-items: start;
          width: 100%;

          .nav-link {
            margin-right: 0;
            padding: 0.5rem 0;

            &:nth-child(n + 4) {
              justify-self: end;
            }
          }
        }
      }
    }
  }

  // Footer Colophon
  #wrapper-footer-colophon {
    .colophon {
      margin: 1rem 0;
    }

    .nav-link {
      padding: 0;
    }

    @media (max-width: 767.98px) {
      .nav {
        display: grid;
        grid-template-rows: 1fr 1fr 1fr;
        grid-auto-flow: column;
        justify-items: start;
        width: 100%;

        .nav-link {
          margin-right: 0;
          padding: 0.5rem 0;

          &:nth-child(n + 4) {
            justify-self: end;
          }
        }
      }
    }
  }

  // Bootstrap Default Stylings
  .row {
    --bs-gutter-x: 24px;
    --bs-gutter-y: 0;
    display: flex;
    flex-wrap: wrap;
    margin-top: calc(-1 * var(--bs-gutter-y));
    margin-right: calc(-0.5 * var(--bs-gutter-x));
    margin-left: calc(-0.5 * var(--bs-gutter-x));

    > * {
      flex-shrink: 0;
      width: 100%;
      max-width: 100%;
      padding-right: calc(var(--bs-gutter-x) * 0.5);
      padding-left: calc(var(--bs-gutter-x) * 0.5);
      margin-top: var(--bs-gutter-y);
    }
  }

  .col {
    flex: 1 0 0%;
  }

  .d-flex {
    display: flex;
  }

  .container {
    --bs-gutter-x: 24px;
    --bs-gutter-y: 0;
    width: 100%;
    padding-right: calc(var(--bs-gutter-x) * 0.5);
    padding-left: calc(var(--bs-gutter-x) * 0.5);
    margin-right: auto;
    margin-left: auto;
  }

  @media (max-width: 767.98px) {
    .container,
    .container-fluid,
    .container-xl,
    .container-lg,
    .container-md,
    .container-sm {
      padding-left: 2rem;
      padding-right: 2rem;
    }
  }

  @media (min-width: 576px) {
    .container {
      max-width: 540px;
    }
  }

  @media (min-width: 768px) {
    .container-xl,
    .container-lg,
    .container-md,
    .container-sm,
    .container {
      max-width: 768px;
    }
    .col-md {
      flex: 1 0 0%;
    }
  }

  @media (min-width: 992px) {
    .container-xl,
    .container-lg,
    .container-md,
    .container-sm,
    .container {
      max-width: 992px;
    }
  }

  @media (min-width: 1260px) {
    .col-xl-3 {
      flex: 0 0 auto;
      width: 25%;
    }
    .col-xl {
      flex: 1 0 0%;
    }
    .accordion-item {
      svg,
      .fa-chevron-up {
        display: none;
      }
    }
    .container-xl,
    .container-lg,
    .container-md,
    .container-sm,
    .container {
      max-width: 1224px;
    }
  }
`;
  const Base = /* @__PURE__ */ __name(() => {
    return /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(Innovation, {}),
      /* @__PURE__ */ jsxRuntimeExports.jsx(Legal, {})
    ] });
  }, "Base");
  const ASUFooter = /* @__PURE__ */ __name(({ social, contact }) => {
    r$1.useEffect(() => {
      if (typeof window !== "undefined") {
        trackReactComponent({
          packageName: "component-StyledFooter",
          component: "Component Footer",
          type: "NA",
          configuration: {
            social,
            contact
          }
        });
      }
    }, []);
    return /* @__PURE__ */ jsxRuntimeExports.jsxs(StyledFooter, { role: "contentinfo", children: [
      social && /* @__PURE__ */ jsxRuntimeExports.jsx(Social, { social }),
      contact && /* @__PURE__ */ jsxRuntimeExports.jsx(ContactComponent, { contact }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(Base, {})
    ] });
  }, "ASUFooter");
  ASUFooter.propTypes = {
    social: propTypesExports.shape(Social.propTypes),
    contact: propTypesExports.shape(ContactComponent.propTypes)
  };
  const RenderReact$1 = /* @__PURE__ */ __name((component, props, target) => {
    const root = createRoot(target);
    root.render(r$1.createElement(component, props));
  }, "RenderReact$1");
  const initASUFooter = /* @__PURE__ */ __name(({ targetSelector, props }) => {
    RenderReact$1(ASUFooter, props, document.querySelector(targetSelector));
  }, "initASUFooter");
  const breakpoints$1 = { Lg: "992px", Xl: "1260px" };
  const AppContext = r$1.createContext();
  const AppContextProvider = /* @__PURE__ */ __name(({ initialValue, children }) => {
    const value = {
      ...initialValue,
      breakpoint: breakpoints$1[initialValue.breakpoint]
    };
    return /* @__PURE__ */ jsxRuntimeExports.jsx(AppContext.Provider, { value, children });
  }, "AppContextProvider");
  AppContextProvider.propTypes = {
    initialValue: PropTypes.shape(HeaderPropTypes).isRequired,
    children: PropTypes.node.isRequired
  };
  const useAppContext = /* @__PURE__ */ __name(() => {
    const context = r$1.useContext(AppContext);
    if (context === void 0) {
      throw new Error("useAppContext must be used within a AppContextProvider");
    }
    return context;
  }, "useAppContext");
  const useIsMobile = /* @__PURE__ */ __name((breakpoint) => {
    const isMobileQuery = window == null ? void 0 : window.matchMedia(`(max-width: ${breakpoint})`);
    const [isMobile, setIsMobile] = r$1.useState(isMobileQuery == null ? void 0 : isMobileQuery.matches);
    const setMobile = /* @__PURE__ */ __name((e) => {
      setIsMobile(e.matches);
    }, "setMobile");
    r$1.useEffect(() => {
      isMobileQuery.addEventListener("change", setMobile);
      return () => isMobileQuery.removeEventListener("change", setMobile);
    }, []);
    return isMobile;
  }, "useIsMobile");
  const Wrapper$1 = qe.div`
  background-color: #e8e8e8;
  min-height: 24px;
  transition: 0.5s cubic-bezier(0.19, 1, 0.19, 1);
  .header-top {
    height: 100%;
    .nav {
      height: 100%;
      display: flex;
      justify-content: flex-end;
      align-items: center;
      .links-container {
        display: flex;
        .nav-link {
          color: #484848;
          font-size: 0.75rem;
          line-height: 0.75rem;
          padding: 0.25rem 0.5rem;
          margin-right: 0.5rem;
          white-space: nowrap;
          text-decoration: none;

          &:hover {
            text-decoration: underline;
          }

          &.visually-hidden-focusable:not(:focus):not(:active) {
            clip: rect(0 0 0 0);
            clip-path: inset(100%);
            height: 1px;
            overflow: hidden;
            position: absolute;
            white-space: nowrap;
            width: 1px;
          }
        }
      }
    }
  }
  @media (max-width: ${({ breakpoint }) => breakpoint}) {
    width: 100%;
    min-height: auto;
    position: relative;
    &:before {
      content: "";
      width: 100%;
      height: 50px;
      position: absolute;
      top: -50px;
      border-bottom: 1px solid #d0d0d0;
      background: linear-gradient(
        180deg,
        rgba(232, 232, 232, 0) 0%,
        rgba(232, 232, 232, 1) 100%
      );
    }
    .header-top {
      width: 100%;
      .nav {
        width: 100%;
        height: 100%;
        display: flex;
        justify-content: flex-start;
        align-items: center;
        flex-direction: column-reverse;
        .links-container {
          display: grid;
          grid-template-columns: 1fr 1fr;
          grid-auto-flow: row;
          justify-items: start;
          width: 100%;
          .nav-link {
            white-space: normal;
            color: #191919;
            margin-right: 0;
            text-align: center;
            width: 100%;
            font-size: 0.875rem;
            padding: 1rem 1.5rem;
            border-top: 1px solid #d0d0d0;
            justify-content: center;
            &:nth-child(even) {
              border-left: 1px solid #d0d0d0;
            }
          }
        }
      }
    }
  }
`;
  const LoginWrapper = qe.div`
  display: flex;
  align-items: center;
  margin-right: 0.5rem;
  > a {
    padding: 0;
    margin: 0;
    color: #484848;
    text-decoration: none;
  }
  > span.name {
    font-weight: 700;
  }
  > a.signout:before {
    content: "(";
    margin-left: 4px;
  }
  > a.signout:after {
    content: ") ";
  }
  @media (max-width: ${({ breakpoint }) => breakpoint}) {
    width: 100%;
  }
`;
  const DEFAUL_GA_EVENT = {
    section: "topbar"
  };
  const Login = /* @__PURE__ */ __name(() => {
    const {
      loggedIn,
      userName,
      logoutLink,
      loginLink,
      onLoginClick,
      onLogoutClick,
      breakpoint
    } = useAppContext();
    return (
      // @ts-ignore
      /* @__PURE__ */ jsxRuntimeExports.jsx(LoginWrapper, { className: "nav-link login-status", breakpoint, children: loggedIn ? /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [
        userName ? /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "name", "data-testid": "user-name", children: userName }) : "",
        /* @__PURE__ */ jsxRuntimeExports.jsx(
          "a",
          {
            className: "signout",
            href: logoutLink,
            onFocus: /* @__PURE__ */ __name(() => trackGAEvent({
              ...DEFAUL_GA_EVENT,
              text: "sign out"
            }), "onFocus"),
            onClick: /* @__PURE__ */ __name((e) => onLogoutClick == null ? void 0 : onLogoutClick(e), "onClick"),
            children: "Sign Out"
          }
        )
      ] }) : /* @__PURE__ */ jsxRuntimeExports.jsx(
        "a",
        {
          href: loginLink,
          onFocus: /* @__PURE__ */ __name(() => trackGAEvent({
            ...DEFAUL_GA_EVENT,
            text: "sign in"
          }), "onFocus"),
          onClick: /* @__PURE__ */ __name((e) => onLoginClick == null ? void 0 : onLoginClick(e), "onClick"),
          children: "Sign In"
        }
      ) })
    );
  }, "Login");
  const SearchWrapper = qe.form`
  button {
    border: none;
    background: transparent;
    cursor: pointer;
  }
  .search-button {
    transition: cubic-bezier(0.19, 1, 0.19, 1);
  }
  input[name="q"] {
    width: 200px;
    background-color: #ffffff;
    border: 0;
    border-radius: 0;
    padding: 0.5rem 0.5rem 0.5rem 2rem;
    font-weight: 400;
    line-height: 1.5;
    color: #495057;
    border: 1px solid #707070;
    margin: 0.5rem 0;
    display: unset;
    &:focus {
      border-color: transparent;
    }
  }
  .close-search {
    background-color: #ffffff;
    border: 1px solid #d0d0d0;
    border-radius: 100%;
    padding: 0.45rem 0.75rem;
    margin-left: 0.5rem;
  }
  &.open-search {
    margin-left: -1rem;
    .search-button {
      transform: translate(1.9rem);
      pointer-events: none;
    }
  }
  @media (max-width: ${({ breakpoint }) => breakpoint}) {
    width: 100%;
    padding: 1rem 2rem;
    label {
      position: relative;
      font-size: 0.875rem;
      margin-bottom: 0;
      width: 100%;
      svg {
        position: absolute;
        top: 50%;
        left: 0.5rem;
        transform: translate(0, -50%);
      }
      input {
        width: 100%;
        border: unset;
        margin: 0;
      }
    }
  }
`;
  const SEARCH_GA_EVENT = {
    event: "search",
    action: "type",
    name: "onenter",
    type: "main search",
    region: "navbar",
    section: "topbar"
  };
  const Search = /* @__PURE__ */ __name(() => {
    const { breakpoint, searchUrl, site } = useAppContext();
    const isMobile = useIsMobile(breakpoint);
    const inputRef = r$1.useRef(null);
    const [open, setOpen] = r$1.useState(false);
    r$1.useEffect(() => {
      if (open) inputRef.current.focus();
    }, [open]);
    const handleSearch = /* @__PURE__ */ __name((e) => {
      const form = e.target;
      e.preventDefault();
      trackGAEvent({
        ...SEARCH_GA_EVENT,
        text: e.target.elements.q.value
      });
      setTimeout(() => {
        form.submit();
      }, 100);
    }, "handleSearch");
    const handleChangeVisibility = /* @__PURE__ */ __name(() => {
      setOpen((prevState) => {
        const newState = !prevState;
        trackGAEvent({
          ...SEARCH_GA_EVENT,
          event: "link",
          action: "click",
          name: "onclick",
          text: newState ? "search icon" : "close search icon"
        });
        return newState;
      });
    }, "handleChangeVisibility");
    return /* @__PURE__ */ jsxRuntimeExports.jsxs(
      SearchWrapper,
      {
        breakpoint,
        action: searchUrl,
        onSubmit: handleSearch,
        method: "get",
        name: "gs",
        className: open ? "open-search" : "",
        "data-testid": "universal-nav-search-form",
        children: [
          !isMobile ? /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx(
              "button",
              {
                type: "button",
                "aria-label": "Search asu.edu",
                onClick: handleChangeVisibility,
                className: "search-button",
                "data-testid": "search-button",
                children: /* @__PURE__ */ jsxRuntimeExports.jsx(FontAwesomeIcon, { icon: faSearch })
              }
            ),
            open && /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [
              /* @__PURE__ */ jsxRuntimeExports.jsx(
                "input",
                {
                  ref: inputRef,
                  className: "form-control",
                  type: "search",
                  name: "q",
                  "aria-labelledby": "header-top-search",
                  placeholder: "Search asu.edu",
                  required: true
                }
              ),
              /* @__PURE__ */ jsxRuntimeExports.jsx(
                "button",
                {
                  type: "button",
                  "aria-label": "Search asu.edu",
                  onClick: handleChangeVisibility,
                  className: "close-search",
                  "data-testid": "close-search",
                  children: /* @__PURE__ */ jsxRuntimeExports.jsx(FontAwesomeIcon, { icon: faTimes })
                }
              )
            ] })
          ] }) : /* @__PURE__ */ jsxRuntimeExports.jsxs("label", { children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx(FontAwesomeIcon, { icon: faSearch }),
            /* @__PURE__ */ jsxRuntimeExports.jsx(
              "input",
              {
                ref: inputRef,
                className: "form-control",
                type: "search",
                name: "q",
                "aria-labelledby": "header-top-search",
                placeholder: "Search asu.edu",
                required: true,
                onChange: /* @__PURE__ */ __name((e) => trackGAEvent({
                  ...SEARCH_GA_EVENT,
                  text: e.target.value
                }), "onChange")
              }
            )
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("input", { name: "url_host", value: site, type: "hidden" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("input", { name: "site", value: "default_collection", type: "hidden" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("input", { name: "sort", value: "date:D:L:d1", type: "hidden" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("input", { name: "output", value: "xml_no_dtd", type: "hidden" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("input", { name: "ie", value: "UTF-8", type: "hidden" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("input", { name: "oe", value: "UTF-8", type: "hidden" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("input", { name: "client", value: "asu_frontend", type: "hidden" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("input", { name: "proxystylesheet", value: "asu_frontend", type: "hidden" })
        ]
      }
    );
  }, "Search");
  const DEFAULT_GA_EVENT = {
    event: "link",
    action: "click",
    name: "onclick",
    region: "navbar",
    type: "internal link",
    section: "topbar",
    text: ""
  };
  const UniversalNavbar = /* @__PURE__ */ __name(() => {
    const { breakpoint } = useAppContext();
    function getURL() {
      try {
        const URL = window.location.href;
        return URL;
      } catch (error) {
        console.error(error);
        return "";
      }
    }
    __name(getURL, "getURL");
    const universalNavLinks = [
      {
        className: "nav-link visually-hidden-focusable",
        href: "#skip-to-content",
        text: "Skip to main content"
      },
      {
        className: "nav-link visually-hidden-focusable",
        href: `https://accessibility.asu.edu/report?a11yref=${getURL()}`,
        text: "Report an accessibility problem"
      },
      {
        className: "nav-link",
        href: "https://asu.edu",
        text: "ASU Home"
      },
      {
        className: "nav-link",
        href: "https://my.asu.edu",
        text: "My ASU"
      },
      {
        className: "nav-link",
        href: "https://www.asu.edu/academics/colleges-schools",
        text: "Colleges and Schools"
      }
    ];
    return /* @__PURE__ */ jsxRuntimeExports.jsx(
      Wrapper$1,
      {
        breakpoint,
        className: "universal-nav",
        "data-testid": "universal-navbar",
        "data-elastic-exclude": "data-elastic-exclude",
        children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "container-xl", children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "header-top", children: /* @__PURE__ */ jsxRuntimeExports.jsxs("nav", { className: "nav", "aria-label": "ASU Global", children: [
          /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "links-container", children: [
            universalNavLinks.map((link) => /* @__PURE__ */ jsxRuntimeExports.jsx(
              "a",
              {
                className: link.className,
                href: link.href,
                onClick: /* @__PURE__ */ __name(() => trackGAEvent({ ...DEFAULT_GA_EVENT, text: link.text }), "onClick"),
                children: link.text
              },
              link.href
            )),
            /* @__PURE__ */ jsxRuntimeExports.jsx(Login, {})
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsx(Search, {})
        ] }) }) })
      }
    );
  }, "UniversalNavbar");
  const HeaderMainWrapper = qe.div`
  background-color: #ffffff;
  border-bottom: 1px solid #d0d0d0;
  padding: 0 12px;
  .navbar {
    padding: 0;
    display: flex;
    align-items: flex-start;
    flex-wrap: nowrap;
  }
  .navbar-brand {
    .vert {
      display: block;
      height: 72px;
      width: auto;
      margin: 20px 1rem 20px 0;
    }
    .horiz {
      display: none;
    }
  }
  .navbar-toggler {
    display: none;
  }
  .expand-title {
    width: 100%;
  }
  @media (min-width: ${({ breakpoint }) => breakpoint}) {
    .no-navigation {
      margin-top: 16px;
      display: flex;
      align-items: center;
      .title {
        width: 100%;
      }
    }
  }
  @media (max-width: ${({ breakpoint }) => breakpoint}) {
    padding: 0;
    .navbar {
      padding: 1.5rem 0 0 0;
      flex-wrap: wrap;
      justify-content: space-between;
      &.partner {
        flex-direction: row-reverse;
      }
    }
    .partner .content-container {
      min-height: calc(100vh - 240px);
    }
    .navbar-brand {
      padding: 0;
      margin: 0;

      .vert {
        display: none;
      }

      .horiz {
        display: block;
        height: 32px;
        width: auto;
        margin-bottom: 1rem;
        margin-left: 2rem;
      }
    }
    .navbar-toggler {
      display: initial;
      background: transparent;
      color: #191919;
      border: 0;
      border-radius: 50%;
      font-size: 1.25rem;
      margin-right: 2rem;
      padding: 0.25rem 0.45rem;
      &.collapsed {
        border-radius: 0;
      }
    }
    .no-navigation + nav .buttons-container {
      border-top: 1px solid #cccccc;
    }
  }
`;
  const LogoWrapper = qe.a`
  display: unset;
  padding: 0;
  margin: 0;
  font-size: unset;
  line-height: unset;
  white-space: unset;
`;
  const currentScriptPath$1 = getCurrentScriptPath();
  const vertLogo = `${currentScriptPath$1}assets/img/arizona-state-university-logo-vertical.png`;
  const horizLogo = `${currentScriptPath$1}assets/img/arizona-state-university-logo.png`;
  const Logo = /* @__PURE__ */ __name(() => {
    const { logo } = useAppContext();
    return /* @__PURE__ */ jsxRuntimeExports.jsxs(
      LogoWrapper,
      {
        href: (logo == null ? void 0 : logo.brandLink) ?? "https://asu.edu",
        className: "navbar-brand",
        "data-testid": "logo",
        onFocus: /* @__PURE__ */ __name(() => trackGAEvent({ text: "asu logo" }), "onFocus"),
        children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx(
            "img",
            {
              className: "vert",
              src: (logo == null ? void 0 : logo.src) ?? vertLogo,
              alt: (logo == null ? void 0 : logo.alt) ?? "Arizona State University",
              title: (logo == null ? void 0 : logo.title) ?? "ASU home page",
              width: "303",
              height: "234",
              decoding: "async",
              fetchpriority: "high"
            }
          ),
          /* @__PURE__ */ jsxRuntimeExports.jsx(
            "img",
            {
              className: "horiz",
              src: (logo == null ? void 0 : logo.mobileSrc) ?? horizLogo,
              alt: (logo == null ? void 0 : logo.alt) ?? "Arizona State University",
              title: (logo == null ? void 0 : logo.title) ?? "ASU home page",
              width: "400",
              height: "72",
              decoding: "async",
              fetchpriority: "high"
            }
          )
        ]
      }
    );
  }, "Logo");
  const Wrapper = qe.nav`
  white-space: nowrap;
  > .content-container {
    display: flex;
    align-items: center;
    justify-content: space-between;
    border: none;
    height: auto;
    margin: inherit;
    font-size: inherit;
    color: inherit;
    flex-direction: row;
  }
  .nav-list {
    display: flex;
    margin: 0;
  }
  @media (max-width: ${({ breakpoint }) => breakpoint}) {
    width: 100%;
    > .content-container {
      flex-direction: column;
      justify-content: flex-start;
      overflow-y: auto;
      min-height: calc(100vh - 277px);
      max-height: calc(100vh - 277px);
      > *:last-child {
        margin-bottom: min(75px, 15vw);
      }
    }
    .nav-list {
      flex-direction: column;
      width: 100%;
    }
    .buttons-container {
      display: flex;
      align-items: center;
      padding: 1rem 2rem;
      width: 100%;
    }
  }
`;
  const DropdownWrapper = qe.div`
  position: fixed;
  background-color: #ffffff;
  border: 1px solid #d0d0d0;
  margin: 0;
  z-index: 1031;
  visibility: hidden;
  white-space: normal;
  &.opened {
    visibility: visible;
  }
  &.mega {
    width: 100%;
    left: 0;
    margin-left: 0 !important;
  }
  &.aligned-right:not(.mega) {
    position: absolute;
    right: 0;
  }
  > .dropdown-container {
    max-width: 1200px;
    margin: 0 auto;
    display: flex;
    justify-content: center;
    padding: 2rem;
    ul {
      width: 16rem;
      max-width: 282px;
      display: flex;
      flex-direction: column;
      &:not(:last-child) {
        padding-right: 2rem;
        margin-right: 2rem;
        border-right: 1px solid #d0d0d0;
      }
      .ul-heading {
        margin-top: 0;
        font-size: 1.5rem;
        letter-spacing: -0.035em;
        font-weight: 700;
        text-align: left;
        opacity: 1;
        margin: 1rem 0;
        line-height: calc(100% + 0.12em);
      }
      .nav-link {
        padding: 0;
        a {
          width: 100%;
          display: inline-block;
          margin: 0.75rem 0;
          position: relative;
          line-height: 1rem;
          color: #191919;
          &:hover {
            color: #8c1d40;
            text-decoration: underline;
          }
        }
        & + .nav-button {
          margin-top: auto;
          padding-top: 2rem;
          & + .nav-button {
            margin-top: 1rem;
          }
        }
      }
    }
  }
  .dropdown-button-container {
    border-top: 1px solid #d0d0d0;
    border-bottom: 1px solid #d0d0d0;
    margin-top: 1rem;
    > div {
      max-width: 1200px;
      margin: 0 auto;
      display: flex;
      padding: 1rem 0;
    }
  }
  @media (max-width: ${({ breakpoint }) => breakpoint}) {
    position: initial;
    border: none;
    max-height: unset;
    visibility: visible;
    display: none;
    &.opened {
      display: block;
    }
    > .dropdown-container {
      max-width: 100%;
      padding: 1rem 2rem;
      flex-direction: column;
      ul {
        width: 100%;
        max-width: 100%;
        padding: 0 1rem;
        margin-bottom: 1rem;
        &:not(:last-child) {
          padding-right: 1rem;
          margin: 0 0 1rem 0;
          border: none;
        }
        .ul-heading {
          font-size: 1.25rem;
        }
        .nav-button {
          padding-top: 1.5rem;
        }
        .nav-link {
          padding: 0 1rem;
          &:not(:last-child) {
            border-bottom: 1px solid #d0d0d0;
          }
          a {
            padding: 1rem 0;
            margin: 0;
          }
        }
      }
    }
    .dropdown-button-container {
      margin-top: 0;
      > div {
        max-width: 100%;
        padding: 1rem 3rem;
      }
    }
  }
`;
  const LINK_DEFAULT_PROPS$1 = {
    event: "link",
    action: "click",
    name: "onclick",
    type: "internal link",
    region: "navbar",
    section: "main navbar",
    text: ""
  };
  const HeadingItem = /* @__PURE__ */ __name(({ text: text2 }) => /* @__PURE__ */ jsxRuntimeExports.jsx("h3", { className: "ul-heading", children: text2 }), "HeadingItem");
  HeadingItem.propTypes = {
    text: PropTypes.string
  };
  const ButtonItem = /* @__PURE__ */ __name(({ link, dropdownName, handleLinkEvent }) => /* @__PURE__ */ jsxRuntimeExports.jsx("li", { className: "nav-button", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
    Button,
    {
      text: link.text,
      color: link.color || "dark",
      href: link.href,
      onClick: /* @__PURE__ */ __name((e) => handleLinkEvent(e, link), "onClick")
    }
  ) }), "ButtonItem");
  ButtonItem.propTypes = {
    link: PropTypes.shape({
      text: PropTypes.string,
      color: PropTypes.string,
      href: PropTypes.string
    }),
    dropdownName: PropTypes.string,
    handleLinkEvent: PropTypes.func
  };
  const LinkItem = /* @__PURE__ */ __name(({ link, dropdownName, handleLinkEvent }) => /* @__PURE__ */ jsxRuntimeExports.jsx("li", { className: "nav-link", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
    "a",
    {
      ...!link.href ? { tabIndex: 0 } : {},
      href: link.href,
      onClick: /* @__PURE__ */ __name((e) => handleLinkEvent(e, link), "onClick"),
      onKeyDown: /* @__PURE__ */ __name((e) => handleLinkEvent(e, link), "onKeyDown"),
      children: link.text
    }
  ) }), "LinkItem");
  LinkItem.propTypes = {
    link: PropTypes.shape({
      text: PropTypes.string,
      href: PropTypes.string
    }),
    dropdownName: PropTypes.string,
    handleLinkEvent: PropTypes.func
  };
  const DropdownItem = /* @__PURE__ */ __name(({
    dropdownName,
    items,
    buttons,
    classes,
    listId,
    setItemOpened,
    parentLink
  }) => {
    const { breakpoint } = useAppContext();
    const isMega = (items == null ? void 0 : items.length) > 2;
    const dropdownRef = r$1.useRef(null);
    const [alignedRight, setAlignedRight] = r$1.useState(false);
    const MULTIPLE_SUBMENUS = (items == null ? void 0 : items.length) > 1;
    r$1.useEffect(() => {
      var _a;
      if (window && dropdownRef.current) {
        const elPosition = (_a = dropdownRef == null ? void 0 : dropdownRef.current) == null ? void 0 : _a.getBoundingClientRect().left;
        const breakpointPosition = window.innerWidth * 0.55;
        setAlignedRight(elPosition > breakpointPosition);
      }
    }, []);
    const stopPropagation = /* @__PURE__ */ __name((e) => e.stopPropagation(), "stopPropagation");
    const handleLinkEvent = /* @__PURE__ */ __name((e, link) => {
      var _a;
      const { key, type, target } = e;
      const { parentElement } = target;
      const focusNextLink = /* @__PURE__ */ __name(() => {
        var _a2;
        const nextLink = (_a2 = parentElement.nextElementSibling) == null ? void 0 : _a2.firstChild;
        if (nextLink) nextLink.focus();
      }, "focusNextLink");
      const focusPrevLink = /* @__PURE__ */ __name(() => {
        var _a2;
        const prevLink = (_a2 = parentElement.previousElementSibling) == null ? void 0 : _a2.firstChild;
        if (prevLink) prevLink.focus();
      }, "focusPrevLink");
      stopPropagation(e);
      if (key === "ArrowDown") {
        e.preventDefault();
        focusNextLink();
      } else if (key === "ArrowUp") {
        e.preventDefault();
        focusPrevLink();
      } else if (key === "Escape") {
        setItemOpened();
        if (parentLink == null ? void 0 : parentLink.current) parentLink.current.focus();
      } else if (key === "Enter" || key === " " || type === "click") {
        (_a = link == null ? void 0 : link.onClick) == null ? void 0 : _a.call(link, e);
        trackGAEvent({ ...LINK_DEFAULT_PROPS$1, text: link.text });
      }
    }, "handleLinkEvent");
    const renderItem = /* @__PURE__ */ __name((link, index) => {
      const key = `${link.text}-${link.href || index}`;
      if (link.type === "heading")
        return /* @__PURE__ */ jsxRuntimeExports.jsx(HeadingItem, { text: link.text }, key);
      if (link.type === "button")
        return /* @__PURE__ */ jsxRuntimeExports.jsx(
          ButtonItem,
          {
            link,
            dropdownName,
            handleLinkEvent
          },
          key
        );
      return /* @__PURE__ */ jsxRuntimeExports.jsx(
        LinkItem,
        {
          link,
          dropdownName,
          handleLinkEvent
        },
        key
      );
    }, "renderItem");
    return /* @__PURE__ */ jsxRuntimeExports.jsxs(
      DropdownWrapper,
      {
        ref: dropdownRef,
        className: `${classes}${alignedRight ? " aligned-right" : ""}${isMega ? " mega" : ""}`,
        breakpoint,
        children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("div", { id: MULTIPLE_SUBMENUS ? listId : "", className: "dropdown-container", children: items == null ? void 0 : items.map((item, index0) => {
            const genKey = idGenerator(`dropdown-item-${index0}-`);
            const key = genKey.next().value;
            return /* @__PURE__ */ jsxRuntimeExports.jsx("ul", { id: MULTIPLE_SUBMENUS ? `${listId}-${key}` : listId, children: item.map((link, index) => renderItem(link, index)) }, key);
          }) }),
          buttons && /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "dropdown-button-container", children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { children: buttons.map((button, index) => /* @__PURE__ */ jsxRuntimeExports.jsx(
            Button,
            {
              color: button.color,
              text: button.text,
              href: button.href,
              onClick: stopPropagation
            },
            `${button.text}-${button.href || index}`
          )) }) })
        ]
      }
    );
  }, "DropdownItem");
  DropdownItem.propTypes = {
    dropdownName: PropTypes.string,
    items: PropTypes.arrayOf(
      PropTypes.shape({
        text: PropTypes.string,
        selected: PropTypes.bool,
        onClick: PropTypes.func,
        href: PropTypes.string
      })
    ),
    buttons: PropTypes.arrayOf(PropTypes.shape(ButtonPropTypes)),
    classes: PropTypes.string,
    listId: PropTypes.string,
    setItemOpened: PropTypes.func,
    parentLink: PropTypes.shape({
      focus: PropTypes.func,
      current: PropTypes.instanceOf(HTMLElement)
    })
  };
  const NavItemWrapper = qe.li`
  position: relative;
  padding: 0;
  margin: 0 0.5rem 0 0;
  &:has(.open-link) > a:after,
  &:hover > a:after {
    width: calc(100% + 24px);
  }
  > a {
    display: inline-block;
    padding: 0.5rem 0.75rem;
    line-height: 1rem;
    color: #191919;
    &:after {
      transition: 0.5s cubic-bezier(0.19, 1, 0.19, 1);
      content: "";
      display: block;
      height: 0.5rem;
      position: relative;
      top: 0.6rem;
      right: 12px;
      width: 0;
      background-image: linear-gradient(
        to right,
        transparent 0.5%,
        #ffc627 0.5%
      );
    }
    &.nav-item-selected:after {
      width: calc(100% + 24px);
    }
    &.nav-item {
      display: block;
    }
    > span {
      position: relative;
      .chevron-icon {
        transition: 0.5s cubic-bezier(0.19, 1, 0.19, 1);
        margin-left: 0.5rem;
        font-size: 0.75rem;

        &.open {
          transform: rotate(180deg);
        }
      }
    }
    .mobile-only {
      display: none;
    }
  }
  @media (max-width: ${({ breakpoint }) => breakpoint}) {
    border-bottom: 1px solid #cccccc;
    margin: 0;
    &:first-child {
      border-top: 1px solid #cccccc;
    }
    &:hover > a:after {
      width: 100%;
    }
    .icon-nav-item {
      display: none;
    }
    > a {
      padding: 1rem 2rem 0.75rem;
      width: 100%;
      &.open-link {
        border-bottom: 1px solid #cccccc;
      }
      &:after {
        right: 0;
        top: 0.8rem;
      }
      &.nav-item-selected:after {
        width: 100%;
      }
      > span {
        display: flex;
        justify-content: space-between;
        .chevron-icon {
          font-size: 1.25rem;
        }
      }
      .mobile-only {
        display: initial;
      }
    }
  }
`;
  const DROPDOWNS_GA_EVENTS = {
    event: "collapse",
    type: "click"
  };
  const LINK_DEFAULT_PROPS = {
    event: "link",
    action: "click",
    name: "onclick",
    type: "internal link",
    region: "navbar",
    section: "main navbar",
    text: ""
  };
  const NavLinkIcon = /* @__PURE__ */ __name(({ children }) => {
    return /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(FontAwesomeIcon, { icon: faHome, className: "icon-nav-item", alt: "" }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "mobile-only", children })
    ] });
  }, "NavLinkIcon");
  NavLinkIcon.propTypes = {
    children: PropTypes.node
  };
  const NavItem = /* @__PURE__ */ __name(({ link, setItemOpened, itemOpened }) => {
    const clickRef = r$1.useRef(null);
    const parentLink = r$1.useRef(null);
    const opened = link.id === itemOpened;
    const { breakpoint, expandOnHover, title } = useAppContext();
    const isMobile = useIsMobile(breakpoint);
    r$1.useEffect(() => {
      const handleClickOutside = /* @__PURE__ */ __name((event) => {
        var _a;
        if (opened && !((_a = clickRef == null ? void 0 : clickRef.current) == null ? void 0 : _a.contains(event.target))) {
          setItemOpened();
        }
      }, "handleClickOutside");
      document.addEventListener("click", handleClickOutside, true);
      return () => {
        document.removeEventListener("click", handleClickOutside, true);
      };
    }, [opened]);
    const renderNavLinks = r$1.useMemo(() => {
      var _a;
      if (link.type === "icon-home") {
        return /* @__PURE__ */ jsxRuntimeExports.jsx(NavLinkIcon, { children: link.text });
      }
      return /* @__PURE__ */ jsxRuntimeExports.jsxs("span", { children: [
        link.text,
        !!((_a = link.items) == null ? void 0 : _a.length) && /* @__PURE__ */ jsxRuntimeExports.jsx(
          FontAwesomeIcon,
          {
            icon: faChevronDown,
            className: `chevron-icon ${opened ? "open" : ""}`,
            alt: ""
          }
        )
      ] });
    }, [link]);
    const dispatchGAEvent = /* @__PURE__ */ __name(() => {
      var _a;
      const isDropdown = !!((_a = link.items) == null ? void 0 : _a.length);
      const action = opened ? "close" : "open";
      const { text: text2 } = link;
      trackGAEvent(
        // @ts-ignore
        isDropdown ? {
          ...LINK_DEFAULT_PROPS,
          ...DROPDOWNS_GA_EVENTS,
          action,
          text: text2
        } : {
          ...LINK_DEFAULT_PROPS,
          text: link.type === "icon-home" ? "home button" : text2
        }
      );
    }, "dispatchGAEvent");
    const handleKeyDown = /* @__PURE__ */ __name((e) => {
      var _a, _b;
      if (!link.items && link.href) {
        trackGAEvent({ ...LINK_DEFAULT_PROPS, text: link.text });
        return;
      }
      const { key } = e;
      const navigableKeys = [
        "ArrowUp",
        "ArrowDown",
        "ArrowLeft",
        "ArrowRight",
        "Enter",
        " ",
        "Escape",
        "Click"
      ];
      if (navigableKeys.includes(key)) {
        e.preventDefault();
        if (key === "Escape" && opened) {
          setItemOpened();
          return;
        }
        if (key === "Enter" || key === " ") {
          if (link.items) {
            if (!expandOnHover && !isMobile) {
              setItemOpened();
            } else if (isMobile) {
              setItemOpened();
            }
          }
          dispatchGAEvent();
          (_a = link.onClick) == null ? void 0 : _a.call(link, e);
        }
        if (key === "ArrowDown" || key === "ArrowRight") {
          if (opened) {
            const dropdownItems = document.querySelectorAll(
              `.header-dropdown-${link.id} li.nav-link a`
            );
            if (dropdownItems.length) {
              dropdownItems[0].focus();
            }
          }
        }
      } else if (e.type === "click" && link.items) {
        e.preventDefault();
        dispatchGAEvent();
        setItemOpened();
      } else if (e.type === "click") {
        dispatchGAEvent();
        (_b = link.onClick) == null ? void 0 : _b.call(link, e);
      }
    }, "handleKeyDown");
    const handleOnMouseEnterLeave = /* @__PURE__ */ __name(() => {
      if (expandOnHover && !isMobile) {
        setItemOpened();
        dispatchGAEvent();
      }
    }, "handleOnMouseEnterLeave");
    return /* @__PURE__ */ jsxRuntimeExports.jsxs(
      NavItemWrapper,
      {
        breakpoint,
        ref: clickRef,
        onMouseEnter: handleOnMouseEnterLeave,
        onMouseLeave: handleOnMouseEnterLeave,
        children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx(
            "a",
            {
              onKeyDown: handleKeyDown,
              onClick: handleKeyDown,
              href: link.href,
              ...link.items ? { "aria-expanded": opened } : {},
              ...!link.href ? { tabIndex: 0 } : {},
              "aria-owns": link.items ? `dropdown-${link.id}` : null,
              className: `${link.class ? link.class : ""}${link.selected ? " nav-item-selected" : ""}${opened ? " open-link" : ""}`,
              "data-testid": "nav-item",
              title: link.type === "icon-home" && title ? `${title} home page` : link.text,
              ref: parentLink,
              children: renderNavLinks
            }
          ),
          link.items && /* @__PURE__ */ jsxRuntimeExports.jsx(
            DropdownItem,
            {
              items: link.items,
              buttons: link.buttons,
              dropdownName: link.text,
              classes: `header-dropdown-${link.id} ${opened ? "opened" : ""}`,
              listId: `dropdown-${link.id}`,
              setItemOpened,
              parentLink: parentLink == null ? void 0 : parentLink.current
            }
          )
        ]
      }
    );
  }, "NavItem");
  NavItem.propTypes = {
    link: NavTreePropTypes,
    setItemOpened: PropTypes.func,
    itemOpened: PropTypes.number
  };
  const NavbarContainer = /* @__PURE__ */ __name(() => {
    const { navTree, mobileNavTree, buttons, breakpoint } = useAppContext();
    const isMobile = useIsMobile(breakpoint);
    const [itemOpened, setItemOpened] = r$1.useState(void 0);
    const handleSetItemOpened = /* @__PURE__ */ __name((itemId) => {
      setItemOpened((prev) => itemOpened === itemId ? void 0 : itemId);
    }, "handleSetItemOpened");
    const renderItem = /* @__PURE__ */ __name((link, index) => {
      const item = { ...link, id: index };
      const genKey = idGenerator(`${link.text}-${index}-`);
      const key = genKey.next().value;
      return /* @__PURE__ */ jsxRuntimeExports.jsx(
        NavItem,
        {
          link: item,
          setItemOpened: /* @__PURE__ */ __name(() => handleSetItemOpened(index), "setItemOpened"),
          itemOpened
        },
        key
      );
    }, "renderItem");
    return (
      // @ts-ignore
      /* @__PURE__ */ jsxRuntimeExports.jsxs(Wrapper, { breakpoint, "data-testid": "navigation", "aria-label": "Site", children: [
        ((navTree == null ? void 0 : navTree.length) || (mobileNavTree == null ? void 0 : mobileNavTree.length) || (buttons == null ? void 0 : buttons.length)) && /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "content-container", children: [
          ((navTree == null ? void 0 : navTree.length) || (mobileNavTree == null ? void 0 : mobileNavTree.length)) && /* @__PURE__ */ jsxRuntimeExports.jsx("ul", { className: "nav-list", children: !!(mobileNavTree == null ? void 0 : mobileNavTree.length) && isMobile ? mobileNavTree == null ? void 0 : mobileNavTree.map((link, i) => renderItem(link, i)) : navTree == null ? void 0 : navTree.map((link, i) => renderItem(link, i)) }),
          !!(buttons == null ? void 0 : buttons.length) && /* @__PURE__ */ jsxRuntimeExports.jsx("form", { className: "buttons-container", "data-testid": "buttons-container", children: buttons == null ? void 0 : buttons.map((button) => /* @__PURE__ */ r$1.createElement(
            Button,
            {
              ...button,
              key: button.text,
              onClick: /* @__PURE__ */ __name(() => trackGAEvent({
                event: "link",
                action: "click",
                name: "onclick",
                region: "navbar",
                type: "internal link",
                section: "main navbar",
                text: button.text
              }), "onClick")
            }
          )) })
        ] }),
        isMobile && /* @__PURE__ */ jsxRuntimeExports.jsx(UniversalNavbar, {})
      ] })
    );
  }, "NavbarContainer");
  const PartnerLogosWrapper = qe.div`
  margin: 0.5rem 0;
  a {
    display: inline-block;
    &:not(:last-child) {
      border-right: 1px solid #d0d0d0;
      margin-right: 1.5rem;
      padding-right: 1.5rem;
    }
    img {
      height: 52px;
      width: auto;
      &.vert {
        display: initial;
      }
      &.horiz {
        display: none;
      }
    }
  }
  @media (max-width: ${({ breakpoint }) => breakpoint}) {
    margin: 0.5rem 0 1rem 1rem;
    a {
      &:not(:last-child) {
        margin-right: 1rem;
        padding-right: 1rem;
      }
      img {
        height: 32px;
        width: auto;
        &.vert {
          display: none;
        }
        &.horiz {
          height: 24px;
          width: auto;
          display: initial;
        }
      }
    }
  }
  @media (max-width: 370px) {
    margin: 0.5rem 0 1rem 0.5rem;
    a {
      &:not(:last-child) {
        margin-right: 0.5rem;
        padding-right: 0.5rem;
      }
      img {
        height: 29px;
        &.horiz {
          height: 21px;
        }
      }
    }
  }
`;
  const currentScriptPath = getCurrentScriptPath();
  const asuVertLogo = `${currentScriptPath}/assets/img/arizona-state-university-logo-vertical.png`;
  const asuHorizLogo = `${currentScriptPath}/assets/img/arizona-state-university-logo.png`;
  const starbucksLogo = `${currentScriptPath}/assets/img/asu-starbucks.png`;
  const Partner = /* @__PURE__ */ __name(() => {
    const { partnerLogo, logo: asuLogo, breakpoint } = useAppContext();
    return (
      // @ts-ignore
      /* @__PURE__ */ jsxRuntimeExports.jsxs(PartnerLogosWrapper, { breakpoint, "data-testid": "partner", children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx(
          "a",
          {
            href: (partnerLogo == null ? void 0 : partnerLogo.brandLink) ?? "https://starbucks.asu.edu/",
            onClick: /* @__PURE__ */ __name(() => trackGAEvent({
              event: "link",
              action: "click",
              name: "onclick",
              region: "navbar",
              type: "internal link",
              section: "main navbar",
              text: "partner logo"
            }), "onClick"),
            children: /* @__PURE__ */ jsxRuntimeExports.jsx(
              "img",
              {
                src: (partnerLogo == null ? void 0 : partnerLogo.src) ?? starbucksLogo,
                alt: (partnerLogo == null ? void 0 : partnerLogo.alt) ?? "ASU Starbucks logo",
                width: "232",
                height: "81",
                decoding: "async",
                fetchpriority: "high"
              }
            )
          }
        ),
        /* @__PURE__ */ jsxRuntimeExports.jsxs(
          "a",
          {
            href: (asuLogo == null ? void 0 : asuLogo.brandLink) ?? "https://asu.edu",
            onClick: /* @__PURE__ */ __name(() => trackGAEvent({ text: "asu logo" }), "onClick"),
            children: [
              /* @__PURE__ */ jsxRuntimeExports.jsx(
                "img",
                {
                  className: "vert",
                  src: (asuLogo == null ? void 0 : asuLogo.src) ?? asuVertLogo,
                  alt: (asuLogo == null ? void 0 : asuLogo.alt) ?? "Arizona State University",
                  width: "303",
                  height: "234",
                  decoding: "async",
                  fetchpriority: "high"
                }
              ),
              /* @__PURE__ */ jsxRuntimeExports.jsx(
                "img",
                {
                  className: "horiz",
                  src: (asuLogo == null ? void 0 : asuLogo.mobileSrc) ?? asuHorizLogo,
                  alt: (asuLogo == null ? void 0 : asuLogo.alt) ?? "Arizona State University",
                  width: "400",
                  height: "72",
                  decoding: "async",
                  fetchpriority: "high"
                }
              )
            ]
          }
        )
      ] })
    );
  }, "Partner");
  const addMinutesToDate = /* @__PURE__ */ __name((date, minutes) => {
    const dateWithMinutes = new Date(date);
    dateWithMinutes.setMinutes(dateWithMinutes.getMinutes() + minutes);
    return dateWithMinutes;
  }, "addMinutesToDate");
  const checkFirstLoad = /* @__PURE__ */ __name((root) => {
    const LOCALHOST = "localhost";
    const KEY_TITLE_LOADED = "title_loaded";
    const now = /* @__PURE__ */ new Date();
    const siteRoot = root || window.location.hostname;
    const titleLoaded = localStorage.getItem("title_loaded");
    const titleLoadedExpired = now.getTime() > parseInt(titleLoaded, 10);
    const isLocalSite = siteRoot === LOCALHOST;
    const hasMatchingReferrer = document.referrer.includes(siteRoot);
    const hasValidTitle = !titleLoaded || titleLoadedExpired;
    if (isLocalSite || !hasMatchingReferrer && hasValidTitle) {
      const expirationTime = addMinutesToDate(now, 10).getTime();
      localStorage.setItem(KEY_TITLE_LOADED, expirationTime.toString());
      return true;
    }
    return false;
  }, "checkFirstLoad");
  const breakpointMap = {
    "992px": "993px",
    "1260px": "1261px"
  };
  const TitleWrapper = qe.div`
  line-height: 1;
  font-size: 1rem;
  font-weight: 700;
  padding: 0 2rem 1.5rem 2rem;
  letter-spacing: -1px;
  display: inline-block;
  margin: 0;
  width: max-content;

  &.active {
    background-position: -200%;
  }

  > .unit-name {
    display: none;
  }
  .unit-name,
  .subunit-name,
  .title-subunit-name {
    color: #191919;
  }

  .subunit-name,
  .title-subunit-name {
    background-image: linear-gradient(
      to right,
      transparent 51%,
      #ffc626 51%,
      95%,
      transparent
    );
    background-position: 0 0;
    background-size: 200%;
    display: inline-block;
    transition: 0.5s cubic-bezier(0.19, 1, 0.19, 1);
    transition-duration: 1.5s;
    &.active {
      background-position: -200%;
    }
  }

  @media (min-width: ${({ breakpoint }) => breakpointMap[breakpoint]}) {
    line-height: 1;
    font-weight: 700;
    padding: 0;
    margin: 1rem 0 0.5rem 0;
    > .unit-name {
      font-size: 1rem;
      margin-bottom: 0.5rem;
      display: block;

      :hover {
        text-decoration: underline;
      }
    }
    .subunit-name {
      font-size: 1.5rem;
      margin-bottom: 0;
      display: inline-block;

      :hover {
        text-decoration: underline;
      }
    }
    .title-subunit-name {
      font-size: 2rem;
      font-weight: 700;
      display: inline-block;
      margin: 0.5rem 0 0.5rem 0;

      :hover {
        text-decoration: underline;
      }
    }
  }
`;
  const Title = /* @__PURE__ */ __name(() => {
    const [active, setActive] = r$1.useState(false);
    const { title, parentOrg, parentOrgUrl, baseUrl, breakpoint, animateTitle } = useAppContext();
    r$1.useEffect(() => {
      if (animateTitle !== false) {
        let root = baseUrl === "/" ? window.location.hostname : baseUrl;
        if (!root.includes(window.location.hostname) && root.indexOf("/") === 0) {
          root = window.location.hostname + root;
        }
        if (checkFirstLoad(root)) {
          setActive(true);
        }
      }
    }, [active, animateTitle, baseUrl]);
    if (parentOrg) {
      return /* @__PURE__ */ jsxRuntimeExports.jsxs(
        TitleWrapper,
        {
          breakpoint,
          className: "title",
          "data-testid": "title",
          children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx(
              "a",
              {
                className: "unit-name",
                href: parentOrgUrl,
                onClick: /* @__PURE__ */ __name(() => trackGAEvent({
                  event: "link",
                  action: "click",
                  name: "onclick",
                  region: "navbar",
                  type: "internal link",
                  section: "main navbar",
                  text: parentOrg
                }), "onClick"),
                title: `${parentOrg} home page`,
                children: parentOrg
              }
            ),
            /* @__PURE__ */ jsxRuntimeExports.jsx(
              "a",
              {
                className: `subunit-name ${active ? "active" : ""}`,
                href: baseUrl,
                onClick: /* @__PURE__ */ __name(() => trackGAEvent({
                  event: "link",
                  action: "click",
                  name: "onclick",
                  region: "navbar",
                  type: "internal link",
                  section: "main navbar",
                  text: title
                }), "onClick"),
                title: `${title} home page`,
                children: title
              }
            )
          ]
        }
      );
    }
    return /* @__PURE__ */ jsxRuntimeExports.jsx(
      TitleWrapper,
      {
        breakpoint,
        className: "title",
        "data-testid": "title",
        children: /* @__PURE__ */ jsxRuntimeExports.jsx(
          "a",
          {
            className: `title-subunit-name ${active ? "active" : ""}`,
            href: baseUrl,
            onClick: /* @__PURE__ */ __name(() => trackGAEvent({
              event: "link",
              action: "click",
              name: "onclick",
              region: "navbar",
              type: "internal link",
              section: "main navbar",
              text: title
            }), "onClick"),
            title: `${title} home page`,
            children: title
          }
        )
      }
    );
  }, "Title");
  Title.propTypes = { ...TitlePropTypes };
  const HeaderMain = /* @__PURE__ */ __name(() => {
    const { breakpoint, isPartner, hasNavigation } = useAppContext();
    const [mobileMenuOpen, setMobileMenuOpen] = r$1.useState(false);
    const isMobile = useIsMobile(breakpoint);
    const handleChangeMenuVisibility = /* @__PURE__ */ __name(() => {
      setMobileMenuOpen((prevState) => !prevState);
    }, "handleChangeMenuVisibility");
    const handleClickMobileMenu = /* @__PURE__ */ __name(() => {
      handleChangeMenuVisibility();
      trackGAEvent({
        event: "collapse",
        action: mobileMenuOpen ? "close" : "open",
        type: "click",
        text: "menu button tablet"
      });
    }, "handleClickMobileMenu");
    return /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [
      !isMobile && /* @__PURE__ */ jsxRuntimeExports.jsx(UniversalNavbar, {}),
      /* @__PURE__ */ jsxRuntimeExports.jsx(HeaderMainWrapper, { breakpoint, children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "container-xl", children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "header-main", children: /* @__PURE__ */ jsxRuntimeExports.jsxs(
        "div",
        {
          className: `navbar navbar-expand-xl ${isPartner ? "partner" : ""}`,
          children: [
            !isPartner && /* @__PURE__ */ jsxRuntimeExports.jsx(Logo, {}),
            /* @__PURE__ */ jsxRuntimeExports.jsx(
              "button",
              {
                className: `navbar-toggler${mobileMenuOpen ? "" : " collapsed"}`,
                type: "button",
                onClick: handleClickMobileMenu,
                "aria-label": "Toggle navigation",
                children: /* @__PURE__ */ jsxRuntimeExports.jsx(
                  FontAwesomeIcon,
                  {
                    icon: mobileMenuOpen ? faTimes : faBars,
                    alt: ""
                  }
                )
              }
            ),
            /* @__PURE__ */ jsxRuntimeExports.jsxs(
              "div",
              {
                className: `${!isPartner ? "expand-title" : ""}${!hasNavigation ? " no-navigation" : ""}`,
                children: [
                  isPartner ? /* @__PURE__ */ jsxRuntimeExports.jsx(Partner, {}) : /* @__PURE__ */ jsxRuntimeExports.jsx(Title, {}),
                  !isMobile && /* @__PURE__ */ jsxRuntimeExports.jsx(NavbarContainer, {})
                ]
              }
            ),
            mobileMenuOpen && isMobile && /* @__PURE__ */ jsxRuntimeExports.jsx(NavbarContainer, {})
          ]
        }
      ) }) }) })
    ] });
  }, "HeaderMain");
  const getHrefMatchIndex = /* @__PURE__ */ __name((navTree, path) => navTree == null ? void 0 : navTree.findIndex(
    (item) => {
      var _a;
      return (item == null ? void 0 : item.href) === path || // !Some applications might send invalid items props as an empty string
      Array.isArray(item.items) && ((_a = item.items) == null ? void 0 : _a.flat().find(({ href }) => href === path));
    }
  ), "getHrefMatchIndex");
  const hasActivePage = /* @__PURE__ */ __name((navTree) => navTree == null ? void 0 : navTree.find((x2) => x2.selected), "hasActivePage");
  const tryAddActivePage = /* @__PURE__ */ __name((navTree) => {
    if (!Array.isArray(navTree) || navTree.length === 0) {
      return navTree;
    }
    if (hasActivePage(navTree)) {
      return navTree;
    }
    let currentPath = "";
    if (window == null ? void 0 : window.location) {
      currentPath = window.location.pathname + window.location.search;
    }
    if (!currentPath) {
      return navTree;
    }
    const index = getHrefMatchIndex(navTree, currentPath);
    if (index === -1) {
      return navTree;
    }
    const newTree = [...navTree];
    newTree[index].selected = true;
    return newTree;
  }, "tryAddActivePage");
  const breakpoints = { Lg: "992px", Xl: "1260px" };
  const Header = qe.header`
  font-family: Arial, Helvetica, "Nimbus Sans L", "Liberation Sans", FreeSans,
    sans-serif;
  position: fixed;
  top: 0;
  right: 0;
  left: 0;
  z-index: 1030;
  *,
  *::before,
  *::after {
    box-sizing: border-box;
  }
  ul {
    list-style-type: none;
    padding: 0;
  }
  .container-xl {
    height: 100%;
    max-width: 1224px;
    margin-right: auto;
    margin-left: auto;
    width: 100%;
  }
  button,
  a {
    text-decoration: none;
    &:focus {
      outline: none !important;
      box-shadow: 0px 0px 0px 2px #ffffff, 0px 0px 0px 4px #191919 !important;
    }
  }
  @media (min-width: ${({ breakpoint }) => breakpoints[breakpoint]}) {
    &.scrolled {
      .universal-nav {
        min-height: 0;
        height: 0;
        overflow: hidden;
      }
      .title {
        margin: 0.5rem 0 0 0;
      }
      a.unit-name {
        display: none;
        transition: 0.5s cubic-bezier(0.19, 1, 0.19, 1);
      }
      a.subunit-name {
        margin: 0.52rem 0;
      }
      a.subunit-name,
      a.title-subunit-name {
        font-size: 1.5em;
        transition: 0.5s cubic-bezier(0.19, 1, 0.19, 1);
      }
      .navbar-brand img {
        height: 64px;
        transition: 0.5s cubic-bezier(0.19, 1, 0.19, 1);
        margin: 12px 1rem 12px 0;
      }
    }
  }
  @media (max-width: 1260px) {
    .container-xl {
      padding-left: 0;
      padding-right: 0;
      max-width: 100%;
    }
  }
`;
  const HeaderDiv = qe.div`
  font-family: Arial, Helvetica, "Nimbus Sans L", "Liberation Sans", FreeSans,
    sans-serif;
  position: fixed;
  top: 0;
  right: 0;
  left: 0;
  z-index: 1030;
  *,
  *::before,
  *::after {
    box-sizing: border-box;
  }
  ul {
    list-style-type: none;
    padding: 0;
  }
  .container-xl {
    height: 100%;
    max-width: 1224px;
    margin-right: auto;
    margin-left: auto;
    width: 100%;
  }
  button,
  a {
    text-decoration: none;
    &:focus {
      outline: none !important;
      box-shadow: 0px 0px 0px 2px #ffffff, 0px 0px 0px 4px #191919 !important;
    }
  }
  @media (min-width: ${({ breakpoint }) => breakpoints[breakpoint]}) {
    &.scrolled {
      .universal-nav {
        min-height: 0;
        height: 0;
        overflow: hidden;
      }
      .title {
        margin: 0.5rem 0 0 0;
      }
      a.unit-name {
        display: none;
        transition: 0.5s cubic-bezier(0.19, 1, 0.19, 1);
      }
      a.subunit-name {
        margin: 0.52rem 0;
      }
      a.subunit-name,
      a.title-subunit-name {
        font-size: 1.5em;
        transition: 0.5s cubic-bezier(0.19, 1, 0.19, 1);
      }
      .navbar-brand img {
        height: 64px;
        transition: 0.5s cubic-bezier(0.19, 1, 0.19, 1);
        margin: 12px 1rem 12px 0;
      }
    }
  }
  @media (max-width: 1260px) {
    .container-xl {
      padding-left: 0;
      padding-right: 0;
      max-width: 100%;
    }
  }
`;
  const ASUHeader = /* @__PURE__ */ __name(({
    isPartner,
    navTree: rawNavTree,
    title,
    baseUrl,
    parentOrg,
    parentOrgUrl,
    partnerLogo,
    logo,
    loggedIn,
    userName,
    loginLink,
    onLoginClick,
    logoutLink,
    onLogoutClick,
    buttons,
    breakpoint,
    animateTitle,
    expandOnHover,
    mobileNavTree: rawMobileNavTree,
    searchUrl,
    site,
    renderDiv = "false"
  }) => {
    const navTree = tryAddActivePage(rawNavTree);
    const mobileNavTree = tryAddActivePage(rawMobileNavTree);
    const headerRef = r$1.useRef(null);
    const handleWindowScroll = /* @__PURE__ */ __name(() => {
      const curPos = window.scrollY;
      if (!(headerRef == null ? void 0 : headerRef.current)) return;
      if (curPos > headerRef.current.getBoundingClientRect().top) {
        headerRef.current.classList.add("scrolled");
      } else {
        headerRef.current.classList.remove("scrolled");
      }
    }, "handleWindowScroll");
    r$1.useEffect(() => {
      if (typeof window !== "undefined") {
        trackReactComponent({
          packageName: "component-header",
          component: "Component Header",
          type: "NA",
          configuration: {
            site,
            isPartner,
            searchUrl,
            navTree,
            parentOrg,
            buttons,
            mobileNavTree
          }
        });
      }
    }, []);
    r$1.useEffect(() => {
      window == null ? void 0 : window.addEventListener("scroll", handleWindowScroll);
      return () => window.removeEventListener("scroll", handleWindowScroll);
    }, []);
    const renderHeader = /* @__PURE__ */ __name(() => {
      const Wrapper2 = renderDiv === "true" ? HeaderDiv : Header;
      return /* @__PURE__ */ jsxRuntimeExports.jsx(Wrapper2, { id: "asuHeader", ref: headerRef, children: /* @__PURE__ */ jsxRuntimeExports.jsx(HeaderMain, {}) });
    }, "renderHeader");
    return /* @__PURE__ */ jsxRuntimeExports.jsx(
      AppContextProvider,
      {
        initialValue: {
          isPartner,
          navTree,
          title,
          baseUrl,
          parentOrg,
          parentOrgUrl,
          partnerLogo,
          logo,
          loggedIn,
          userName,
          loginLink,
          onLoginClick,
          logoutLink,
          onLogoutClick,
          buttons,
          breakpoint,
          animateTitle,
          expandOnHover,
          mobileNavTree,
          hasNavigation: !!(navTree == null ? void 0 : navTree.length) || !!(mobileNavTree == null ? void 0 : mobileNavTree.length),
          searchUrl,
          site
        },
        children: renderHeader()
      }
    );
  }, "ASUHeader");
  ASUHeader.propTypes = { ...HeaderPropTypes };
  ASUHeader.defaultProps = {
    isPartner: false,
    baseUrl: "/",
    breakpoint: "Xl",
    expandOnHover: false
  };
  const RenderReact = /* @__PURE__ */ __name((component, props, target) => {
    const root = createRoot(target);
    root.render(r$1.createElement(component, props));
  }, "RenderReact");
  const initGlobalHeader = /* @__PURE__ */ __name(({ targetSelector, props }) => {
    RenderReact(ASUHeader, props, document.querySelector(targetSelector));
  }, "initGlobalHeader");
  exports2.ASUFooter = ASUFooter;
  exports2.ASUHeader = ASUHeader;
  exports2.initASUFooter = initASUFooter;
  exports2.initGlobalHeader = initGlobalHeader;
  Object.defineProperty(exports2, Symbol.toStringTag, { value: "Module" });
});
/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
/*! @license DOMPurify 2.5.7 | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/2.5.7/LICENSE */
